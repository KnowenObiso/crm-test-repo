/* This object may not be sorted properly in the script due to cirular references. */
--
-- TQC_SETUPS_CURSOR_BACK  (Package) 
--
CREATE OR REPLACE PACKAGE TQ_CRM.TQC_SETUPS_CURSOR_back AS
  /******************************************************************************
     NAME:       TQC_SETUPS_CURSOR
     PURPOSE:
  
     REVISIONS:
     Ver        Date        Author           Description
     ---------  ----------  ---------------  ------------------------------------
     1.0        5/6/2010             1. Created this package.
  ******************************************************************************/

  FUNCTION MyFunction(Param1 IN NUMBER) RETURN NUMBER;
  PROCEDURE MyProcedure(Param1 IN NUMBER);

  TYPE organizations_rec IS RECORD(
    ORG_CODE          TQC_ORGANIZATIONS.ORG_CODE%TYPE,
    ORG_SHT_DESC      TQC_ORGANIZATIONS.ORG_SHT_DESC%TYPE,
    ORG_NAME          TQC_ORGANIZATIONS.ORG_NAME%TYPE,
    ORG_ADDRS         TQC_ORGANIZATIONS.ORG_ADDRS%TYPE,
    ORG_TWN_CODE      TQC_ORGANIZATIONS.ORG_TWN_CODE%TYPE,
    ORG_COU_CODE      TQC_ORGANIZATIONS.ORG_COU_CODE%TYPE,
    ORG_EMAIL_ADDRS   TQC_ORGANIZATIONS.ORG_EMAIL_ADDRS%TYPE,
    ORG_PHY_ADDRS     TQC_ORGANIZATIONS.ORG_PHY_ADDRS%TYPE,
    ORG_CUR_CODE      TQC_ORGANIZATIONS.ORG_CUR_CODE%TYPE,
    ORG_ZIP           TQC_ORGANIZATIONS.ORG_ZIP%TYPE,
    ORG_FAX           TQC_ORGANIZATIONS.ORG_FAX%TYPE,
    ORG_TEL1          TQC_ORGANIZATIONS.ORG_TEL1%TYPE,
    ORG_TEL2          TQC_ORGANIZATIONS.ORG_TEL2%TYPE,
    ORG_RPT_LOGO      TQC_ORGANIZATIONS.ORG_RPT_LOGO%TYPE,
    ORG_MOTTO         TQC_ORGANIZATIONS.ORG_MOTTO%TYPE,
    ORG_PIN_NO        TQC_ORGANIZATIONS.ORG_PIN_NO%TYPE,
    ORG_ED_CODE       TQC_ORGANIZATIONS.ORG_ED_CODE%TYPE,
    ORG_ITEM_ACC_CODE TQC_ORGANIZATIONS.ORG_ITEM_ACC_CODE%TYPE,
    ORG_OTHER_NAME    TQC_ORGANIZATIONS.ORG_OTHER_NAME%TYPE,
    ORG_TYPE          TQC_ORGANIZATIONS.ORG_TYPE%TYPE,
    ORG_WEB_BRN_CODE  TQC_ORGANIZATIONS.ORG_WEB_BRN_CODE%TYPE,
    ORG_WEB_ADDRS     TQC_ORGANIZATIONS.ORG_WEB_ADDRS%TYPE,
    ORG_AGN_CODE      TQC_ORGANIZATIONS.ORG_AGN_CODE%TYPE,
    ORG_DIRECTORS     TQC_ORGANIZATIONS.ORG_DIRECTORS%TYPE,
    ORG_LANG_CODE     TQC_ORGANIZATIONS.ORG_LANG_CODE%TYPE,
    ORG_AVATAR        TQC_ORGANIZATIONS.ORG_AVATAR%TYPE,
    CUR_SYMBOL        VARCHAR2(15),
    CUR_DESC          VARCHAR2(80),
    COU_NAME          VARCHAR2(50),
    TWN_NAME          VARCHAR2(50),
    ORG_STS_CODE      TQC_ORGANIZATIONS.ORG_STS_CODE%TYPE,
    STATE_NAME        VARCHAR2(50),
    ORG_GRP_LOGO      TQC_ORGANIZATIONS.ORG_GRP_LOGO%TYPE,
    AGN_NAME          TQC_AGENCIES.AGN_NAME%TYPE,
    ORG_VAT_NUMBER      TQC_ORGANIZATIONS.ORG_VAT_NUMBER%TYPE
    
    );

  TYPE organizations_ref IS REF CURSOR RETURN organizations_rec;
  PROCEDURE organizations(v_organizations_ref OUT organizations_ref,
                          v_org_code          TQC_ORGANIZATIONS.ORG_CODE%TYPE);

  TYPE organization_details_rec IS RECORD(
    ORG_CODE          TQC_ORGANIZATIONS.ORG_CODE%TYPE,
    ORG_SHT_DESC      TQC_ORGANIZATIONS.ORG_SHT_DESC%TYPE,
    ORG_NAME          TQC_ORGANIZATIONS.ORG_NAME%TYPE,
    ORG_ADDRS         TQC_ORGANIZATIONS.ORG_ADDRS%TYPE,
    ORG_TWN_CODE      TQC_ORGANIZATIONS.ORG_TWN_CODE%TYPE,
    ORG_COU_CODE      TQC_ORGANIZATIONS.ORG_COU_CODE%TYPE,
    ORG_EMAIL_ADDRS   TQC_ORGANIZATIONS.ORG_EMAIL_ADDRS%TYPE,
    ORG_PHY_ADDRS     TQC_ORGANIZATIONS.ORG_PHY_ADDRS%TYPE,
    ORG_CUR_CODE      TQC_ORGANIZATIONS.ORG_CUR_CODE%TYPE,
    ORG_ZIP           TQC_ORGANIZATIONS.ORG_ZIP%TYPE,
    ORG_FAX           TQC_ORGANIZATIONS.ORG_FAX%TYPE,
    ORG_TEL1          TQC_ORGANIZATIONS.ORG_TEL1%TYPE,
    ORG_TEL2          TQC_ORGANIZATIONS.ORG_TEL2%TYPE,
    ORG_RPT_LOGO      TQC_ORGANIZATIONS.ORG_RPT_LOGO%TYPE,
    ORG_MOTTO         TQC_ORGANIZATIONS.ORG_MOTTO%TYPE,
    ORG_PIN_NO        TQC_ORGANIZATIONS.ORG_PIN_NO%TYPE,
    ORG_ED_CODE       TQC_ORGANIZATIONS.ORG_ED_CODE%TYPE,
    ORG_ITEM_ACC_CODE TQC_ORGANIZATIONS.ORG_ITEM_ACC_CODE%TYPE,
    ORG_OTHER_NAME    TQC_ORGANIZATIONS.ORG_OTHER_NAME%TYPE,
    ORG_TYPE          TQC_ORGANIZATIONS.ORG_TYPE%TYPE,
    ORG_WEB_BRN_CODE  TQC_ORGANIZATIONS.ORG_WEB_BRN_CODE%TYPE,
    ORG_WEB_ADDRS     TQC_ORGANIZATIONS.ORG_WEB_ADDRS%TYPE,
    ORG_AGN_CODE      TQC_ORGANIZATIONS.ORG_AGN_CODE%TYPE,
    ORG_DIRECTORS     TQC_ORGANIZATIONS.ORG_DIRECTORS%TYPE,
    ORG_LANG_CODE     TQC_ORGANIZATIONS.ORG_LANG_CODE%TYPE,
    ORG_AVATAR        TQC_ORGANIZATIONS.ORG_AVATAR%TYPE,
    CUR_SYMBOL        VARCHAR2(15),
    CUR_DESC          VARCHAR2(80),
    COU_NAME          VARCHAR2(50),
    TWN_NAME          VARCHAR2(50),
    ORG_STS_CODE      TQC_ORGANIZATIONS.ORG_STS_CODE%TYPE,
    STATE_NAME        VARCHAR2(50),
    ORG_GRP_LOGO      TQC_ORGANIZATIONS.ORG_GRP_LOGO%TYPE
    
    );

  TYPE organization_details_ref IS REF CURSOR RETURN organization_details_rec;

  PROCEDURE organization_details(v_organization_details_ref OUT organization_details_ref,
                                 v_ORG_CODE                 TQC_ORGANIZATIONS.ORG_CODE%TYPE);

 TYPE countries_rec IS RECORD(
    COU_CODE                TQC_COUNTRIES.COU_CODE%TYPE,
    COU_SHT_DESC            TQC_COUNTRIES.COU_SHT_DESC%TYPE,
    COU_NAME                TQC_COUNTRIES.COU_NAME%TYPE,
    COU_BASE_CURR           TQC_COUNTRIES.COU_BASE_CURR%TYPE,
    COU_BASE_CURR_DESC      TQC_CURRENCIES.CUR_DESC%TYPE,
    COU_NATIONALITY         TQC_COUNTRIES.COU_NATIONALITY%TYPE,
    COU_ZIP_CODE            TQC_COUNTRIES.COU_ZIP_CODE%TYPE,
    COU_ADMIN_REG_TYPE      TQC_COUNTRIES.COU_ADMIN_REG_TYPE%TYPE,
    COU_ADMIN_REG_MANDATORY TQC_COUNTRIES.COU_ADMIN_REG_MANDATORY%TYPE,
    COU_SCHEGEN             TQC_COUNTRIES.COU_SCHEGEN%TYPE,
    COU_EMB_CODE            TQC_COUNTRIES.COU_EMB_CODE%TYPE,
    COU_CURR_SERIAL         TQC_COUNTRIES.COU_CURR_SERIAL%TYPE,
    COU_MOBILE_PREFIX            TQC_COUNTRIES.COU_MOBILE_PREFIX%TYPE,
    COU_CLIENT_NUMBER         TQC_COUNTRIES.COU_CLIENT_NUMBER%TYPE
    );

  TYPE countries_ref IS REF CURSOR RETURN countries_rec;
  PROCEDURE getcountries(v_countries_ref OUT countries_ref,v_county_name VARCHAR2 DEFAULT NULL,
  v_county_id VARCHAR2 default null,
  v_county_code VARCHAR2 default null);
  
  PROCEDURE get_countries(v_countries_ref OUT countries_ref, v_inbound VARCHAR2 DEFAULT NULL);
  
  FUNCTION getAllCountries RETURN countries_ref;

 TYPE countries_and_currency_rec IS RECORD(
    COU_CODE        TQC_COUNTRIES.COU_CODE%TYPE,
    COU_SHT_DESC    TQC_COUNTRIES.COU_SHT_DESC%TYPE,
    COU_NAME        TQC_COUNTRIES.COU_NAME%TYPE,
    COU_BASE_CURR   TQC_COUNTRIES.COU_BASE_CURR%TYPE,
    COU_NATIONALITY TQC_COUNTRIES.COU_NATIONALITY%TYPE,
    COU_ZIP_CODE    TQC_COUNTRIES.COU_ZIP_CODE%TYPE,
    CUR_SYMBOL      TQC_CURRENCIES.CUR_SYMBOL%TYPE,
    CUR_DESC        TQC_CURRENCIES.CUR_DESC%TYPE,
    COU_ADMIN_REG_TYPE      tqc_countries.COU_ADMIN_REG_TYPE%TYPE,
    COU_ADMIN_REG_MANDATORY        tqc_countries.COU_ADMIN_REG_MANDATORY%TYPE);
  TYPE countries_and_currency_ref IS REF CURSOR RETURN countries_and_currency_rec;
  PROCEDURE get_countries_and_currency(v_countries_and_currency_ref OUT countries_and_currency_ref);

  PROCEDURE get_specific_country(v_COU_CODE      TQC_COUNTRIES.COU_CODE%TYPE,
                                 v_countries_ref OUT countries_ref);

  TYPE towns_rec IS RECORD(
    
    TWN_CODE       TQC_TOWNS.TWN_CODE%TYPE,
    TWN_COU_CODE   TQC_TOWNS.TWN_COU_CODE%TYPE,
    TWN_SHT_DESC   TQC_TOWNS.TWN_SHT_DESC%TYPE,
    TWN_NAME       TQC_TOWNS.TWN_NAME%TYPE,
    TWN_STATE_CODE TQC_STATES.STS_CODE%TYPE,
    PST_DESC  tqc_postal_codes.PST_DESC%TYPE,
    PST_ZIP_CODE tqc_postal_codes.PST_ZIP_CODE%TYPE);

  TYPE towns_ref IS REF CURSOR RETURN towns_rec;

  PROCEDURE gettowns(v_towns_ref OUT towns_ref,
                     v_cou_code  TQC_TOWNS.TWN_COU_CODE%TYPE);
  FUNCTION getTownsByCountry(v_cou_code IN NUMBER) RETURN towns_ref;
  FUNCTION getTownsByState(v_state_code IN NUMBER) RETURN towns_ref;

  PROCEDURE get_specific_town(v_twn_code  TQC_TOWNS.TWN_CODE%TYPE,
                              v_towns_ref OUT towns_ref);

  TYPE states_rec IS RECORD(
    
    STS_CODE     TQC_STATES.STS_CODE%TYPE,
    STS_COU_CODE TQC_STATES.STS_COU_CODE%TYPE,
    STS_SHT_DESC TQC_STATES.STS_SHT_DESC%TYPE,
    STS_NAME     TQC_STATES.STS_NAME%TYPE);

  TYPE states_ref IS REF CURSOR RETURN states_rec;

  PROCEDURE getstates(v_states_ref OUT states_ref,
                      v_cou_code   TQC_STATES.STS_COU_CODE%TYPE);

  TYPE admin_region_rec IS RECORD(
    
    ADM_REG_CODE     TQC_ADMIN_REGIONS.ADM_REG_CODE %TYPE,
    ADM_REG_SHT_DESC TQC_ADMIN_REGIONS.ADM_REG_SHT_DESC %TYPE,
    ADM_REG_NAME     TQC_ADMIN_REGIONS.ADM_REG_NAME %TYPE,
    ADM_REG_COU_CODE TQC_ADMIN_REGIONS.ADM_REG_COU_CODE %TYPE);

  TYPE admin_region_ref IS REF CURSOR RETURN admin_region_rec;

  PROCEDURE get_admin_regions(v_admin_regions_ref OUT admin_region_ref,
                              v_adm_reg_cou_code  TQC_ADMIN_REGIONS.ADM_REG_COU_CODE%TYPE);
  TYPE postal_code_by_town_rec IS RECORD(
    
    PST_CODE     TQC_POSTAL_CODES.PST_CODE%TYPE,
    PST_TWN_CODE TQC_POSTAL_CODES.PST_TWN_CODE%TYPE,
    PST_DESC     TQC_POSTAL_CODES.PST_DESC%TYPE,
    PST_ZIP_CODE TQC_POSTAL_CODES.PST_ZIP_CODE%TYPE);

  TYPE postal_code_by_town_ref IS REF CURSOR RETURN postal_code_by_town_rec;

  PROCEDURE get_postal_codes_by_town(v_PST_TWN_CODE            TQC_POSTAL_CODES.PST_TWN_CODE%TYPE,
                                     v_postal_code_by_town_ref OUT postal_code_by_town_ref);

  FUNCTION getPostalCodesByTown(v_twn_code NUMBER)
    RETURN postal_code_by_town_ref;

  TYPE locations_rec IS RECORD(
    
    LOC_CODE     TQC_LOCATIONS.LOC_CODE%TYPE,
    LOC_TWN_CODE TQC_LOCATIONS.LOC_TWN_CODE%TYPE,
    LOC_SHT_DESC TQC_LOCATIONS.LOC_SHT_DESC%TYPE,
    LOC_NAME     TQC_LOCATIONS.LOC_NAME%TYPE);

  TYPE locations_ref IS REF CURSOR RETURN locations_rec;

  PROCEDURE get_locations_by_town(v_LOC_TWN_CODE  TQC_LOCATIONS.LOC_TWN_CODE%TYPE,
                                  v_locations_ref OUT locations_ref);

  TYPE currencies_rec IS RECORD(
    
    CUR_CODE         TQC_CURRENCIES.CUR_CODE%TYPE,
    CUR_SYMBOL       TQC_CURRENCIES.CUR_SYMBOL%TYPE,
    CUR_DESC         TQC_CURRENCIES.CUR_DESC%TYPE,
    CUR_RND          TQC_CURRENCIES.CUR_RND%TYPE,
    CUR_NUM_WORD     TQC_CURRENCIES.CUR_NUM_WORD%TYPE,
    CUR_DECIMAL_WORD TQC_CURRENCIES.CUR_DECIMAL_WORD%TYPE);

  TYPE currencies_ref IS REF CURSOR RETURN currencies_rec;

  PROCEDURE currencies(v_currencies_ref OUT currencies_ref);
  
  PROCEDURE get_currencies(v_currencies_ref OUT currencies_ref,v_cur_desc VARCHAR2);

  PROCEDURE get_currencies_exclude_curr(v_CUR_CODE       TQC_CURRENCIES.CUR_CODE%TYPE,
                                        v_currencies_ref OUT currencies_ref);

  TYPE currency_denominations_rec IS RECORD(
    
    CUD_CODE     TQC_CURRENCY_DENOMINATIONS.CUD_CODE%TYPE,
    CUD_CUR_CODE TQC_CURRENCY_DENOMINATIONS.CUD_CUR_CODE%TYPE,
    CUD_VALUE    TQC_CURRENCY_DENOMINATIONS.CUD_VALUE%TYPE,
    CUD_NAME     TQC_CURRENCY_DENOMINATIONS.CUD_NAME%TYPE,
    CUD_WEF      TQC_CURRENCY_DENOMINATIONS.CUD_WEF%TYPE);

  TYPE currency_denominations_ref IS REF CURSOR RETURN currency_denominations_rec;

  PROCEDURE get_currency_denominations(v_currency_denominations_ref OUT currency_denominations_ref);

  PROCEDURE get_curr_denominations_by_code(v_CUD_CUR_CODE               TQC_CURRENCY_DENOMINATIONS.CUD_CUR_CODE%TYPE,
                                           v_currency_denominations_ref OUT currency_denominations_ref);

  FUNCTION fetch_currency_name(v_cur_code NUMBER) RETURN VARCHAR2;

  TYPE currency_rates_rec IS RECORD(
    
    CRT_CODE          TQC_CURRENCY_RATES.CRT_CODE%TYPE,
    CRT_CUR_CODE      TQC_CURRENCY_RATES.CRT_CUR_CODE%TYPE,
    CRT_RATE          TQC_CURRENCY_RATES.CRT_RATE%TYPE,
    CRT_DATE          TQC_CURRENCY_RATES.CRT_DATE%TYPE,
    CRT_BASE_CUR_CODE TQC_CURRENCY_RATES.CRT_BASE_CUR_CODE%TYPE);

  TYPE currency_rates_ref IS REF CURSOR RETURN currency_rates_rec;

  PROCEDURE get_currency_rates(v_currency_rates_ref OUT currency_rates_ref);

  TYPE currency_rates_by_curr_rec IS RECORD(
    
    CRT_CODE          TQC_CURRENCY_RATES.CRT_CODE%TYPE,
    CRT_CUR_CODE      TQC_CURRENCY_RATES.CRT_CUR_CODE%TYPE,
    CRT_RATE          TQC_CURRENCY_RATES.CRT_RATE%TYPE,
    CRT_DATE          TQC_CURRENCY_RATES.CRT_DATE%TYPE,
    CRT_BASE_CUR_CODE TQC_CURRENCY_RATES.CRT_BASE_CUR_CODE%TYPE,
    CUR_DESC          TQC_CURRENCIES.CUR_CODE%TYPE,
    CRT_WEF          TQC_CURRENCY_RATES.CRT_WEF%TYPE,
    CRT_WET          TQC_CURRENCY_RATES.CRT_WET%TYPE);

  TYPE currency_rates_by_curr_ref IS REF CURSOR RETURN currency_rates_by_curr_rec;

  PROCEDURE get_currency_rates_by_currency(v_CRT_CUR_CODE       TQC_CURRENCY_RATES.CRT_CUR_CODE%TYPE,
                                           v_currency_rates_ref OUT currency_rates_by_curr_ref);

  TYPE regions_rec IS RECORD(
    
    REG_CODE                TQC_REGIONS.REG_CODE%TYPE,
    REG_ORG_CODE            TQC_REGIONS.REG_ORG_CODE%TYPE,
    REG_SHT_DESC            TQC_REGIONS.REG_SHT_DESC%TYPE,
    REG_NAME                TQC_REGIONS.REG_NAME%TYPE,
    REG_WEF                 TQC_REGIONS.REG_WEF%TYPE,
    REG_WET                 TQC_REGIONS.REG_WET%TYPE,
    REG_AGN_CODE            TQC_REGIONS.REG_AGN_CODE%TYPE,
    REG_POST_LEVEL          TQC_REGIONS.REG_POST_LEVEL%TYPE,
    REG_MNGR_ALLOWED        TQC_REGIONS.REG_MNGR_ALLOWED%TYPE,
    REG_OVERIDE_COMM_EARNED TQC_REGIONS.REG_OVERIDE_COMM_EARNED%TYPE,
    AGN_NAME                TQC_AGENCIES.AGN_NAME%TYPE,
    REG_BRN_MNGR_SEQ_NO     TQC_REGIONS.REG_BRN_MNGR_SEQ_NO%TYPE,
    REG_AGN_SEQ_NO          TQC_REGIONS.REG_AGN_SEQ_NO%TYPE,
    MANAGER                 TQC_AGENCIES.AGN_NAME%TYPE
    
    );

  TYPE regions_ref IS REF CURSOR RETURN regions_rec;

  PROCEDURE regions(v_regions_ref OUT regions_ref,
                    v_org_code    TQC_REGIONS.REG_ORG_CODE%TYPE);

  TYPE branches_rec IS RECORD(
    BRN_CODE        TQC_BRANCHES.BRN_CODE%TYPE,
    BRN_SHT_DESC    TQC_BRANCHES.BRN_SHT_DESC%TYPE,
    BRN_REG_CODE    TQC_BRANCHES.BRN_REG_CODE%TYPE,
    BRN_NAME        TQC_BRANCHES.BRN_NAME%TYPE,
    BRN_PHY_ADDRS   TQC_BRANCHES.BRN_PHY_ADDRS%TYPE,
    BRN_EMAIL_ADDRS TQC_BRANCHES.BRN_EMAIL_ADDRS%TYPE,
    BRN_POST_ADDRS  TQC_BRANCHES.BRN_POST_ADDRS%TYPE,
    BRN_TWN_CODE    TQC_BRANCHES.BRN_TWN_CODE%TYPE,
    BRN_COU_CODE    TQC_BRANCHES.BRN_COU_CODE%TYPE,
    BRN_CONTACT     TQC_BRANCHES.BRN_CONTACT%TYPE,
    BRN_MANAGER     TQC_BRANCHES.BRN_MANAGER%TYPE,
    BRN_TEL         TQC_BRANCHES.BRN_TEL%TYPE,
    BRN_FAX         TQC_BRANCHES.BRN_FAX%TYPE,
    BRN_GEN_POL_CLM TQC_BRANCHES.BRN_GEN_POL_CLM%TYPE,
    BRN_BNS_CODE    TQC_BRANCHES.BRN_BNS_CODE%TYPE,
    BRN_AGN_CODE    TQC_BRANCHES.BRN_AGN_CODE%TYPE,
    BRN_POST_LEVEL  TQC_BRANCHES.BRN_POST_LEVEL%TYPE,
    MANAGER         TQC_AGENCIES.AGN_NAME%TYPE
    
    );

  TYPE branches_ref IS REF CURSOR RETURN branches_rec;

  PROCEDURE branches(v_branches_ref OUT branches_ref,
                     v_reg_code     TQC_BRANCHES.BRN_REG_CODE%TYPE);

  TYPE get_branches_rec IS RECORD(
    BRN_CODE                TQC_BRANCHES.BRN_CODE%TYPE,
    BRN_SHT_DESC            TQC_BRANCHES.BRN_SHT_DESC%TYPE,
    BRN_REG_CODE            TQC_BRANCHES.BRN_REG_CODE%TYPE,
    BRN_NAME                TQC_BRANCHES.BRN_NAME%TYPE,
    BRN_PHY_ADDRS           TQC_BRANCHES.BRN_PHY_ADDRS%TYPE,
    BRN_EMAIL_ADDRS         TQC_BRANCHES.BRN_EMAIL_ADDRS%TYPE,
    BRN_POST_ADDRS          TQC_BRANCHES.BRN_POST_ADDRS%TYPE,
    BRN_TWN_CODE            TQC_BRANCHES.BRN_TWN_CODE%TYPE,
    BRN_COU_CODE            TQC_BRANCHES.BRN_COU_CODE%TYPE,
    BRN_CONTACT             TQC_BRANCHES.BRN_CONTACT%TYPE,
    BRN_MANAGER             TQC_BRANCHES.BRN_MANAGER%TYPE,
    BRN_TEL                 TQC_BRANCHES.BRN_TEL%TYPE,
    BRN_FAX                 TQC_BRANCHES.BRN_FAX%TYPE,
    BRN_GEN_POL_CLM         TQC_BRANCHES.BRN_GEN_POL_CLM%TYPE,
    BRN_BNS_CODE            TQC_BRANCHES.BRN_BNS_CODE%TYPE,
    BRN_AGN_CODE            TQC_BRANCHES.BRN_AGN_CODE%TYPE,
    BRN_POST_LEVEL          TQC_BRANCHES.BRN_POST_LEVEL%TYPE,
    BRN_MNGR_ALLOWED        TQC_BRANCHES.BRN_MNGR_ALLOWED%TYPE,
    BRN_OVERIDE_COMM_EARNED TQC_BRANCHES.BRN_OVERIDE_COMM_EARNED%TYPE,
    BRN_BRA_MNGR_SEQ_NO     TQC_BRANCHES.BRN_BRA_MNGR_SEQ_NO%TYPE,
    BRN_AGN_SEQ_NO          TQC_BRANCHES.BRN_AGN_SEQ_NO%TYPE,
     BRN_POL_SEQ     TQC_BRANCHES.BRN_POL_SEQ%TYPE,
    BRN_PROP_SEQ          TQC_BRANCHES.BRN_PROP_SEQ%TYPE
     
    );

  TYPE get_branches_ref IS REF CURSOR RETURN get_branches_rec;

  PROCEDURE get_branches(v_branches_ref OUT get_branches_ref,
                         v_reg_code     TQC_BRANCHES.BRN_REG_CODE%TYPE);
  PROCEDURE get_Orgbranches(v_branches_ref OUT get_branches_ref,
                            v_orgCode      NUMBER,
                            v_regCode      NUMBER DEFAULT NULL);

  PROCEDURE get_specific_branch(v_brn_code     TQC_BRANCHES.BRN_CODE%TYPE,
                                v_branches_ref OUT branches_ref);

  TYPE branch_agencies_rec IS RECORD(
    
    bra_code       tqc_branch_agencies.bra_code%type,
    bra_brn_code   tqc_branch_agencies.bra_brn_code%type,
    bra_sht_desc   tqc_branch_agencies.bra_sht_desc%type,
    bra_name       tqc_branch_agencies.bra_name%type,
    bra_status     tqc_branch_agencies.bra_status%type,
    bra_manager    tqc_branch_agencies.bra_manager%type,
    bra_agn_code   tqc_branch_agencies.bra_agn_code%type,
    bra_post_level tqc_branch_agencies.bra_post_level%type
    
    );

  TYPE branch_agencies_ref IS REF CURSOR RETURN branch_agencies_rec;
  TYPE get_branch_agencies_rec IS RECORD(
    
    bra_code                tqc_branch_agencies.bra_code%type,
    bra_brn_code            tqc_branch_agencies.bra_brn_code%type,
    bra_sht_desc            tqc_branch_agencies.bra_sht_desc%type,
    bra_name                tqc_branch_agencies.bra_name%type,
    bra_status              tqc_branch_agencies.bra_status%type,
    bra_manager             tqc_branch_agencies.bra_manager%type,
    bra_agn_code            tqc_branch_agencies.bra_agn_code%type,
    bra_post_level          tqc_branch_agencies.bra_post_level%type,
    BRA_MNGR_ALLOWED        tqc_branch_agencies.BRA_MNGR_ALLOWED%TYPE,
    BRA_OVERIDE_COMM_EARNED tqc_branch_agencies.BRA_OVERIDE_COMM_EARNED%TYPE,
    BRA_BRU_MNGR_SEQ_NO     tqc_branch_agencies.BRA_BRU_MNGR_SEQ_NO%TYPE,
    BRA_AGN_SEQ_NO          tqc_branch_agencies.BRA_AGN_SEQ_NO%TYPE,
     BRA_POL_SEQ     tqc_branch_agencies.BRA_POL_SEQ%TYPE,
    BRA_PROP_SEQ          tqc_branch_agencies.BRA_PROP_SEQ%TYPE
     
    );

  TYPE get_branch_agencies_ref IS REF CURSOR RETURN get_branch_agencies_rec;
  PROCEDURE get_branch_agencies(v_branch_agencies_ref OUT get_branch_agencies_ref,
                                v_brn_code            tqc_branch_agencies.bra_brn_code%type);

  TYPE branch_units_rec IS RECORD(
    
    BRU_CODE       TQC_BRANCH_UNITS.BRU_CODE%TYPE,
    BRU_BRN_CODE   TQC_BRANCH_UNITS.BRU_BRN_CODE%TYPE,
    BRU_SHT_DESC   TQC_BRANCH_UNITS.BRU_SHT_DESC%TYPE,
    BRU_NAME       TQC_BRANCH_UNITS.BRU_NAME%TYPE,
    BRU_SUPERVISOR TQC_BRANCH_UNITS.BRU_SUPERVISOR%TYPE,
    BRU_STATUS     TQC_BRANCH_UNITS.BRU_STATUS%TYPE,
    BRU_AGN_CODE   TQC_BRANCH_UNITS.BRU_AGN_CODE%TYPE,
    BRU_BRA_CODE   TQC_BRANCH_UNITS.BRU_BRA_CODE%TYPE,
    BRU_MANAGER    TQC_BRANCH_UNITS.BRU_MANAGER%TYPE,
    BRU_POST_LEVEL TQC_BRANCH_UNITS.BRU_POST_LEVEL%TYPE
    
    );

  TYPE branch_units_ref IS REF CURSOR RETURN branch_units_rec;

  PROCEDURE branch_units(v_branch_units_ref OUT branch_units_ref,
                         v_brn_code         TQC_BRANCH_UNITS.BRU_BRN_CODE%TYPE);
  TYPE get_branch_units_rec IS RECORD(
    
    BRU_CODE                TQC_BRANCH_UNITS.BRU_CODE%TYPE,
    BRU_BRN_CODE            TQC_BRANCH_UNITS.BRU_BRN_CODE%TYPE,
    BRU_SHT_DESC            TQC_BRANCH_UNITS.BRU_SHT_DESC%TYPE,
    BRU_NAME                TQC_BRANCH_UNITS.BRU_NAME%TYPE,
    BRU_SUPERVISOR          TQC_BRANCH_UNITS.BRU_SUPERVISOR%TYPE,
    BRU_STATUS              TQC_BRANCH_UNITS.BRU_STATUS%TYPE,
    BRU_AGN_CODE            TQC_BRANCH_UNITS.BRU_AGN_CODE%TYPE,
    BRU_BRA_CODE            TQC_BRANCH_UNITS.BRU_BRA_CODE%TYPE,
    BRU_MANAGER             TQC_BRANCH_UNITS.BRU_MANAGER%TYPE,
    BRU_POST_LEVEL          TQC_BRANCH_UNITS.BRU_POST_LEVEL%TYPE,
    BRU_MNGR_ALLOWED        TQC_BRANCH_UNITS.BRU_MNGR_ALLOWED%TYPE,
    BRU_OVERIDE_COMM_EARNED TQC_BRANCH_UNITS.BRU_OVERIDE_COMM_EARNED%TYPE,
    BRU_AGN_SEQ_NO          TQC_BRANCH_UNITS.BRU_AGN_SEQ_NO%TYPE,
    BRU_POL_SEQ TQC_BRANCH_UNITS.BRU_POL_SEQ%TYPE,
    BRU_PROP_SEQ          TQC_BRANCH_UNITS.BRU_PROP_SEQ%TYPE
   
    );

  TYPE get_branch_units_ref IS REF CURSOR RETURN get_branch_units_rec;

  PROCEDURE get_branch_units(v_branch_units_ref OUT get_branch_units_ref,
                             v_brn_code         TQC_BRANCH_UNITS.BRU_BRN_CODE%TYPE);
  PROCEDURE GET_BRANCH_AGENCY_UNITS(v_branch_units_ref OUT get_branch_units_ref,
                                    v_bra_code         TQC_BRANCH_UNITS.BRU_BRA_CODE%TYPE);

  TYPE branch_names_rec IS RECORD(
    
    BNS_CODE        TQC_BRANCH_NAMES.BNS_CODE%TYPE,
    BNS_SHT_DESC    TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_NAME        TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_PHY_ADDRS   TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_EMAIL_ADDRS TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_POST_ADDRS  TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_TWN_CODE    TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_COU_CODE    TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_CONTACT     TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_MANAGER     TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_TEL         TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_FAX         TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE
    
    );

  TYPE branch_names_ref IS REF CURSOR RETURN branch_names_rec;

  PROCEDURE branch_names(v_branch_names_ref OUT branch_names_ref);

  TYPE agencies_rec IS RECORD(
    
    AGN_CODE     TQC_AGENCIES.AGN_CODE%TYPE,
    AGN_SHT_DESC TQC_AGENCIES.AGN_SHT_DESC%TYPE,
    AGN_NAME     TQC_AGENCIES.AGN_NAME%TYPE
    
    );

  TYPE agencies_ref IS REF CURSOR RETURN agencies_rec;
  PROCEDURE agencies(v_agencies_ref OUT agencies_ref);

  TYPE all_agencies_rec IS RECORD(
    
    AGN_CODE              TQC_AGENCIES.AGN_CODE%TYPE,
    AGN_ACT_CODE          TQC_AGENCIES.AGN_ACT_CODE%TYPE,
    AGN_SHT_DESC          TQC_AGENCIES.AGN_SHT_DESC%TYPE,
    AGN_NAME              TQC_AGENCIES.AGN_NAME%TYPE,
    AGN_PHYSICAL_ADDRESS  TQC_AGENCIES.AGN_PHYSICAL_ADDRESS%TYPE,
    AGN_POSTAL_ADDRESS    TQC_AGENCIES.AGN_POSTAL_ADDRESS%TYPE,
    AGN_TWN_CODE          TQC_AGENCIES.AGN_TWN_CODE%TYPE,
    AGN_COU_CODE          TQC_AGENCIES.AGN_COU_CODE%TYPE,
    AGN_EMAIL_ADDRESS     TQC_AGENCIES.AGN_EMAIL_ADDRESS%TYPE,
    AGN_WEB_ADDRESS       TQC_AGENCIES.AGN_WEB_ADDRESS%TYPE,
    AGN_ZIP               TQC_AGENCIES.AGN_ZIP%TYPE,
    AGN_CONTACT_PERSON    TQC_AGENCIES.AGN_CONTACT_PERSON%TYPE,
    AGN_CONTACT_TITLE     TQC_AGENCIES.AGN_CONTACT_TITLE%TYPE,
    AGN_TEL1              TQC_AGENCIES.AGN_TEL1%TYPE,
    AGN_TEL2              TQC_AGENCIES.AGN_TEL2%TYPE,
    AGN_FAX               TQC_AGENCIES.AGN_FAX%TYPE,
    AGN_ACC_NO            TQC_AGENCIES.AGN_ACC_NO%TYPE,
    AGN_PIN               TQC_AGENCIES.AGN_PIN%TYPE,
    AGN_AGENT_COMMISSION  TQC_AGENCIES.AGN_AGENT_COMMISSION%TYPE,
    AGN_CREDIT_ALLOWED    TQC_AGENCIES.AGN_CREDIT_ALLOWED%TYPE,
    AGN_AGENT_WHT_TAX     TQC_AGENCIES.AGN_AGENT_WHT_TAX%TYPE,
    AGN_PRINT_DBNOTE      TQC_AGENCIES.AGN_PRINT_DBNOTE%TYPE,
    AGN_STATUS            TQC_AGENCIES.AGN_STATUS%TYPE,
    AGN_DATE_CREATED      TQC_AGENCIES.AGN_DATE_CREATED%TYPE,
    AGN_CREATED_BY        TQC_AGENCIES.AGN_CREATED_BY%TYPE,
    AGN_REG_CODE          TQC_AGENCIES.AGN_REG_CODE%TYPE,
    AGN_COMM_RESERVE_RATE TQC_AGENCIES.AGN_COMM_RESERVE_RATE%TYPE,
    AGN_ANNUAL_BUDGET     TQC_AGENCIES.AGN_ANNUAL_BUDGET%TYPE,
    AGN_STATUS_EFF_DATE   TQC_AGENCIES.AGN_STATUS_EFF_DATE%TYPE,
    AGN_CREDIT_PERIOD     TQC_AGENCIES.AGN_CREDIT_PERIOD%TYPE,
    AGN_COMM_STAT_EFF_DT  TQC_AGENCIES.AGN_COMM_STAT_EFF_DT%TYPE,
    AGN_COMM_STATUS_DT    TQC_AGENCIES.AGN_COMM_STATUS_DT%TYPE,
    AGN_COMM_ALLOWED      TQC_AGENCIES.AGN_COMM_ALLOWED%TYPE,
    AGN_CHECKED           TQC_AGENCIES.AGN_CHECKED%TYPE,
    AGN_CHECKED_BY        TQC_AGENCIES.AGN_CHECKED_BY%TYPE,
    AGN_CHECK_DATE        TQC_AGENCIES.AGN_CHECK_DATE%TYPE,
    AGN_COMP_COMM_ARREARS TQC_AGENCIES.AGN_COMP_COMM_ARREARS%TYPE,
    AGN_REINSURER         TQC_AGENCIES.AGN_REINSURER%TYPE,
    AGN_BRN_CODE          TQC_AGENCIES.AGN_BRN_CODE%TYPE,
    AGN_TOWN              TQC_AGENCIES.AGN_TOWN%TYPE,
    AGN_COUNTRY           TQC_AGENCIES.AGN_COUNTRY%TYPE,
    AGN_STATUS_DESC       TQC_AGENCIES.AGN_STATUS_DESC%TYPE,
    AGN_ID_NO             TQC_AGENCIES.AGN_ID_NO%TYPE,
    AGN_CON_CODE          TQC_AGENCIES.AGN_CON_CODE%TYPE,
    AGN_AGN_CODE          TQC_AGENCIES.AGN_AGN_CODE%TYPE,
    AGN_SMS_TEL           TQC_AGENCIES.AGN_SMS_TEL%TYPE,
    AGN_AHC_CODE          TQC_AGENCIES.AGN_AHC_CODE%TYPE,
    AGN_SEC_CODE          TQC_AGENCIES.AGN_SEC_CODE%TYPE,
    AGN_AGNC_CLASS_CODE   TQC_AGENCIES.AGN_AGNC_CLASS_CODE%TYPE,
    AGN_EXPIRY_DATE       TQC_AGENCIES.AGN_EXPIRY_DATE%TYPE,
    AGN_LICENSE_NO        TQC_AGENCIES.AGN_LICENSE_NO%TYPE,
    AGN_RUNOFF            TQC_AGENCIES.AGN_RUNOFF%TYPE,
    AGN_LICENSED          TQC_AGENCIES.AGN_LICENSED%TYPE,
    AGN_LICENSE_GRACE_PR  TQC_AGENCIES.AGN_LICENSE_GRACE_PR%TYPE,
    AGN_OLD_ACC_NO        TQC_AGENCIES.AGN_OLD_ACC_NO%TYPE,
    AGN_STATUS_REMARKS    TQC_AGENCIES.AGN_STATUS_REMARKS%TYPE,
    BRN_NAME              TQC_BRANCHES.BRN_NAME%TYPE,
    AHC_NAME              TQC_AGENCY_HOLDING_COMPANY.AHC_NAME%TYPE,
    SEC_NAME              TQC_SECTORS.SEC_NAME%TYPE,
    AGNC_CLASS_DESC       TQC_AGENCIES_CLASSES.AGNC_CLASS_DESC%TYPE);

  TYPE all_agencies_ref IS REF CURSOR RETURN all_agencies_rec;
  PROCEDURE get_agencies(v_AGN_ACT_CODE     IN TQC_AGENCIES.AGN_ACT_CODE%TYPE,
                         v_all_agencies_ref OUT all_agencies_ref);
 TYPE agency_info_rec IS RECORD(
    
    AGN_CODE              TQC_AGENCIES.AGN_CODE%TYPE,
    AGN_ACT_CODE          TQC_AGENCIES.AGN_ACT_CODE%TYPE,
    AGN_SHT_DESC          TQC_AGENCIES.AGN_SHT_DESC%TYPE,
    AGN_NAME              TQC_AGENCIES.AGN_NAME%TYPE,
    AGN_PHYSICAL_ADDRESS  TQC_AGENCIES.AGN_PHYSICAL_ADDRESS%TYPE,
    AGN_POSTAL_ADDRESS    TQC_AGENCIES.AGN_POSTAL_ADDRESS%TYPE,
    AGN_TWN_CODE          TQC_AGENCIES.AGN_TWN_CODE%TYPE,
    AGN_COU_CODE          TQC_AGENCIES.AGN_COU_CODE%TYPE,
    AGN_EMAIL_ADDRESS     TQC_AGENCIES.AGN_EMAIL_ADDRESS%TYPE,
    AGN_WEB_ADDRESS       TQC_AGENCIES.AGN_WEB_ADDRESS%TYPE,
    AGN_ZIP               TQC_AGENCIES.AGN_ZIP%TYPE,
    AGN_CONTACT_PERSON    TQC_AGENCIES.AGN_CONTACT_PERSON%TYPE,
    AGN_CONTACT_TITLE     TQC_AGENCIES.AGN_CONTACT_TITLE%TYPE,
    AGN_TEL1              TQC_AGENCIES.AGN_TEL1%TYPE,
    AGN_TEL2              TQC_AGENCIES.AGN_TEL2%TYPE,
    AGN_FAX               TQC_AGENCIES.AGN_FAX%TYPE,
    AGN_ACC_NO            TQC_AGENCIES.AGN_ACC_NO%TYPE,
    AGN_PIN               TQC_AGENCIES.AGN_PIN%TYPE,
    AGN_AGENT_COMMISSION  TQC_AGENCIES.AGN_AGENT_COMMISSION%TYPE,
    AGN_CREDIT_ALLOWED    TQC_AGENCIES.AGN_CREDIT_ALLOWED%TYPE,
    AGN_AGENT_WHT_TAX     TQC_AGENCIES.AGN_AGENT_WHT_TAX%TYPE,
    AGN_PRINT_DBNOTE      TQC_AGENCIES.AGN_PRINT_DBNOTE%TYPE,
    AGN_STATUS            TQC_AGENCIES.AGN_STATUS%TYPE,
    AGN_DATE_CREATED      TQC_AGENCIES.AGN_DATE_CREATED%TYPE,
    AGN_CREATED_BY        TQC_AGENCIES.AGN_CREATED_BY%TYPE,
    AGN_REG_CODE          TQC_AGENCIES.AGN_REG_CODE%TYPE,
    AGN_COMM_RESERVE_RATE TQC_AGENCIES.AGN_COMM_RESERVE_RATE%TYPE,
    AGN_ANNUAL_BUDGET     TQC_AGENCIES.AGN_ANNUAL_BUDGET%TYPE,
    AGN_STATUS_EFF_DATE   TQC_AGENCIES.AGN_STATUS_EFF_DATE%TYPE,
    AGN_CREDIT_PERIOD     TQC_AGENCIES.AGN_CREDIT_PERIOD%TYPE,
    AGN_COMM_STAT_EFF_DT  TQC_AGENCIES.AGN_COMM_STAT_EFF_DT%TYPE,
    AGN_COMM_STATUS_DT    TQC_AGENCIES.AGN_COMM_STATUS_DT%TYPE,
    AGN_COMM_ALLOWED      TQC_AGENCIES.AGN_COMM_ALLOWED%TYPE,
    AGN_CHECKED           TQC_AGENCIES.AGN_CHECKED%TYPE,
    AGN_CHECKED_BY        TQC_AGENCIES.AGN_CHECKED_BY%TYPE,
    AGN_CHECK_DATE        TQC_AGENCIES.AGN_CHECK_DATE%TYPE,
    AGN_COMP_COMM_ARREARS TQC_AGENCIES.AGN_COMP_COMM_ARREARS%TYPE,
    AGN_REINSURER         TQC_AGENCIES.AGN_REINSURER%TYPE,
    AGN_BRN_CODE          TQC_AGENCIES.AGN_BRN_CODE%TYPE,
    AGN_TOWN              TQC_AGENCIES.AGN_TOWN%TYPE,
    AGN_COUNTRY           TQC_AGENCIES.AGN_COUNTRY%TYPE,
    AGN_STATUS_DESC       TQC_AGENCIES.AGN_STATUS_DESC%TYPE,
    AGN_ID_NO             TQC_AGENCIES.AGN_ID_NO%TYPE,
    AGN_CON_CODE          TQC_AGENCIES.AGN_CON_CODE%TYPE,
    AGN_AGN_CODE          TQC_AGENCIES.AGN_AGN_CODE%TYPE,
    AGN_SMS_TEL           TQC_AGENCIES.AGN_SMS_TEL%TYPE,
    AGN_AHC_CODE          TQC_AGENCIES.AGN_AHC_CODE%TYPE,
    AGN_SEC_CODE          TQC_AGENCIES.AGN_SEC_CODE%TYPE,
    AGN_AGNC_CLASS_CODE   TQC_AGENCIES.AGN_AGNC_CLASS_CODE%TYPE,
    AGN_EXPIRY_DATE       TQC_AGENCIES.AGN_EXPIRY_DATE%TYPE,
    AGN_LICENSE_NO        TQC_AGENCIES.AGN_LICENSE_NO%TYPE,
    AGN_RUNOFF            TQC_AGENCIES.AGN_RUNOFF%TYPE,
    AGN_LICENSED          TQC_AGENCIES.AGN_LICENSED%TYPE,
    AGN_LICENSE_GRACE_PR  TQC_AGENCIES.AGN_LICENSE_GRACE_PR%TYPE,
    AGN_OLD_ACC_NO        TQC_AGENCIES.AGN_OLD_ACC_NO%TYPE,
    AGN_STATUS_REMARKS    TQC_AGENCIES.AGN_STATUS_REMARKS%TYPE,
    BNK_CODE              TQC_BANKS.BNK_CODE%TYPE,
    BNK_BANK_NAME         TQC_BANKS.BNK_BANK_NAME%TYPE,
    BBR_CODE              TQC_BANK_BRANCHES.BBR_CODE%TYPE,
    BBR_BRANCH_NAME       TQC_BANK_BRANCHES.BBR_BRANCH_NAME%TYPE,
    AGN_BANK_ACC_NO       TQC_AGENCIES.AGN_BANK_ACC_NO%TYPE,
    AGN_UNIQUE_PREFIX     TQC_AGENCIES.AGN_UNIQUE_PREFIX%TYPE,
    COU_ADMIN_REG_TYPE    TQC_COUNTRIES.COU_ADMIN_REG_TYPE%TYPE,
    AGN_STATE_CODE        TQC_AGENCIES.AGN_STATE_CODE%TYPE,
    STS_NAME              TQC_STATES.STS_NAME%TYPE,
    AGN_CRDT_RTING        VARCHAR2(20),
    clnt_name              TQC_CLIENTS.clnt_name%TYPE,
    accountmanager varchar2(200),
    PROM_TRANSACTION_DATE        LMS_AGENT_PROMOTION.PROM_TRANSACTION_DATE%TYPE,
    prom_transaction_type              LMS_AGENT_PROMOTION.prom_transaction_type%TYPE,
    prom_demo_promo_type              LMS_AGENT_PROMOTION.prom_demo_promo_type%TYPE,
    BRN_NAME              TQC_BRANCHES.BRN_NAME%TYPE,
    BRA_NAME              TQC_BRANCH_AGENCIES.BRA_NAME%TYPE,
    BRN_CODE              TQC_BRANCHES.BRN_CODE%TYPE,
    BRA_UNT_SHT_DESC_PREFIX              TQC_BRANCH_AGENCIES.BRA_UNT_SHT_DESC_PREFIX%TYPE,
         BRU_UNT_SHT_DESC_PREFIX                  tqc_branch_units.BRU_UNT_SHT_DESC_PREFIX%TYPE,
        BRU_AGN_SEQ_NO              tqc_branch_units.BRU_AGN_SEQ_NO%TYPE,
         PROM_PRECONTRACT_AGN_SEQ              LMS_AGENT_PROMOTION.PROM_PRECONTRACT_AGN_SEQ%TYPE,
            COU_ZIP_CODE          TQC_COUNTRIES.COU_ZIP_CODE%TYPE,
    AGN_ACCOUNT_MANAGER        TQC_AGENCIES.AGN_ACCOUNT_MANAGER%TYPE,
     agn_credit_limit        TQC_AGENCIES.AGN_CREDIT_LIMIT%TYPE,
       BRU_CODE        TQC_BRANCH_UNITS.BRU_CODE%TYPE,
     BRU_NAME        TQC_BRANCH_UNITS.BRU_NAME%TYPE,
     AGN_LOCAL_INTERNATIONAL        TQC_AGENCIES.AGN_LOCAL_INTERNATIONAL%TYPE,
      AGN_REGULATOR_NUMBER        TQC_AGENCIES.AGN_REGULATOR_NUMBER%TYPE,
      AGN_AUTHORISED        TQC_AGENCIES.AGN_AUTHORISED%TYPE,
      AGN_RORG_CODE        TQC_AGENCIES.AGN_RORG_CODE%TYPE,
      AGN_ORS_CODE        TQC_AGENCIES.AGN_ORS_CODE%TYPE,
      RORG_DESC        TQC_RATING_ORGANIZATIONS.RORG_DESC%TYPE,
      ORS_DESC        TQC_ORG_RATING_STARNDARDS.ORS_DESC%TYPE,
      AGN_ALLOCATE_CERT        TQC_AGENCIES.AGN_ALLOCATE_CERT%TYPE,
     HOLDING_COMPANIES VARCHAR2(200),
     AGN_BOUNCED_CHQ        TQC_AGENCIES.AGN_BOUNCED_CHQ%TYPE,
     AGN_BPN_CODE        TQC_AGENCIES.AGN_BPN_CODE%TYPE,
     BPN_NAME        TQC_BUSINESS_PERSONS.BPN_NAME%TYPE,
     AGN_AGENT_TYPE        TQC_AGENCIES.AGN_AGENT_TYPE%TYPE,
     AGN_GROUP        TQC_AGENCIES.AGN_GROUP%TYPE
     
     );
  TYPE agency_info_ref IS REF CURSOR RETURN agency_info_rec;


  TYPE agency_info_by_name_rec IS RECORD(
    
    AGN_CODE              TQC_AGENCIES.AGN_CODE%TYPE,
    AGN_ACT_CODE          TQC_AGENCIES.AGN_ACT_CODE%TYPE,
    AGN_SHT_DESC          TQC_AGENCIES.AGN_SHT_DESC%TYPE,
    AGN_NAME              TQC_AGENCIES.AGN_NAME%TYPE,
    AGN_PHYSICAL_ADDRESS  TQC_AGENCIES.AGN_PHYSICAL_ADDRESS%TYPE,
    AGN_POSTAL_ADDRESS    TQC_AGENCIES.AGN_POSTAL_ADDRESS%TYPE,
    AGN_TWN_CODE          TQC_AGENCIES.AGN_TWN_CODE%TYPE,
    AGN_COU_CODE          TQC_AGENCIES.AGN_COU_CODE%TYPE,
    AGN_EMAIL_ADDRESS     TQC_AGENCIES.AGN_EMAIL_ADDRESS%TYPE,
    AGN_WEB_ADDRESS       TQC_AGENCIES.AGN_WEB_ADDRESS%TYPE,
    AGN_ZIP               TQC_AGENCIES.AGN_ZIP%TYPE,
    AGN_CONTACT_PERSON    TQC_AGENCIES.AGN_CONTACT_PERSON%TYPE,
    AGN_CONTACT_TITLE     TQC_AGENCIES.AGN_CONTACT_TITLE%TYPE,
    AGN_TEL1              TQC_AGENCIES.AGN_TEL1%TYPE,
    AGN_TEL2              TQC_AGENCIES.AGN_TEL2%TYPE,
    AGN_FAX               TQC_AGENCIES.AGN_FAX%TYPE,
    AGN_ACC_NO            TQC_AGENCIES.AGN_ACC_NO%TYPE,
    AGN_PIN               TQC_AGENCIES.AGN_PIN%TYPE,
    AGN_AGENT_COMMISSION  TQC_AGENCIES.AGN_AGENT_COMMISSION%TYPE,
    AGN_CREDIT_ALLOWED    TQC_AGENCIES.AGN_CREDIT_ALLOWED%TYPE,
    AGN_AGENT_WHT_TAX     TQC_AGENCIES.AGN_AGENT_WHT_TAX%TYPE,
    AGN_PRINT_DBNOTE      TQC_AGENCIES.AGN_PRINT_DBNOTE%TYPE,
    AGN_STATUS            TQC_AGENCIES.AGN_STATUS%TYPE,
    AGN_DATE_CREATED      TQC_AGENCIES.AGN_DATE_CREATED%TYPE,
    AGN_CREATED_BY        TQC_AGENCIES.AGN_CREATED_BY%TYPE,
    AGN_REG_CODE          TQC_AGENCIES.AGN_REG_CODE%TYPE,
    AGN_COMM_RESERVE_RATE TQC_AGENCIES.AGN_COMM_RESERVE_RATE%TYPE,
    AGN_ANNUAL_BUDGET     TQC_AGENCIES.AGN_ANNUAL_BUDGET%TYPE,
    AGN_STATUS_EFF_DATE   TQC_AGENCIES.AGN_STATUS_EFF_DATE%TYPE,
    AGN_CREDIT_PERIOD     TQC_AGENCIES.AGN_CREDIT_PERIOD%TYPE,
    AGN_COMM_STAT_EFF_DT  TQC_AGENCIES.AGN_COMM_STAT_EFF_DT%TYPE,
    AGN_COMM_STATUS_DT    TQC_AGENCIES.AGN_COMM_STATUS_DT%TYPE,
    AGN_COMM_ALLOWED      TQC_AGENCIES.AGN_COMM_ALLOWED%TYPE,
    AGN_CHECKED           TQC_AGENCIES.AGN_CHECKED%TYPE,
    AGN_CHECKED_BY        TQC_AGENCIES.AGN_CHECKED_BY%TYPE,
    AGN_CHECK_DATE        TQC_AGENCIES.AGN_CHECK_DATE%TYPE,
    AGN_COMP_COMM_ARREARS TQC_AGENCIES.AGN_COMP_COMM_ARREARS%TYPE,
    AGN_REINSURER         TQC_AGENCIES.AGN_REINSURER%TYPE,
    AGN_BRN_CODE          TQC_AGENCIES.AGN_BRN_CODE%TYPE,
    AGN_TOWN              TQC_AGENCIES.AGN_TOWN%TYPE,
    AGN_COUNTRY           TQC_AGENCIES.AGN_COUNTRY%TYPE,
    AGN_STATUS_DESC       TQC_AGENCIES.AGN_STATUS_DESC%TYPE,
    AGN_ID_NO             TQC_AGENCIES.AGN_ID_NO%TYPE,
    AGN_CON_CODE          TQC_AGENCIES.AGN_CON_CODE%TYPE,
    AGN_AGN_CODE          TQC_AGENCIES.AGN_AGN_CODE%TYPE,
    AGN_SMS_TEL           TQC_AGENCIES.AGN_SMS_TEL%TYPE,
    AGN_AHC_CODE          TQC_AGENCIES.AGN_AHC_CODE%TYPE,
    AGN_SEC_CODE          TQC_AGENCIES.AGN_SEC_CODE%TYPE,
    AGN_AGNC_CLASS_CODE   TQC_AGENCIES.AGN_AGNC_CLASS_CODE%TYPE,
    AGN_EXPIRY_DATE       TQC_AGENCIES.AGN_EXPIRY_DATE%TYPE,
    AGN_LICENSE_NO        TQC_AGENCIES.AGN_LICENSE_NO%TYPE,
    AGN_RUNOFF            TQC_AGENCIES.AGN_RUNOFF%TYPE,
    AGN_LICENSED          TQC_AGENCIES.AGN_LICENSED%TYPE,
    AGN_LICENSE_GRACE_PR  TQC_AGENCIES.AGN_LICENSE_GRACE_PR%TYPE,
    AGN_OLD_ACC_NO        TQC_AGENCIES.AGN_OLD_ACC_NO%TYPE,
    AGN_STATUS_REMARKS    TQC_AGENCIES.AGN_STATUS_REMARKS%TYPE,
    BRN_NAME              TQC_BRANCHES.BRN_NAME%TYPE
    
    );

  TYPE agency_info_by_name_ref IS REF CURSOR RETURN agency_info_by_name_rec;
  PROCEDURE get_agency_info(v_AGN_ACT_CODE    IN TQC_AGENCIES.AGN_ACT_CODE%TYPE,
                            v_agency_info_ref OUT agency_info_ref);

  PROCEDURE get_agency_infobynames(v_agn_act_code    IN tqc_agencies.agn_act_code%TYPE,
                                   v_agn_name        tqc_agencies.agn_name%TYPE,
                                   v_agency_info_ref OUT agency_info_by_name_ref,
                                   v_agn_physical_address IN VARCHAR2,
                                   v_agn_email_address IN VARCHAR2,
                                   v_agn_pin IN VARCHAR2,
                                   v_agn_tel1 IN VARCHAR2) ;
  TYPE managers_rec IS RECORD(
    
    AGN_CODE     TQC_AGENCIES.AGN_CODE%TYPE,
    AGN_SHT_DESC TQC_AGENCIES.AGN_SHT_DESC%TYPE,
    AGN_NAME     TQC_AGENCIES.AGN_NAME%TYPE,
    TWN_NAME     TQC_TOWNS.TWN_NAME%TYPE
    
    );

  TYPE managers_ref IS REF CURSOR RETURN managers_rec;
  PROCEDURE managers(v_managers_ref OUT managers_ref);
  PROCEDURE agencyManagers(v_managers_ref OUT managers_ref);
  PROCEDURE unitManagers(v_managers_ref OUT managers_ref);

  TYPE tqc_users_rec IS RECORD(
    v_USR_USERNAME TQC_USERS.USR_USERNAME%TYPE,
    v_USR_NAME     TQC_USERS.USR_NAME%TYPE,
    v_USR_CODE     TQC_USERS.USR_CODE%TYPE);

  TYPE tqc_users_cursor IS REF CURSOR RETURN tqc_users_rec;

  PROCEDURE find_tqc_users(v_cursor OUT tqc_users_cursor);

  TYPE agency_holding_company_rec IS RECORD(
    v_AHC_CODE           TQC_AGENCY_HOLDING_COMPANY.AHC_CODE%TYPE,
    v_AHC_NAME           TQC_AGENCY_HOLDING_COMPANY.AHC_NAME%TYPE,
    AHC_POSTAL_ADDRESS   TQC_AGENCY_HOLDING_COMPANY.AHC_POSTAL_ADDRESS%TYPE,
    AHC_PHYSICAL_ADDRESS TQC_AGENCY_HOLDING_COMPANY.AHC_PHYSICAL_ADDRESS%TYPE,
    AHC_TELEPHONE_NUMBER TQC_AGENCY_HOLDING_COMPANY.AHC_TELEPHONE_NUMBER%TYPE,
    AHC_MOBILE_NUMBER    TQC_AGENCY_HOLDING_COMPANY.AHC_MOBILE_NUMBER%TYPE,
    AHC_CONTACT_PERSON   TQC_AGENCY_HOLDING_COMPANY.AHC_CONTACT_PERSON%TYPE);

  TYPE agency_holding_company_ref IS REF CURSOR RETURN agency_holding_company_rec;

  PROCEDURE get_agency_holding_company(v_agency_holding_company_ref OUT agency_holding_company_ref);

  PROCEDURE get_specific_holding_company(v_AHC_CODE                   TQC_AGENCY_HOLDING_COMPANY.AHC_CODE%TYPE,
                                         v_agency_holding_company_ref OUT agency_holding_company_ref);

  TYPE banks_rec IS RECORD(
    v_BNK_CODE                TQC_BANKS.BNK_CODE%TYPE,
    v_BNK_BANK_NAME           TQC_BANKS.BNK_BANK_NAME%TYPE,
    v_BNK_REMARKS             TQC_BANKS.BNK_REMARKS%TYPE,
    v_BNK_SHT_DESC            TQC_BANKS.BNK_SHT_DESC%TYPE,
    v_BNK_DDR_CODE            TQC_BANKS.BNK_DDR_CODE%TYPE,
    v_DD_FORMAT_DESC          TQC_BANKS.DD_FORMAT_DESC%TYPE,
    v_BNK_FORWARDING_BNK_CODE TQC_BANKS.BNK_FORWARDING_BNK_CODE%TYPE,
    v_BNK_KBA_CODE            TQC_BANKS.BNK_KBA_CODE%TYPE,
    FWD_BANK_NAME             VARCHAR2(100 BYTE),
    DD_REPORT_FORMAT          VARCHAR2(100 BYTE),
     BNK_EFT_SUPPORTED        TQC_BANKS.BNK_EFT_SUPPORTED%TYPE,
     BNK_CLASS_TYPE        TQC_BANKS.BNK_CLASS_TYPE%TYPE,
     bnk_accnt_digit_no        TQC_BANKS.bnk_accnt_digit_no%TYPE,
      bnk_negotiated_bank        TQC_BANKS.bnk_negotiated_bank%TYPE,
     bnk_administration_charge        TQC_BANKS.bnk_administration_charge%TYPE,
     BNK_LOGO        TQC_BANKS.BNK_LOGO%TYPE
  );
  TYPE banks_ref IS REF CURSOR RETURN banks_rec;

  PROCEDURE get_banks(v_banks_ref OUT banks_ref);

  TYPE bank_branches_rec IS RECORD(
    v_BBR_CODE           TQC_BANK_BRANCHES.BBR_CODE%TYPE,
    v_BBR_BNK_CODE       TQC_BANK_BRANCHES.BBR_BNK_CODE%TYPE,
    v_BBR_BRANCH_NAME    TQC_BANK_BRANCHES.BBR_BRANCH_NAME%TYPE,
    v_BBR_REMARKS        TQC_BANK_BRANCHES.BBR_REMARKS%TYPE,
    v_BBR_SHT_DESC       TQC_BANK_BRANCHES.BBR_SHT_DESC%TYPE,
    v_BBR_REF_CODE       TQC_BANK_BRANCHES.BBR_REF_CODE%TYPE,
    v_BBR_EFT_SUPPORTED  TQC_BANK_BRANCHES.BBR_EFT_SUPPORTED%TYPE,
    v_BBR_DD_SUPPORTED   TQC_BANK_BRANCHES.BBR_DD_SUPPORTED%TYPE,
    v_BBR_DATE_CREATED   TQC_BANK_BRANCHES.BBR_DATE_CREATED%TYPE,
    v_BBR_CREATED_BY     TQC_BANK_BRANCHES.BBR_CREATED_BY%TYPE,
    v_BBR_PHYSICAL_ADDRS TQC_BANK_BRANCHES.BBR_PHYSICAL_ADDRS%TYPE,
    v_BBR_POSTAL_ADDRS   TQC_BANK_BRANCHES.BBR_POSTAL_ADDRS%TYPE,
    v_BBR_KBA_CODE       TQC_BANK_BRANCHES.BBR_KBA_CODE%TYPE);

  TYPE bank_branches_ref IS REF CURSOR RETURN bank_branches_rec;

  PROCEDURE get_bank_branches(v_bank_branches_ref OUT bank_branches_ref);
  PROCEDURE get_bank_branches_by_bank_code(v_BBR_BNK_CODE      TQC_BANK_BRANCHES.BBR_BNK_CODE%TYPE,
                                           v_bank_branches_ref OUT bank_branches_ref);

  TYPE agency_classes_rec IS RECORD(
    v_AGNC_CLASS_CODE TQC_AGENCIES_CLASSES.AGNC_CLASS_CODE%TYPE,
    v_AGNC_CLASS_DESC TQC_AGENCIES_CLASSES.AGNC_CLASS_DESC%TYPE);

  TYPE agency_classes_ref IS REF CURSOR RETURN agency_classes_rec;

  PROCEDURE get_agency_classes(v_agency_classes_ref OUT agency_classes_ref);

  PROCEDURE get_specific_agency_classes(v_AGNC_CLASS_CODE    TQC_AGENCIES_CLASSES.AGNC_CLASS_CODE%TYPE,
                                        v_agency_classes_ref OUT agency_classes_ref);

  TYPE tqc_account_types_values IS RECORD(
    ACT_CODE               tqc_account_types.act_code%type,
    ACT_ACCOUNT_TYPE       tqc_account_types.act_account_type%type,
    ACT_TYPE_SHT_DESC      tqc_account_types.act_type_sht_desc%type,
    ACT_WTHTX_RATE         tqc_account_types.act_wthtx_rate%type,
    ACT_TYPE_ID            tqc_account_types.act_type_id%type,
    ACT_COMM_RESERVE_RATE  tqc_account_types.act_comm_reserve_rate%type,
    ACT_MAX_ADV_AMT        tqc_account_types.act_max_adv_amt%type,
    ACT_MAX_ADV_RPYMT_PRD  tqc_account_types.act_max_adv_rpymt_prd%type,
    ACT_RCPTS_INCLUDE_COMM tqc_account_types.act_rcpts_include_comm%type,
    ACT_OVERIDE_RATE       tqc_account_types.act_overide_rate%type,
    ACT_ID_SERIAL_FORMAT   tqc_account_types.act_id_serial_format%type,
    ACT_VAT_RATE           tqc_account_types.act_vat_rate%type,
    ACT_FORMAT             tqc_account_types.ACT_FORMAT%type,
    ACT_ODL_CODE           TQC_ACCOUNT_TYPES.ACT_ODL_CODE%TYPE,
    RANKING                VARCHAR2(200),
    ACT_NO_GEN_CODE        TQC_ACCOUNT_TYPES.ACT_NO_GEN_CODE%type
    
    );
  TYPE tqc_account_types_cursor IS REF CURSOR RETURN tqc_account_types_values;
  PROCEDURE search_account_types(v_act_code               IN NUMBER DEFAULT NULL,
                                 tqc_account_types_values OUT tqc_account_types_cursor);
  TYPE branch_record IS RECORD(
    
    branch_name VARCHAR2(8),
    branch_code VARCHAR2(100)
    
    );
  TYPE branch_record_cursor IS REF CURSOR RETURN branch_record;
  PROCEDURE find_branches_code(branches out branch_record_cursor);

  TYPE sectors_rec IS RECORD(
    v_SEC_CODE     TQC_SECTORS.SEC_CODE%TYPE,
    v_SEC_SHT_DESC TQC_SECTORS.SEC_SHT_DESC%TYPE,
    v_SEC_NAME     TQC_SECTORS.SEC_NAME%TYPE);

  TYPE sectors_ref IS REF CURSOR RETURN sectors_rec;

  PROCEDURE get_sectors(v_sectors_ref OUT sectors_ref);

  PROCEDURE get_specific_sectors(v_sec_code    TQC_SECTORS.SEC_CODE%TYPE,
                                 v_sectors_ref OUT sectors_ref);

  TYPE service_provider_types_rec IS RECORD(
    v_SPT_CODE      TQC_SERVICE_PROVIDER_TYPES.SPT_CODE%TYPE,
    v_SPT_SHT_DESC  TQC_SERVICE_PROVIDER_TYPES.SPT_SHT_DESC%TYPE,
    v_SPT_NAME      TQC_SERVICE_PROVIDER_TYPES.SPT_NAME%TYPE,
    v_SPT_STATUS    TQC_SERVICE_PROVIDER_TYPES.SPT_CODE%TYPE,
    v_SPT_WHTX_RATE TQC_SERVICE_PROVIDER_TYPES.SPT_WHTX_RATE%TYPE,
    v_SPT_VAT_RATE  TQC_SERVICE_PROVIDER_TYPES.SPT_VAT_RATE%TYPE);

  TYPE service_provider_types_ref IS REF CURSOR RETURN service_provider_types_rec;

  TYPE serv_provider_types_act_rec IS RECORD(
    
    SPTA_CODE     TQC_SERV_PRV_TYPE_ACTVTS.SPTA_CODE%TYPE,
    SPTA_SPT_CODE TQC_SERV_PRV_TYPE_ACTVTS.SPTA_SPT_CODE%TYPE,
    SPTA_SHT_DESC TQC_SERV_PRV_TYPE_ACTVTS.SPTA_SHT_DESC%TYPE,
    SPTA_DESC     TQC_SERV_PRV_TYPE_ACTVTS.SPTA_DESC%TYPE,
     MSGT_MSG tqc_msg_templates.MSGT_MSG%TYPE,
     emailtemplate varchar2(200),
      SPTA_SEND_MSG_DEFAULT TQC_SERV_PRV_TYPE_ACTVTS.SPTA_SEND_MSG_DEFAULT%TYPE,
       SPTA_SEND_EMAIL_DEFAULT TQC_SERV_PRV_TYPE_ACTVTS.SPTA_SEND_EMAIL_DEFAULT%TYPE,
       SMS_CODE NUMBER,
       EMAIL_CODE NUMBER
    );

  TYPE serv_provider_types_act_ref IS REF CURSOR RETURN serv_provider_types_act_rec;

  PROCEDURE get_service_provider_types_act(v_spt_code                   IN NUMBER,
                                           v_service_provider_types_ref OUT serv_provider_types_act_ref);

  PROCEDURE get_service_provider_types(v_service_provider_types_ref OUT service_provider_types_ref);

  TYPE service_providers_rec IS RECORD(
    v_SPR_CODE             TQC_SERVICE_PROVIDERS.SPR_CODE%TYPE,
    v_SPR_SHT_DESC         TQC_SERVICE_PROVIDERS.SPR_SHT_DESC%TYPE,
    v_SPR_NAME             TQC_SERVICE_PROVIDERS.SPR_NAME%TYPE,
    v_SPR_PHYSICAL_ADDRESS TQC_SERVICE_PROVIDERS.SPR_PHYSICAL_ADDRESS%TYPE,
    v_SPR_POSTAL_ADDRESS   TQC_SERVICE_PROVIDERS.SPR_POSTAL_ADDRESS%TYPE,
    v_SPR_TWN_CODE         TQC_SERVICE_PROVIDERS.SPR_TWN_CODE%TYPE,
    v_SPR_COU_CODE         TQC_SERVICE_PROVIDERS.SPR_COU_CODE%TYPE,
    v_SPR_SPT_CODE         TQC_SERVICE_PROVIDERS.SPR_SPT_CODE%TYPE,
    v_SPR_PHONE            TQC_SERVICE_PROVIDERS.SPR_PHONE%TYPE,
    v_SPR_FAX              TQC_SERVICE_PROVIDERS.SPR_FAX%TYPE,
    v_SPR_EMAIL            TQC_SERVICE_PROVIDERS.SPR_EMAIL%TYPE,
    v_SPR_TITLE            TQC_SERVICE_PROVIDERS.SPR_TITLE%TYPE,
    v_SPR_ZIP              TQC_SERVICE_PROVIDERS.SPR_ZIP%TYPE,
    v_SPR_WEF              TQC_SERVICE_PROVIDERS.SPR_WEF%TYPE,
    v_SPR_WET              TQC_SERVICE_PROVIDERS.SPR_WET%TYPE,
    v_SPR_CONTACT          TQC_SERVICE_PROVIDERS.SPR_CONTACT%TYPE,
    v_SPR_AIMS_CODE        TQC_SERVICE_PROVIDERS.SPR_AIMS_CODE%TYPE,
    v_SPR_BBR_CODE         TQC_SERVICE_PROVIDERS.SPR_BBR_CODE%TYPE,
    v_SPR_BANK_ACC_NO      TQC_SERVICE_PROVIDERS.SPR_BANK_ACC_NO%TYPE,
    v_SPR_CREATED_BY       TQC_SERVICE_PROVIDERS.SPR_CREATED_BY%TYPE,
    v_SPR_DATE_CREATED     TQC_SERVICE_PROVIDERS.SPR_DATE_CREATED%TYPE,
    v_SPR_STATUS_REMARKS   TQC_SERVICE_PROVIDERS.SPR_STATUS_REMARKS%TYPE,
    v_SPR_STATUS           TQC_SERVICE_PROVIDERS.SPR_STATUS%TYPE,
    v_SPR_PIN_NUMBER       TQC_SERVICE_PROVIDERS.SPR_PIN_NUMBER%TYPE,
    v_SPR_TRS_OCCUPATION   TQC_SERVICE_PROVIDERS.SPR_TRS_OCCUPATION%TYPE,
    v_SPR_PROFF_BODY       TQC_SERVICE_PROVIDERS.SPR_PROFF_BODY%TYPE,
    v_SPR_PIN              TQC_SERVICE_PROVIDERS.SPR_PIN%TYPE,
    v_SPR_DOC_PHONE        TQC_SERVICE_PROVIDERS.SPR_DOC_PHONE%TYPE,
    v_SPR_DOC_EMAIL        TQC_SERVICE_PROVIDERS.SPR_DOC_EMAIL%TYPE,
    COUNTRY_NAME           VARCHAR2(50),
    TOWN_NAME              VARCHAR2(50),
    BANK_CODE              NUMBER,
    BANK_NAME              VARCHAR2(100),
    BRANCH_NAME            VARCHAR2(100),
    SPR_INHOUSE            TQC_SERVICE_PROVIDERS.SPR_INHOUSE%TYPE,
    SPR_SMS_NUMBER            TQC_SERVICE_PROVIDERS.SPR_SMS_NUMBER%TYPE,
    SPR_INVOICE_NUMBER            TQC_SERVICE_PROVIDERS.SPR_INVOICE_NUMBER%TYPE,
     SPR_CLNT_CODE            TQC_SERVICE_PROVIDERS.SPR_CLNT_CODE%TYPE,
      CLNT_NAME            TQC_CLIENTS.CLNT_NAME%TYPE,
      SPR_BPN_CODE            TQC_SERVICE_PROVIDERS.SPR_BPN_CODE%TYPE,
      BPN_NAME            TQC_BUSINESS_PERSONS.BPN_NAME%TYPE);

  TYPE service_providers_ref IS REF CURSOR RETURN service_providers_rec;

  PROCEDURE get_service_providers(v_SPR_SPT_CODE          TQC_SERVICE_PROVIDERS.SPR_SPT_CODE%TYPE,
                                  v_service_providers_ref OUT service_providers_ref);

  TYPE service_prov_activities_rec IS RECORD(
    v_SPA_CODE         TQC_SERV_PRV_ACTIVITIES.SPA_CODE%TYPE,
    v_SPA_SPT_CODE     TQC_SERV_PRV_ACTIVITIES.SPA_SPT_CODE%TYPE,
    v_SPA_SPT_SHT_DESC TQC_SERV_PRV_ACTIVITIES.SPA_SPT_SHT_DESC%TYPE,
    v_SPA_SPR_CODE     TQC_SERV_PRV_ACTIVITIES.SPA_SPR_CODE%TYPE,
    v_SPA_SPR_SHT_DESC TQC_SERV_PRV_ACTIVITIES.SPA_SPR_SHT_DESC%TYPE,
    v_SPT_MAIN_ACT     TQC_SERV_PRV_ACTIVITIES.SPT_MAIN_ACT%TYPE,
    v_SPA_DESC         TQC_SERV_PRV_ACTIVITIES.SPA_DESC%TYPE);

  TYPE service_prov_activities_ref IS REF CURSOR RETURN service_prov_activities_rec;

  PROCEDURE get_service_prov_activities(v_service_prov_activities_ref OUT service_prov_activities_ref);

  TYPE activities_by_provider_rec IS RECORD(
    v_SPA_CODE         TQC_SERV_PRV_ACTIVITIES.SPA_CODE%TYPE,
    v_SPA_SPT_CODE     TQC_SERV_PRV_ACTIVITIES.SPA_SPT_CODE%TYPE,
    v_SPA_SPT_SHT_DESC TQC_SERV_PRV_ACTIVITIES.SPA_SPT_SHT_DESC%TYPE,
    v_SPA_SPR_CODE     TQC_SERV_PRV_ACTIVITIES.SPA_SPR_CODE%TYPE,
    v_SPA_SPR_SHT_DESC TQC_SERV_PRV_ACTIVITIES.SPA_SPR_SHT_DESC%TYPE,
    v_SPT_MAIN_ACT     TQC_SERV_PRV_ACTIVITIES.SPT_MAIN_ACT%TYPE,
    v_SPA_DESC         TQC_SERV_PRV_ACTIVITIES.SPA_DESC%TYPE,
    v_SPT_NAME         TQC_SERVICE_PROVIDER_TYPES.SPT_NAME%TYPE,
    v_SPR_NAME         TQC_SERVICE_PROVIDERS.SPR_NAME%TYPE);

  TYPE activities_by_provider_ref IS REF CURSOR RETURN activities_by_provider_rec;

  PROCEDURE get_activities_by_provider(v_SPA_SPR_CODE               TQC_SERV_PRV_ACTIVITIES.SPA_SPR_CODE%TYPE,
                                       v_activities_by_provider_ref OUT activities_by_provider_ref);

  TYPE service_prov_systems_rec IS RECORD(
    v_SPS_CODE       TQC_SERVICE_PROVIDER_SYSTEMS.SPS_CODE%TYPE,
    v_SPS_SPR_CODE   TQC_SERVICE_PROVIDER_SYSTEMS.SPS_SPR_CODE%TYPE,
    v_SPS_SYS_CODE   TQC_SERVICE_PROVIDER_SYSTEMS.SPS_SYS_CODE%TYPE,
    v_SPS_WEF        TQC_SERVICE_PROVIDER_SYSTEMS.SPS_WEF%TYPE,
    v_SPS_WET        TQC_SERVICE_PROVIDER_SYSTEMS.SPS_WET%TYPE,
    v_SPS_CREATED_BY TQC_SERVICE_PROVIDER_SYSTEMS.SPS_CREATED_BY%TYPE);

  TYPE service_prov_systems_ref IS REF CURSOR RETURN service_prov_systems_rec;

  PROCEDURE get_service_prov_systems(v_service_prov_systems_ref OUT service_prov_systems_ref);

  TYPE systems_rec IS RECORD(
    v_SYS_CODE              TQC_SYSTEMS.SYS_CODE%TYPE,
    v_SYS_SHT_DESC          TQC_SYSTEMS.SYS_SHT_DESC%TYPE,
    v_SYS_NAME              TQC_SYSTEMS.SYS_NAME%TYPE,
    v_SYS_MAIN_FORM_NAME    TQC_SYSTEMS.SYS_MAIN_FORM_NAME%TYPE,
    v_SYS_ACTIVE            TQC_SYSTEMS.SYS_ACTIVE%TYPE,
    v_SYS_DBASE_USERNAME    TQC_SYSTEMS.SYS_DBASE_USERNAME%TYPE,
    v_SYS_DBASE_PASSWORD    TQC_SYSTEMS.SYS_DBASE_PASSWORD%TYPE,
    v_SYS_DBASE_STRING      TQC_SYSTEMS.SYS_DBASE_STRING%TYPE,
    v_SYS_PATH              TQC_SYSTEMS.SYS_PATH%TYPE,
    v_SYS_ORG_CODE          TQC_SYSTEMS.SYS_ORG_CODE%TYPE,
    v_SYS_AGN_MAIN_FRM_NAME TQC_SYSTEMS.SYS_AGN_MAIN_FRM_NAME%TYPE,
    v_SYS_KBA_CODE          TQC_SYSTEMS.SYS_KBA_CODE%TYPE,
    v_SYS_SIGNATURE_PATH    TQC_SYSTEMS.SYS_SIGNATURE_PATH%TYPE
    
    );

  TYPE systems_ref IS REF CURSOR RETURN systems_rec;

  PROCEDURE get_systems(v_systems_ref OUT systems_ref);
  PROCEDURE get_prov_unassigned_systems(v_provider_code            TQC_SERVICE_PROVIDERS.SPR_CODE%TYPE,
                                        v_service_prov_systems_ref OUT systems_ref);
  PROCEDURE get_prov_assigned_systems(v_provider_code            TQC_SERVICE_PROVIDERS.SPR_CODE%TYPE,
                                      v_service_prov_systems_ref OUT systems_ref);

  TYPE parameters_rec IS RECORD(
    v_PARAM_CODE   TQC_PARAMETERS.PARAM_CODE%TYPE,
    v_PARAM_NAME   TQC_PARAMETERS.PARAM_NAME%TYPE,
    v_PARAM_VALUE  TQC_PARAMETERS.PARAM_VALUE%TYPE,
    v_PARAM_STATUS TQC_PARAMETERS.PARAM_STATUS%TYPE,
    v_PARAM_DESC   TQC_PARAMETERS.PARAM_DESC%TYPE);

  TYPE parameters_ref IS REF CURSOR RETURN parameters_rec;

  PROCEDURE get_parameters(v_parameters_ref OUT parameters_ref);

  PROCEDURE get_gis_branches(branches out branch_record_cursor);

  TYPE payment_modes_rec IS RECORD(
    v_PMOD_CODE     TQC_PAYMENT_MODES.PMOD_CODE%TYPE,
    v_PMOD_SHT_DESC TQC_PAYMENT_MODES.PMOD_SHT_DESC%TYPE,
    v_PMOD_DESC     TQC_PAYMENT_MODES.PMOD_DESC%TYPE,
    v_PMOD_NARATION TQC_PAYMENT_MODES.PMOD_NARATION%TYPE,
    v_PMOD_DEFAULT  TQC_PAYMENT_MODES.PMOD_DEFAULT%TYPE);

  TYPE payment_modes_ref IS REF CURSOR RETURN payment_modes_rec;

  PROCEDURE get_payment_modes(v_payment_modes_ref OUT payment_modes_ref);

  TYPE client_titles_rec IS RECORD(
    v_CLT_CODE     TQC_CLIENT_TITLES.CLT_CODE%TYPE,
    v_CLT_SHT_DESC TQC_CLIENT_TITLES.CLT_SHT_DESC%TYPE,
    v_CLNT_DESC    TQC_CLIENT_TITLES.CLNT_DESC%TYPE);

  TYPE client_titles_ref IS REF CURSOR RETURN client_titles_rec;

 PROCEDURE get_client_titles(v_client_titles_ref OUT client_titles_ref,v_clt_sht_desc IN VARCHAR2) ;

  PROCEDURE find_certificate_alloc_branch(v_agn_code     IN NUMBER,
                                          v_branches_ref OUT branches_ref,
                                          v_error        OUT VARCHAR2);

  TYPE auth_levels_rec IS RECORD(
    TQAL_CODE       TQC_AUTHORIZATION_LEVELS.TQAL_CODE%TYPE,
    TQAL_SPRSA_CODE TQC_AUTHORIZATION_LEVELS.TQAL_SPRSA_CODE%TYPE,
    TQAL_LEVEL_ID   TQC_AUTHORIZATION_LEVELS.TQAL_LEVEL_ID%TYPE,
    TQAL_SRLS_CODE  TQC_AUTHORIZATION_LEVELS.TQAL_SRLS_CODE%TYPE,
    SRLS_NAME       TQC_SYS_ROLES.SRLS_NAME%TYPE,
    SPRSA_SUB_AREA  TQC_SYS_PROCESS_SUB_AREAS.SPRSA_SUB_AREA%TYPE);

  TYPE auth_levels_ref IS REF CURSOR RETURN auth_levels_rec;
  FUNCTION getsubAreaLevels(v_sprsaCode TQC_AUTHORIZATION_LEVELS.TQAL_SPRSA_CODE%TYPE)
    RETURN auth_levels_ref;

  TYPE system_subAreas_rec IS RECORD(
    SPRSA_CODE             TQC_SYS_PROCESS_SUB_AREAS.SPRSA_CODE%TYPE,
    SPRSA_SPRCA_CODE       TQC_SYS_PROCESS_SUB_AREAS.SPRSA_SPRCA_CODE%TYPE,
    SPRSA_SPRC_CODE        TQC_SYS_PROCESS_SUB_AREAS.SPRSA_SPRC_CODE%TYPE,
    SPRSA_SUB_AREA         TQC_SYS_PROCESS_SUB_AREAS.SPRSA_SUB_AREA%TYPE,
    SPRSA_TYPE             TQC_SYS_PROCESS_SUB_AREAS.SPRSA_TYPE%TYPE,
    SPRSA_SHT_DESC         TQC_SYS_PROCESS_SUB_AREAS.SPRSA_SHT_DESC%TYPE,
    SPRSA_DEFAULT_USR_CODE TQC_SYS_PROCESS_SUB_AREAS.SPRSA_DEFAULT_USR_CODE%TYPE);

  TYPE system_subAreas_ref IS REF CURSOR RETURN system_subAreas_rec;
  FUNCTION getSystemSubAreas(v_sysCode NUMBER) RETURN system_subAreas_ref;

  TYPE systemRoles_rec IS RECORD(
    SRL_CODE     TQC_SYSTEM_ROLES.SRL_CODE%TYPE,
    SRL_SYS_CODE TQC_SYSTEM_ROLES.SRL_SYS_CODE%TYPE,
    SRL_NAME     TQC_SYSTEM_ROLES.SRL_NAME%TYPE,
    SRL_CRT_DATE TQC_SYSTEM_ROLES.SRL_CRT_DATE%TYPE,
    SRL_SHT_DESC TQC_SYSTEM_ROLES.SRL_SHT_DESC%TYPE,
    SRL_STATUS   TQC_SYSTEM_ROLES.SRL_STATUS%TYPE);

  TYPE systemRoles_ref IS REF CURSOR RETURN systemRoles_rec;
  FUNCTION getSystemRoles(v_sysCode NUMBER) RETURN systemRoles_ref;

  PROCEDURE authLevelsProc(v_addEdit   VARCHAR2,
                           v_tqualCode TQC_AUTHORIZATION_LEVELS.TQAL_CODE%TYPE,
                           v_sprsaCode TQC_AUTHORIZATION_LEVELS.TQAL_SPRSA_CODE%TYPE,
                           v_levelId   TQC_AUTHORIZATION_LEVELS.TQAL_LEVEL_ID%TYPE,
                           v_srlsCode  TQC_AUTHORIZATION_LEVELS.TQAL_SRLS_CODE%TYPE);

  TYPE bankBranchesLov_rec IS RECORD(
    BNK_SHT_DESC    TQC_BANKS.BNK_SHT_DESC%TYPE,
    BNK_CODE        TQC_BANKS.BNK_CODE%TYPE,
    BNK_BANK_NAME   TQC_BANKS.BNK_BANK_NAME%TYPE,
    BBR_BRANCH_NAME TQC_BANK_BRANCHES.BBR_BRANCH_NAME%TYPE,
    BBR_CODE        TQC_BANK_BRANCHES.BBR_CODE%TYPE,
    BCT_NO          FMS_BNK_ACCTS.BCT_NO%TYPE);

  TYPE bankBranchesLov_ref IS REF CURSOR RETURN bankBranchesLov_rec;
  FUNCTION getBankBranchesLov RETURN bankBranchesLov_ref;
  FUNCTION BankBranchesLov RETURN bankBranchesLov_ref;
  FUNCTION BBranchesBank(v_bnkCode TQC_BANKS.BNK_CODE%TYPE)
    RETURN bankBranchesLov_ref;

  TYPE holidays_rec IS RECORD(
    HLD_DATE TQC_HOLIDAYS.HLD_DATE%TYPE,
    HLD_DESC TQC_HOLIDAYS.HLD_DESC%TYPE);

  TYPE holidays_ref IS REF CURSOR RETURN holidays_rec;
  FUNCTION getHolidays(v_year NUMBER) RETURN holidays_ref;

  TYPE yearsLov_rec IS RECORD(
    H_YEAR NUMBER(8));

  TYPE yearsLov_ref IS REF CURSOR RETURN yearsLov_rec;
  FUNCTION getYearsLov RETURN yearsLov_ref;

  TYPE directDebit_rec IS RECORD(
    DD_CODE       TQC_DIRECT_DEBIT.DD_CODE%TYPE,
    DD_REF_NO     TQC_DIRECT_DEBIT.DD_REF_NO%TYPE,
    DD_SENT_YN    TQC_DIRECT_DEBIT.DD_SENT_YN%TYPE,
    DD_ACNT_NO    TQC_DIRECT_DEBIT.DD_ACNT_NO%TYPE,
    DD_BOOK_DATE  TQC_DIRECT_DEBIT.DD_BOOK_DATE%TYPE,
    DD_BBR_CODE   TQC_DIRECT_DEBIT.DD_BBR_CODE%TYPE,
    DD_STATUS     TQC_DIRECT_DEBIT.DD_STATUS%TYPE,
    DD_RECEIPTED  TQC_DIRECT_DEBIT.DD_RECEIPTED%TYPE,
    DD_VALUE_DATE TQC_DIRECT_DEBIT.DD_VALUE_DATE%TYPE,
    DD_RAISED_BY  TQC_DIRECT_DEBIT.DD_RAISED_BY%TYPE,
    DD_DATE       TQC_DIRECT_DEBIT.DD_DATE%TYPE,
    DD_BNK_CODE   TQC_DIRECT_DEBIT.DD_BNK_CODE%TYPE,
    DD_AUTH_BY    TQC_DIRECT_DEBIT.DD_AUTH_BY%TYPE,
    DD_AUTH_DATE  TQC_DIRECT_DEBIT.DD_AUTH_DATE%TYPE,
    DD_AUTHORIZED TQC_DIRECT_DEBIT.DD_AUTHORIZED%TYPE,
    BANK_BRANCH   VARCHAR2(60));

  TYPE directDebit_ref IS REF CURSOR RETURN directDebit_rec;
  FUNCTION getDirectDebitNonReceipt RETURN directDebit_ref;
  FUNCTION getDirectDebitAuthorised RETURN directDebit_ref;

  TYPE directDebitHeader_rec IS RECORD(
    DDH_CODE               TQC_DIRECT_DEBIT_HEADER.DDH_CODE%TYPE,
    DDH_DD_CODE            TQC_DIRECT_DEBIT_HEADER.DDH_DD_CODE%TYPE,
    DDH_CLNT_CODE          TQC_DIRECT_DEBIT_HEADER.DDH_CLNT_CODE%TYPE,
    DDH_CLNT_BBR_CODE      TQC_DIRECT_DEBIT_HEADER.DDH_CLNT_BBR_CODE%TYPE,
    DDH_BBR_BNK_CODE       TQC_DIRECT_DEBIT_HEADER.DDH_BBR_BNK_CODE%TYPE,
    DDH_CLNT_SHT_DESC      TQC_DIRECT_DEBIT_HEADER.DDH_CLNT_SHT_DESC%TYPE,
    DDH_CLNT_NAME          TQC_DIRECT_DEBIT_HEADER.DDH_CLNT_NAME%TYPE,
    DDH_CLNT_BANK_ACC_NO   TQC_DIRECT_DEBIT_HEADER.DDH_CLNT_BANK_ACC_NO%TYPE,
    DDH_BBR_BRANCH_NAME    TQC_DIRECT_DEBIT_HEADER.DDH_BBR_BRANCH_NAME%TYPE,
    DDH_BBR_SHT_DESC       TQC_DIRECT_DEBIT_HEADER.DDH_BBR_SHT_DESC%TYPE,
    DDH_BBR_REF_CODE       TQC_DIRECT_DEBIT_HEADER.DDH_BBR_REF_CODE%TYPE,
    DDH_TOT_AMT            TQC_DIRECT_DEBIT_HEADER.DDH_TOT_AMT%TYPE,
    DDH_STATUS             TQC_DIRECT_DEBIT_HEADER.DDH_STATUS%TYPE,
    DDH_RECEIPTED          TQC_DIRECT_DEBIT_HEADER.DDH_RECEIPTED%TYPE,
    DDH_FAIL_DATE          TQC_DIRECT_DEBIT_HEADER.DDH_FAIL_DATE%TYPE,
    DDH_FAIL_UPDATED_BY    TQC_DIRECT_DEBIT_HEADER.DDH_FAIL_UPDATED_BY%TYPE,
    DDH_FAIL_UPDATE_DATE   TQC_DIRECT_DEBIT_HEADER.DDH_FAIL_UPDATE_DATE%TYPE,
    DDH_FAIL_REMARKS       TQC_DIRECT_DEBIT_HEADER.DDH_FAIL_REMARKS%TYPE,
    DDH_RELAUNCH_DATE      TQC_DIRECT_DEBIT_HEADER.DDH_RELAUNCH_DATE%TYPE,
    DDH_RELAUNCH_STOP_DATE TQC_DIRECT_DEBIT_HEADER.DDH_RELAUNCH_STOP_DATE%TYPE,
    DDH_RELAUNCHED_BY      TQC_DIRECT_DEBIT_HEADER.DDH_RELAUNCHED_BY%TYPE,
    DDH_RELAUNCH_STOPED_BY TQC_DIRECT_DEBIT_HEADER.DDH_RELAUNCH_STOPED_BY%TYPE,
    DDH_INITIAL_BOOK_DATE  TQC_DIRECT_DEBIT_HEADER.DDH_INITIAL_BOOK_DATE%TYPE,
    DDH_PREV_DDH_CODE      TQC_DIRECT_DEBIT_HEADER.DDH_PREV_DDH_CODE%TYPE,
    DDH_ACC_HOLDER         TQC_DIRECT_DEBIT_HEADER.DDH_ACC_HOLDER%TYPE,
    BANK_BRANCH            VARCHAR2(60));

  TYPE directDebitHeader_ref IS REF CURSOR RETURN directDebitHeader_rec;
  FUNCTION getDirectDebitHeader(v_DD_CODE NUMBER)
    RETURN directDebitHeader_ref;

  TYPE directDebitDetail_rec IS RECORD(
    DDD_CODE               TQC_DIRECT_DEBIT_DETAIL.DDD_CODE%TYPE,
    DDD_DDH_CODE           TQC_DIRECT_DEBIT_DETAIL.DDD_DDH_CODE%TYPE,
    DDD_DD_CODE            TQC_DIRECT_DEBIT_DETAIL.DDD_DD_CODE%TYPE,
    DDD_SYS_CODE           TQC_DIRECT_DEBIT_DETAIL.DDD_SYS_CODE%TYPE,
    DDD_POL_CODE           TQC_DIRECT_DEBIT_DETAIL.DDD_POL_CODE%TYPE,
    DDD_POL_PRP_CODE       TQC_DIRECT_DEBIT_DETAIL.DDD_POL_PRP_CODE%TYPE,
    DDD_POL_PROPOSAL_NO    TQC_DIRECT_DEBIT_DETAIL.DDD_POL_PROPOSAL_NO%TYPE,
    DDD_POL_POLICY_NO      TQC_DIRECT_DEBIT_DETAIL.DDD_POL_POLICY_NO%TYPE,
    DDD_OTHER_IDENTIFIER   TQC_DIRECT_DEBIT_DETAIL.DDD_OTHER_IDENTIFIER%TYPE,
    DDD_AMOUNT             TQC_DIRECT_DEBIT_DETAIL.DDD_AMOUNT%TYPE,
    DDD_REMARKS            TQC_DIRECT_DEBIT_DETAIL.DDD_REMARKS%TYPE,
    DDD_START_DT           TQC_DIRECT_DEBIT_DETAIL.DDD_START_DT%TYPE,
    DDD_STOP_DATE          TQC_DIRECT_DEBIT_DETAIL.DDD_STOP_DATE%TYPE,
    DDD_STATUS             TQC_DIRECT_DEBIT_DETAIL.DDD_STATUS%TYPE,
    DDD_FAIL_DATE          TQC_DIRECT_DEBIT_DETAIL.DDD_FAIL_DATE%TYPE,
    DDD_RECEIPTED          TQC_DIRECT_DEBIT_DETAIL.DDD_RECEIPTED%TYPE,
    DDD_FAIL_UPDATED_BY    TQC_DIRECT_DEBIT_DETAIL.DDD_FAIL_UPDATED_BY%TYPE,
    DDD_FAIL_UPDATE_DATE   TQC_DIRECT_DEBIT_DETAIL.DDD_FAIL_UPDATE_DATE%TYPE,
    DDD_PPR_CODE           TQC_DIRECT_DEBIT_DETAIL.DDD_PPR_CODE%TYPE,
    DDD_POL_TYPE           TQC_DIRECT_DEBIT_DETAIL.DDD_POL_TYPE%TYPE,
    DDD_RECEIPTED_BY       TQC_DIRECT_DEBIT_DETAIL.DDD_RECEIPTED_BY%TYPE,
    DDD_RECEIPT_NO         TQC_DIRECT_DEBIT_DETAIL.DDD_RECEIPT_NO%TYPE,
    DDD_RECEIPT_DATE       TQC_DIRECT_DEBIT_DETAIL.DDD_RECEIPT_DATE%TYPE,
    DDD_RECEIPTED_DATE     TQC_DIRECT_DEBIT_DETAIL.DDD_RECEIPTED_DATE%TYPE,
    DDD_FAIL_REMARKS       TQC_DIRECT_DEBIT_DETAIL.DDD_FAIL_REMARKS%TYPE,
    DDD_RELAUNCH_DATE      TQC_DIRECT_DEBIT_DETAIL.DDD_RELAUNCH_DATE%TYPE,
    DDD_RELAUNCH_STOP_DATE TQC_DIRECT_DEBIT_DETAIL.DDD_RELAUNCH_STOP_DATE%TYPE,
    DDD_RELAUNCHED_BY      TQC_DIRECT_DEBIT_DETAIL.DDD_RELAUNCHED_BY%TYPE,
    DDD_RELAUNCH_STOPED_BY TQC_DIRECT_DEBIT_DETAIL.DDD_RELAUNCH_STOPED_BY%TYPE);

  TYPE directDebitDetail_ref IS REF CURSOR RETURN directDebitDetail_rec;
  FUNCTION getDirectDebitDetail(v_DDH_CODE NUMBER)
    RETURN directDebitDetail_ref;

  TYPE glAccounts_rec IS RECORD(
    ACC_NUMBER FMS_ACCOUNTS.ACC_NUMBER%TYPE,
    ACC_NAME   FMS_ACCOUNTS.ACC_NAME%TYPE);

  TYPE glAccounts_ref IS REF CURSOR RETURN glAccounts_rec;
  FUNCTION getAllGlAccounts RETURN glAccounts_ref;

  PROCEDURE get_service_provider_types_act(v_service_provider_types_ref OUT serv_provider_types_act_ref);

  TYPE email_templates_rec IS RECORD(
    
    MSGT_CODE       TQC_MSG_TEMPLATES.MSGT_CODE %TYPE,
    MSGT_SHT_DESC   TQC_MSG_TEMPLATES.MSGT_SHT_DESC %TYPE,
    MSGT_MSG        TQC_MSG_TEMPLATES.MSGT_MSG %TYPE,
    MSGT_SYS_CODE   TQC_MSG_TEMPLATES.MSGT_SYS_CODE %TYPE,
    MSGT_SYS_MODULE TQC_MSG_TEMPLATES.MSGT_SYS_MODULE%TYPE,
    MSGT_TYPE       TQC_MSG_TEMPLATES.MSGT_TYPE %TYPE);

  TYPE email_templates_ref IS REF CURSOR RETURN email_templates_rec;

  FUNCTION get_em_template(v_sys_code IN NUMBER) RETURN email_templates_ref;

  TYPE prospects_rec IS RECORD(
    PRS_CODE           TQC_PROSPECTS.PRS_CODE%TYPE,
    PRS_SURNAME        TQC_PROSPECTS.PRS_SURNAME%TYPE,
    PRS_PHYSICAL_ADDRS TQC_PROSPECTS.PRS_PHYSICAL_ADDRS%TYPE,
    PRS_POSTAL_ADDRS   TQC_PROSPECTS.PRS_POSTAL_ADDRS%TYPE,
    PRS_OTHER_NAMES    TQC_PROSPECTS.PRS_OTHER_NAMES%TYPE,
    PRS_TEL_NO         TQC_PROSPECTS.PRS_TEL_NO%TYPE,
    PRS_MOBILE_NO      TQC_PROSPECTS.PRS_MOBILE_NO%TYPE,
    PRS_EMAIL_ADDRS    TQC_PROSPECTS.PRS_EMAIL_ADDRS%TYPE,
    PRS_ID_REG_NO      TQC_PROSPECTS.PRS_ID_REG_NO%TYPE,
    PRS_DOB            TQC_PROSPECTS.PRS_DOB%TYPE,
    PRS_PIN            TQC_PROSPECTS.PRS_PIN%TYPE,
    PRS_TWN_CODE       TQC_PROSPECTS.PRS_TWN_CODE%TYPE,
    PRS_COU_CODE       TQC_PROSPECTS.PRS_COU_CODE%TYPE,
    PRS_POSTAL_CODE    TQC_PROSPECTS.PRS_POSTAL_CODE%TYPE,
    COUNTRY_NAME       VARCHAR2(100),
    TOWN_NAME          VARCHAR2(100),
     PST_DESC    tqc_postal_codes.PST_DESC%TYPE);
  TYPE prospects_ref IS REF CURSOR RETURN prospects_rec;
  FUNCTION getProspects RETURN prospects_ref;

  TYPE all_systems_rec IS RECORD(
    SYS_CODE              TQC_SYSTEMS.SYS_CODE%TYPE,
    SYS_SHT_DESC          TQC_SYSTEMS.SYS_SHT_DESC%TYPE,
    SYS_NAME              TQC_SYSTEMS.SYS_NAME%TYPE,
    SYS_MAIN_FORM_NAME    TQC_SYSTEMS.SYS_MAIN_FORM_NAME%TYPE,
    SYS_ACTIVE            TQC_SYSTEMS.SYS_ACTIVE%TYPE,
    SYS_DBASE_USERNAME    TQC_SYSTEMS.SYS_DBASE_USERNAME%TYPE,
    SYS_DBASE_PASSWORD    TQC_SYSTEMS.SYS_DBASE_PASSWORD%TYPE,
    SYS_DBASE_STRING      TQC_SYSTEMS.SYS_DBASE_STRING%TYPE,
    SYS_PATH              TQC_SYSTEMS.SYS_PATH%TYPE,
    SYS_ORG_CODE          TQC_SYSTEMS.SYS_ORG_CODE%TYPE,
    SYS_AGN_MAIN_FRM_NAME TQC_SYSTEMS.SYS_AGN_MAIN_FRM_NAME%TYPE,
    SYS_KBA_CODE          TQC_SYSTEMS.SYS_KBA_CODE%TYPE,
    SYS_SIGNATURE_PATH    TQC_SYSTEMS.SYS_SIGNATURE_PATH%TYPE,
    SYS_TEMPLATE          TQC_SYSTEMS.SYS_TEMPLATE%TYPE);
  TYPE all_systems_ref IS REF CURSOR RETURN all_systems_rec;
  FUNCTION getAllSystems RETURN all_systems_ref;

  TYPE orgDivLevelsType_rec IS RECORD(
    DLT_CODE      TQC_ORG_DIVISION_LEVELS_TYPE.DLT_CODE%TYPE,
    DLT_SYS_CODE  TQC_ORG_DIVISION_LEVELS_TYPE.DLT_SYS_CODE%TYPE,
    DLT_DESC      TQC_ORG_DIVISION_LEVELS_TYPE.DLT_DESC%TYPE,
    DLT_ACT_CODE  TQC_ORG_DIVISION_LEVELS_TYPE.DLT_ACT_CODE%TYPE,
    ACC_TYPE_NAME VARCHAR2(50),
    DLT_CODE_VAL  TQC_ORG_DIVISION_LEVELS_TYPE.DLT_CODE_VAL%TYPE);
  TYPE orgDivLevelsType_ref IS REF CURSOR RETURN orgDivLevelsType_rec;
  FUNCTION getOrgDivLevelsType(v_sys_code IN NUMBER)
    RETURN orgDivLevelsType_ref;

  TYPE orgDivisionLevels_rec IS RECORD(
    ODL_CODE     TQC_ORG_DIVISION_LEVELS.ODL_CODE%TYPE,
    ODL_DLT_CODE TQC_ORG_DIVISION_LEVELS.ODL_DLT_CODE%TYPE,
    ODL_DESC     TQC_ORG_DIVISION_LEVELS.ODL_DESC%TYPE,
    ODL_RANKING  TQC_ORG_DIVISION_LEVELS.ODL_RANKING%TYPE,
    ODL_TYPE     TQC_ORG_DIVISION_LEVELS.ODL_TYPE%TYPE);
  TYPE orgDivisionLevels_ref IS REF CURSOR RETURN orgDivisionLevels_rec;
  FUNCTION getOrgDivisionLevels(v_dlt_code IN VARCHAR2)
    RETURN orgDivisionLevels_ref;
  FUNCTION getOrgDivisionLevelsByRanking(v_dlt_code IN VARCHAR2,
                                         v_ranking  IN TQC_ORG_DIVISION_LEVELS.ODL_RANKING%TYPE)
    RETURN orgDivisionLevels_ref;

  TYPE orgSubDivisions_rec IS RECORD(
    OSD_CODE              TQC_ORG_SUBDIVISIONS.OSD_CODE%TYPE,
    OSD_PARENT_OSD_CODE   TQC_ORG_SUBDIVISIONS.OSD_PARENT_OSD_CODE%TYPE,
    OSD_DLT_CODE          TQC_ORG_SUBDIVISIONS.OSD_DLT_CODE%TYPE,
    OSD_ODL_CODE          TQC_ORG_SUBDIVISIONS.OSD_ODL_CODE%TYPE,
    OSD_NAME              TQC_ORG_SUBDIVISIONS.OSD_NAME%TYPE,
    OSD_WEF               TQC_ORG_SUBDIVISIONS.OSD_WEF%TYPE,
    OSD_DIV_HEAD_AGN_CODE TQC_ORG_SUBDIVISIONS.OSD_DIV_HEAD_AGN_CODE%TYPE,
    OSD_SYS_CODE          TQC_ORG_SUBDIVISIONS.OSD_SYS_CODE%TYPE,
    DLT_DESC              TQC_ORG_DIVISION_LEVELS_TYPE.DLT_DESC%TYPE,
    ODL_DESC              TQC_ORG_DIVISION_LEVELS.ODL_DESC%TYPE,
    AGENT_NAME            VARCHAR2(100),
    ODL_RANKING           TQC_ORG_DIVISION_LEVELS.ODL_RANKING%TYPE,
    ODL_TYPE              TQC_ORG_DIVISION_LEVELS.ODL_TYPE%TYPE,
    OSD_BRN_CODE          TQC_ORG_SUBDIVISIONS.OSD_BRN_CODE%TYPE,
    OSD_REG_CODE          TQC_ORG_SUBDIVISIONS.OSD_REG_CODE%TYPE,
    OSD_POST_LEVEL        TQC_ORG_SUBDIVISIONS.OSD_POST_LEVEL%TYPE,
    OSD_MANAGER_ALLWD     TQC_ORG_SUBDIVISIONS.OSD_MANAGER_ALLWD%TYPE,
    OSD_OVER_COMM_EARN    TQC_ORG_SUBDIVISIONS.OSD_OVER_COMM_EARN%TYPE,
    OSD_ID                TQC_ORG_SUBDIVISIONS.OSD_ID%TYPE,
    OSD_PARENT_ID         TQC_ORG_SUBDIVISIONS.OSD_PARENT_ID%TYPE);
  TYPE orgSubDivisions_ref IS REF CURSOR RETURN orgSubDivisions_rec;
  FUNCTION getOrgSubDivisionsBySys(v_sys_code IN NUMBER)
    RETURN orgSubDivisions_ref;
  FUNCTION getLowestOrgSubDivsBySys(v_sys_code IN NUMBER, v_ac_type NUMBER)
    RETURN orgSubDivisions_ref;
  FUNCTION getOrgSubDivisionsBySubDiv(v_osd_code IN VARCHAR2)
    RETURN orgSubDivisions_ref;
  FUNCTION getOrgSubDivisionsByDlt(v_dlt_code IN VARCHAR2)
    RETURN orgSubDivisions_ref;

  TYPE agenciesLov_rec IS RECORD(
    AGN_CODE     TQC_AGENCIES.AGN_CODE%TYPE,
    AGN_SHT_DESC TQC_AGENCIES.AGN_SHT_DESC%TYPE,
    AGN_NAME     TQC_AGENCIES.AGN_NAME%TYPE);
  TYPE agenciesLov_ref IS REF CURSOR RETURN agenciesLov_rec;
  FUNCTION getAllAgenciesLov RETURN agenciesLov_ref;
  FUNCTION getAllMarketers(v_actCode NUMBER DEFAULT NULL)
    RETURN agenciesLov_ref;
  FUNCTION getSpecificMarketers(v_agn_code IN NUMBER) RETURN agenciesLov_ref;

  TYPE agencyActivities_rec IS RECORD(
    AAC_CODE          TQC_AGENCY_ACTIVITIES.AAC_CODE%TYPE,
    AAC_ACTY_CODE     TQC_AGENCY_ACTIVITIES.AAC_ACTY_CODE%TYPE,
    AAC_WEF           TQC_AGENCY_ACTIVITIES.AAC_WEF%TYPE,
    AAC_ESTIMATE_WET  TQC_AGENCY_ACTIVITIES.AAC_ESTIMATE_WET%TYPE,
    AAC_ACTUAL_WET    TQC_AGENCY_ACTIVITIES.AAC_ACTUAL_WET%TYPE,
    AAC_REMARKS       TQC_AGENCY_ACTIVITIES.AAC_REMARKS%TYPE,
    AAC_AGN_CODE      TQC_AGENCY_ACTIVITIES.AAC_AGN_CODE%TYPE,
    AAC_CLNT_CODE     TQC_AGENCY_ACTIVITIES.AAC_CLNT_CODE%TYPE,
    AAC_SPR_CODE      TQC_AGENCY_ACTIVITIES.AAC_SPR_CODE%TYPE,
    AAC_SYS_CODE      TQC_AGENCY_ACTIVITIES.AAC_SYS_CODE%TYPE,
    AAC_MKTR_AGN_CODE TQC_AGENCY_ACTIVITIES.AAC_MKTR_AGN_CODE%TYPE,
    ACTY_DESC         VARCHAR2(100),
    CLIENT_NAME       VARCHAR2(100),
    AGENCY_NAME       VARCHAR2(100),
    MKTR_AGENCY_NAME  VARCHAR2(100),
    PROVIDER_NAME     VARCHAR2(100),
    SYSTEM_NAME       VARCHAR2(100));
  TYPE agencyActivities_ref IS REF CURSOR RETURN agencyActivities_rec;

  FUNCTION getAgencyActivities(v_agn_code IN NUMBER)
    RETURN agencyActivities_ref;
  TYPE agencyActivitiesDetails_rec IS RECORD(
    AAC_CODE         TQC_AGENCY_ACTIVITIES.AAC_CODE%TYPE,
    AAC_ACTY_CODE    TQC_AGENCY_ACTIVITIES.AAC_ACTY_CODE%TYPE,
    AAC_WEF          TQC_AGENCY_ACTIVITIES.AAC_WEF%TYPE,
    AAC_ESTIMATE_WET TQC_AGENCY_ACTIVITIES.AAC_ESTIMATE_WET%TYPE,
    AAC_ACTUAL_WET   TQC_AGENCY_ACTIVITIES.AAC_ACTUAL_WET%TYPE,
    AAC_REMARKS      TQC_AGENCY_ACTIVITIES.AAC_REMARKS%TYPE,
    AAC_AGN_CODE     TQC_AGENCY_ACTIVITIES.AAC_AGN_CODE%TYPE,
    AAC_SYS_CODE     TQC_AGENCY_ACTIVITIES.AAC_SYS_CODE%TYPE,
    AAC_BY_CODE      TQC_AGENCY_ACTIVITIES.AAC_BY_CODE%TYPE,
    AAC_BY_TYPE      TQC_AGENCY_ACTIVITIES.AAC_BY_TYPE%TYPE,
    ACTY_DESC        VARCHAR2(100),
    AGENCY_NAME      VARCHAR2(100),
    SYSTEM_NAME      VARCHAR2(100),
    ACC_TYPE_NAME    VARCHAR2(150),
    AAC_REASONS      TQC_AGENCY_ACTIVITIES.AAC_REASONS%TYPE
    
    );
  TYPE agencyActivitiesDetails_ref IS REF CURSOR RETURN agencyActivitiesDetails_rec;
  FUNCTION getAgencyActivitiesDetails(v_agn_code IN NUMBER)
    RETURN agencyActivitiesDetails_ref;

  FUNCTION CLNT_NAME(v_client_code NUMBER) RETURN VARCHAR2;

  FUNCTION AGN_NAME(v_agn_code NUMBER) RETURN VARCHAR2;

  FUNCTION ACTIVITY_DESC(v_acty_code NUMBER) RETURN VARCHAR2;

  FUNCTION PROVIDER_NAME(v_spr_code NUMBER) RETURN VARCHAR2;

  FUNCTION SYSTEM_NAME(v_sys_code NUMBER) RETURN VARCHAR2;

  TYPE activityTypes_rec IS RECORD(
    ACTY_CODE     TQC_ACTIVITY_TYPES.ACTY_CODE%TYPE,
    ACTY_SYS_CODE TQC_ACTIVITY_TYPES.ACTY_SYS_CODE%TYPE,
    ACTY_DESC     TQC_ACTIVITY_TYPES.ACTY_DESC%TYPE);
  TYPE activityTypes_ref IS REF CURSOR RETURN activityTypes_rec;
  FUNCTION getAllActivityTypes RETURN activityTypes_ref;
  FUNCTION getAllActivityTypesBySys(v_sys_code NUMBER)
    RETURN activityTypes_ref;
  FUNCTION getActivityTypesBySystem(v_sys_code NUMBER)
    RETURN activityTypes_ref;

  TYPE clientsLov_rec IS RECORD(
    CLNT_CODE     TQC_CLIENTS.CLNT_CODE%TYPE,
    CLNT_SHT_DESC TQC_CLIENTS.CLNT_SHT_DESC%TYPE,
    CLNT_NAME     TQC_CLIENTS.CLNT_NAME%TYPE);
  TYPE clientsLov_ref IS REF CURSOR RETURN clientsLov_rec;
  FUNCTION getAllClientsLov RETURN clientsLov_ref;

  TYPE serviceProviderLov_rec IS RECORD(
    SPR_CODE     TQC_SERVICE_PROVIDERS.SPR_CODE%TYPE,
    SPR_SHT_DESC TQC_SERVICE_PROVIDERS.SPR_SHT_DESC%TYPE,
    SPR_NAME     TQC_SERVICE_PROVIDERS.SPR_NAME%TYPE);
  TYPE serviceProviderLov_ref IS REF CURSOR RETURN serviceProviderLov_rec;
  FUNCTION getAllServiceProvLov RETURN serviceProviderLov_ref;

  FUNCTION COUNTRY_NAME(v_cou_code NUMBER) RETURN VARCHAR2;

  FUNCTION TOWN_NAME(v_twn_code NUMBER) RETURN VARCHAR2;

  TYPE holidaysDef_rec IS RECORD(
    THD_DESC     TQC_HOLIDAYS_DEFINITIONS.THD_DESC%TYPE,
    THD_DAY      TQC_HOLIDAYS_DEFINITIONS.THD_DAY%TYPE,
    THD_MON      TQC_HOLIDAYS_DEFINITIONS.THD_MON%TYPE,
    THD_STATUS   TQC_HOLIDAYS_DEFINITIONS.THD_STATUS%TYPE,
    THD_COU_CODE TQC_HOLIDAYS_DEFINITIONS.THD_COU_CODE%TYPE);
  TYPE holidaysDef_ref IS REF CURSOR RETURN holidaysDef_rec;
  FUNCTION getHolidayDefinitions(v_cou_code IN NUMBER) RETURN holidaysDef_ref;

  FUNCTION ACC_TYPE_NAME(v_act_code NUMBER) RETURN VARCHAR2;

  TYPE accountTypesLov_rec IS RECORD(
    ACT_CODE          TQC_ACCOUNT_TYPES.ACT_CODE%TYPE,
    ACT_TYPE_SHT_DESC TQC_ACCOUNT_TYPES.ACT_TYPE_SHT_DESC%TYPE,
    ACT_ACCOUNT_TYPE  TQC_ACCOUNT_TYPES.ACT_ACCOUNT_TYPE%TYPE);
  TYPE accountTypesLov_ref IS REF CURSOR RETURN accountTypesLov_rec;
  FUNCTION getAllAccountTypesLov RETURN accountTypesLov_ref;
  FUNCTION getHierarchyAccTypesLov(v_sys_code NUMBER)
    RETURN accountTypesLov_ref;

  TYPE orgSubDivPrevHeads_rec IS RECORD(
    OSDPH_CODE          TQC_ORG_SUBDIV_PREV_HEADS.OSDPH_CODE%TYPE,
    OSDPH_OSD_CODE      TQC_ORG_SUBDIV_PREV_HEADS.OSDPH_OSD_CODE%TYPE,
    OSDPH_PREV_AGN_CODE TQC_ORG_SUBDIV_PREV_HEADS.OSDPH_PREV_AGN_CODE%TYPE,
    OSDPH_WET           TQC_ORG_SUBDIV_PREV_HEADS.OSDPH_WET%TYPE,
    OSD_NAME            TQC_ORG_SUBDIVISIONS.OSD_NAME%TYPE,
    AGENCY_NAME         VARCHAR2(100),
    OSDPH_OSD_ID        TQC_ORG_SUBDIV_PREV_HEADS.OSDPH_OSD_ID%TYPE);
  TYPE orgSubDivPrevHeads_ref IS REF CURSOR RETURN orgSubDivPrevHeads_rec;
  FUNCTION getOrgSubDivPrevHeads(v_osd_code IN VARCHAR2)
    RETURN orgSubDivPrevHeads_ref;

  TYPE sysPostLevels_rec IS RECORD(
    SYSPL_SYS_CODE TQC_SYS_POST_LEVELS.SYSPL_SYS_CODE%TYPE,
    SYSPL_CODE     TQC_SYS_POST_LEVELS.SYSPL_CODE%TYPE,
    SYSPL_SHT_DESC TQC_SYS_POST_LEVELS.SYSPL_SHT_DESC%TYPE,
    SYSPL_DESC     TQC_SYS_POST_LEVELS.SYSPL_DESC%TYPE,
    SYSPL_RANKING  TQC_SYS_POST_LEVELS.SYSPL_RANKING%TYPE,
    SYSPL_WEF      TQC_SYS_POST_LEVELS.SYSPL_WEF%TYPE);
  TYPE sysPostLevels_ref IS REF CURSOR RETURN sysPostLevels_rec;
  FUNCTION getSysPostLevelsBySys(v_sys_code NUMBER) RETURN sysPostLevels_ref;

  TYPE sysPost_rec IS RECORD(
    SPOST_SYS_CODE          TQC_SYS_POSTS.SPOST_SYS_CODE%TYPE,
    SPOST_SYSPL_CODE        TQC_SYS_POSTS.SPOST_SYSPL_CODE%TYPE,
    SPOST_PARENT_SPOST_CODE TQC_SYS_POSTS.SPOST_PARENT_SPOST_CODE%TYPE,
    SPOST_CODE              TQC_SYS_POSTS.SPOST_CODE%TYPE,
    SPOST_SHT_DESC          TQC_SYS_POSTS.SPOST_SHT_DESC%TYPE,
    SPOST_DESC              TQC_SYS_POSTS.SPOST_DESC%TYPE,
    SPOST_REMARKS           TQC_SYS_POSTS.SPOST_REMARKS%TYPE,
    SPOST_WEF               TQC_SYS_POSTS.SPOST_WEF%TYPE,
    SPOST_BRN_CODE          TQC_SYS_POSTS.SPOST_BRN_CODE%TYPE,
    SPOST_SUBDIV_OSD_CODE   TQC_SYS_POSTS.SPOST_SUBDIV_OSD_CODE%TYPE,
    SPOST_USR_CODE          TQC_SYS_POSTS.SPOST_USR_CODE%TYPE);
  TYPE sysPost_ref IS REF CURSOR RETURN sysPost_rec;
  FUNCTION getSysPostsByLevel(v_syspl_code NUMBER) RETURN sysPost_ref;
  FUNCTION getSysPostsByPost(v_spost_code NUMBER) RETURN sysPost_ref;
  FUNCTION getSysPostsBySystem(v_sys_code NUMBER) RETURN sysPost_ref;

  TYPE sysPrcssSubAreaLmts_rec IS RECORD(
    SPSAT_CODE        TQC_SYS_PRCSS_SUBAREA_LMTS.SPSAT_CODE%TYPE,
    SPSAT_SPRSA_CODE  TQC_SYS_PRCSS_SUBAREA_LMTS.SPSAT_SPRSA_CODE%TYPE,
    SPSAT_NO_OF_LEVEL TQC_SYS_PRCSS_SUBAREA_LMTS.SPSAT_NO_OF_LEVEL%TYPE,
    SPSAT_MIN_LIMIT   TQC_SYS_PRCSS_SUBAREA_LMTS.SPSAT_MIN_LIMIT%TYPE,
    SPSAT_MAX_LIMIT   TQC_SYS_PRCSS_SUBAREA_LMTS.SPSAT_MAX_LIMIT%TYPE);
  TYPE sysPrcssSubAreaLmts_ref IS REF CURSOR RETURN sysPrcssSubAreaLmts_rec;
  FUNCTION getSysPrcssSubAreaLmts(v_sprsa_code NUMBER)
    RETURN sysPrcssSubAreaLmts_ref;

  TYPE sysPrcssSubAreaLvls_rec IS RECORD(
    SPSAL_CODE          TQC_SYS_PRCSS_SUBAREA_LVLS.SPSAL_CODE%TYPE,
    SPSAL_SPRSA_CODE    TQC_SYS_PRCSS_SUBAREA_LVLS.SPSAL_SPRSA_CODE%TYPE,
    SPSAL_SPSAT_CODE    TQC_SYS_PRCSS_SUBAREA_LVLS.SPSAL_SPSAT_CODE%TYPE,
    SPSAL_LEVEL         TQC_SYS_PRCSS_SUBAREA_LVLS.SPSAL_LEVEL%TYPE,
    SPSAL_APPROVER_TYPE TQC_SYS_PRCSS_SUBAREA_LVLS.SPSAL_APPROVER_TYPE%TYPE,
    SPSAL_APPROVER_ID   TQC_SYS_PRCSS_SUBAREA_LVLS.SPSAL_APPROVER_ID%TYPE,
    USR_USERNAME        tqc_users.USR_USERNAME%TYPE);
  TYPE sysPrcssSubAreaLvls_ref IS REF CURSOR RETURN sysPrcssSubAreaLvls_rec;
  FUNCTION getSysPrcssSubAreaLvls(v_spsat_code NUMBER)
    RETURN sysPrcssSubAreaLvls_ref;

  FUNCTION BANK_NAME(v_bnk_code NUMBER) RETURN VARCHAR2;

  TYPE ddFwdingBanks_rec IS RECORD(
    BNK_CODE               TQC_BANKS.BNK_CODE%TYPE,
    DDR_REPORT_DESCRIPTION TQC_DIRECT_DEBIT_REPORTS.DDR_REPORT_DESCRIPTION%TYPE,
    BNK_BANK_NAME          TQC_BANKS.BNK_BANK_NAME%TYPE);
  TYPE ddFwdingBanks_ref IS REF CURSOR RETURN ddFwdingBanks_rec;
  FUNCTION getDDFwdingBanksLov RETURN ddFwdingBanks_ref;

  TYPE directDebitReports_rec IS RECORD(
    DDR_CODE               TQC_DIRECT_DEBIT_REPORTS.DDR_CODE%TYPE,
    DDR_REPORT_DESCRIPTION TQC_DIRECT_DEBIT_REPORTS.DDR_REPORT_DESCRIPTION%TYPE);
  TYPE directDebitReports_ref IS REF CURSOR RETURN directDebitReports_rec;
  FUNCTION getDirectDebitReports RETURN directDebitReports_ref;

  FUNCTION DDREPORT_DESC(v_ddr_code NUMBER) RETURN VARCHAR2;

  TYPE users_rec IS RECORD(
    USR_CODE              TQC_USERS.USR_CODE%TYPE,
    USR_USERNAME          TQC_USERS.USR_USERNAME%TYPE,
    USR_NAME              TQC_USERS.USR_NAME%TYPE,
    USR_LAST_DATE         TQC_USERS.USR_LAST_DATE%TYPE,
    USR_DT_CREATED        TQC_USERS.USR_DT_CREATED%TYPE,
    USR_STATUS            TQC_USERS.USR_STATUS%TYPE,
    USR_PWD               TQC_USERS.USR_PWD%TYPE,
    USR_CREATED_BY        TQC_USERS.USR_CREATED_BY%TYPE,
    USR_EMAIL             TQC_USERS.USR_EMAIL%TYPE,
    USR_PER_RANK_ID       TQC_USERS.USR_PER_RANK_ID%TYPE,
    USR_PER_RANK_SHT_DESC TQC_USERS.USR_PER_RANK_SHT_DESC%TYPE,
    USR_PER_ID            TQC_USERS.USR_PER_ID%TYPE,
    USR_PERSONEL_RANK     TQC_USERS.USR_PERSONEL_RANK%TYPE,
    USR_PWD_CHANGED       TQC_USERS.USR_PWD_CHANGED%TYPE,
    USR_PWD_RESET         TQC_USERS.USR_PWD_RESET%TYPE,
    USR_LOGIN_ATTEMPTS    TQC_USERS.USR_LOGIN_ATTEMPTS%TYPE,
    USR_SIGN              TQC_USERS.USR_SIGN%TYPE,
    USR_REF               TQC_USERS.USR_REF%TYPE,
    USR_TYPE              TQC_USERS.USR_TYPE%TYPE,
    USR_SIGNATURE         TQC_USERS.USR_SIGNATURE%TYPE,
    USR_ACCT_MGR          TQC_USERS.USR_ACCT_MGR%TYPE);
  TYPE users_ref IS REF CURSOR RETURN users_rec;
  FUNCTION getUsersByTypeGroup RETURN users_ref;
  FUNCTION getUsersByTypeUser RETURN users_ref;
  FUNCTION CURRENCY_SYSMBOL(v_cur_code NUMBER) RETURN VARCHAR2;
  FUNCTION STATE_NAME(v_sts_code NUMBER) RETURN VARCHAR2;
  FUNCTION ADMIN_REGION_NAME(v_admin_region_code NUMBER) RETURN VARCHAR2;

  FUNCTION System_param_val(v_param_name VARCHAR2) RETURN VARCHAR2;

  TYPE check_activity_exist_rec IS RECORD(
    v_count Number);

  TYPE check_activity_exist_ref IS REF CURSOR RETURN check_activity_exist_rec;

  FUNCTION check_activity_exist(v_param_name VARCHAR2)
    RETURN check_activity_exist_ref;
  FUNCTION check_hierarchy_exist(v_param_name VARCHAR2)
    RETURN check_activity_exist_ref;
  FUNCTION check_hierarchy_ranking_exist(v_odlt_code VARCHAR2,
                                         v_rank      TQC_ORG_DIVISION_LEVELS.ODL_RANKING%TYPE)
    RETURN check_activity_exist_ref;

  TYPE checkif_dob_required_rec IS RECORD(
    PARAM_VALUE TQC_PARAMETERS.PARAM_VALUE%TYPE);

  TYPE checkif_dob_required_ref IS REF CURSOR RETURN checkif_dob_required_rec;

  FUNCTION checkif_dob_required RETURN checkif_dob_required_ref;
  FUNCTION checkif_sms_required RETURN checkif_dob_required_ref;
  FUNCTION checkif_default_date RETURN checkif_dob_required_ref;
  TYPE check_max_rank_rec IS RECORD(
    v_count Number);

  TYPE check_max_rank_ref IS REF CURSOR RETURN check_max_rank_rec;
  FUNCTION check_max_rank(v_dlt_code IN varchar2) RETURN check_max_rank_ref;
  FUNCTION checkif_UpperCase_required RETURN checkif_dob_required_ref;
  FUNCTION checkif_DIVISIONS_APPLIC RETURN checkif_dob_required_ref;

  /*TYPE participantsByActivity_rec IS RECORD(
  
    PARTICIP_ID        TQC_ACTIVITY_PARTICIPANTS.PARTICIP_ID%TYPE,
    PARTICIP_CODE     TQC_ACTIVITY_PARTICIPANTS.PARTICIP_CODE%TYPE,
    PARTICIP_AAC_CODE TQC_ACTIVITY_PARTICIPANTS.PARTICIP_AAC_CODE%TYPE,
    PARTICIP_TYPE     VARCHAR2(300),
    PARTICIP_BY_CODE TQC_ACTIVITY_PARTICIPANTS.PARTICIP_BY_CODE%TYPE,
    agnName  VARCHAR2(300)
          
  
  
  );*/

  --TYPE  participantsByActivity_ref IS REF CURSOR RETURN  participantsByActivity_rec; 
  --FUNCTION getParticipantsByActivity(v_aac_code TQC_ACTIVITY_PARTICIPANTS.PARTICIP_AAC_CODE%TYPE)  RETURN participantsByActivity_ref;

  FUNCTION get_agencyName(v_agn_type varchar2, v_ag_code Number)
    RETURN VARCHAR2;
  /*PROCEDURE create_activity_particip(v_addEdit VARCHAR2,
  v_particip_id          TQC_ACTIVITY_PARTICIPANTS.PARTICIP_ID%TYPE ,   
  v_particip_aac_code  TQC_ACTIVITY_PARTICIPANTS.PARTICIP_AAC_CODE%TYPE,
  v_particip_type      TQC_ACTIVITY_PARTICIPANTS.PARTICIP_TYPE%TYPE,              
  v_particip_by_code   TQC_ACTIVITY_PARTICIPANTS.PARTICIP_BY_CODE%TYPE,
  v_particip_code      TQC_ACTIVITY_PARTICIPANTS.PARTICIP_CODE%TYPE               
  
        );*/
  TYPE checkif_user_Active_rec IS RECORD(
    
    CLNT_STATUS TQC_CLIENTS.CLNT_STATUS%TYPE
    
    );

  TYPE checkif_user_Active_ref IS REF CURSOR RETURN checkif_user_Active_rec;
  FUNCTION checkif_user_Active(v_client_code TQC_CLIENTS.CLNT_STATUS%TYPE)
    RETURN checkif_user_Active_ref;
  FUNCTION SECTOR_NAME(v_sec_code NUMBER) RETURN VARCHAR2;
  FUNCTION PARENT_COMPANY_NAME(v_parent_code NUMBER) RETURN VARCHAR2;
  FUNCTION checkif_TelephoneRequired RETURN checkif_dob_required_ref;
  FUNCTION checkif_EmailRequired RETURN checkif_dob_required_ref;
  FUNCTION getAgenciesByAccType(v_sht_desc IN VARCHAR2)
    RETURN agenciesLov_ref;
  FUNCTION GETAGENCY_NAME(v_agn_code NUMBER, v_acc_type VARCHAR2)
    RETURN VARCHAR2;
  FUNCTION ACCOUNT_TYPE_NAME(v_sht_desc VARCHAR2) RETURN VARCHAR2;
  TYPE returnParam_rec IS RECORD(
    PARAM_VALUE TQC_PARAMETERS.PARAM_VALUE%TYPE);

  TYPE returnParam_ref IS REF CURSOR RETURN returnParam_rec;
  FUNCTION findDefaultSite RETURN returnParam_ref;
  TYPE returnBranches_rec IS RECORD(
    BRN_CODE     TQC_BRANCHES.BRN_CODE%TYPE,
    BRN_SHT_DESC TQC_BRANCHES.BRN_SHT_DESC%TYPE,
    BRN_NAME     TQC_BRANCHES.BRN_NAME%TYPE
    
    );

  TYPE returnBranches_ref IS REF CURSOR RETURN returnBranches_rec;

  FUNCTION findBranches(v_reg_code Number) RETURN returnBranches_ref;
  FUNCTION BRANCH_NAME(v_brn_code NUMBER) RETURN VARCHAR2;
  FUNCTION BANKBRANCH_NAME(v_bbr_code NUMBER) RETURN VARCHAR2;

  TYPE claimPaymodes_rec IS RECORD(
    CPM_CODE     TQC_CLM_PAYMENT_MODES.CPM_CODE%TYPE,
    CPM_SHT_DESC TQC_CLM_PAYMENT_MODES.CPM_SHT_DESC%TYPE,
    CPM_DESC     TQC_CLM_PAYMENT_MODES.CPM_DESC%TYPE,
    CPM_REMARKS  TQC_CLM_PAYMENT_MODES.CPM_REMARKS%TYPE,
    CPM_MIN_AMT  TQC_CLM_PAYMENT_MODES.CPM_MIN_AMT%TYPE,
    CPM_MAX_AMT  TQC_CLM_PAYMENT_MODES.CPM_MAX_AMT%TYPE,
    CPM_DEFAULT  TQC_CLM_PAYMENT_MODES.CPM_DEFAULT%TYPE
    
    );

  TYPE claimPaymodes_ref IS REF CURSOR RETURN claimPaymodes_rec;
  FUNCTION getClaimPaymodes RETURN claimPaymodes_ref;

  TYPE mobilePaymentTypes_rec IS RECORD(
    MPT_CODE            TQC_MOBILE_PYMNT_TYPES.MPT_CODE%TYPE,
    MPT_SHT_DESC        TQC_MOBILE_PYMNT_TYPES.MPT_SHT_DESC%TYPE,
    MPT_DESC            TQC_MOBILE_PYMNT_TYPES.MPT_DESC%TYPE,
    MPT_MIN_AMT_ALLOWED TQC_MOBILE_PYMNT_TYPES.MPT_MIN_AMT_ALLOWED%TYPE,
    MPT_MAX_AMT_ALLOWED TQC_MOBILE_PYMNT_TYPES.MPT_MAX_AMT_ALLOWED%TYPE,
    MPT_COU_CODE        TQC_MOBILE_PYMNT_TYPES.MPT_COU_CODE%TYPE
    
    );

  TYPE mobilePaymentTypes_ref IS REF CURSOR RETURN mobilePaymentTypes_rec;
  FUNCTION getMobilePaymentTypes(v_cou_code TQC_MOBILE_PYMNT_TYPES.MPT_COU_CODE%TYPE)
    RETURN mobilePaymentTypes_ref;
  TYPE mobileTypesPrefix_rec IS RECORD(
    MPTP_CODE          TQC_MOB_PYMNT_TYPES_PREFIXES.MPTP_CODE%TYPE,
    MPTP_MOB_NO_PREFIX TQC_MOB_PYMNT_TYPES_PREFIXES.MPTP_MOB_NO_PREFIX%TYPE,
    MPTP_MPT_CODE      TQC_MOB_PYMNT_TYPES_PREFIXES.MPTP_MPT_CODE%TYPE,
    sms_number varchar2(200)
    
    );

  TYPE mobileTypesPrefix_ref IS REF CURSOR RETURN mobileTypesPrefix_rec;
  FUNCTION getMobTypesPrefixes(v_mptp_code TQC_MOB_PYMNT_TYPES_PREFIXES.MPTP_MPT_CODE%TYPE)
    RETURN mobileTypesPrefix_ref;
  FUNCTION getMobPrefixes(v_couCode     NUMBER)
    RETURN mobileTypesPrefix_ref;
  TYPE user_rec IS RECORD(
    USR_CODE     TQC_USERS.USR_CODE%TYPE,
    USR_USERNAME TQC_USERS.USR_USERNAME%TYPE,
    USR_NAME     TQC_USERS.USR_NAME%TYPE,
    
    USR_DT_CREATED TQC_USERS.USR_DT_CREATED%TYPE,
    USR_CREATED_BY TQC_USERS.USR_CREATED_BY%TYPE
    
    );

  TYPE user_ref IS REF CURSOR RETURN user_rec;
  FUNCTION getGroupUsers(v_created_date VARCHAR2) RETURN user_ref;
  TYPE userGroup_rec IS RECORD(
    GUSR_CODE         TQC_GROUP_USERS.GUSR_CODE%TYPE,
    GUSR_GRP_USR_CODE TQC_GROUP_USERS.GUSR_GRP_USR_CODE%TYPE,
    USR_CODE          TQC_USERS.USR_CODE%TYPE,
    USR_USERNAME      TQC_USERS.USR_USERNAME%TYPE,
    USR_NAME          TQC_USERS.USR_NAME%TYPE
    
    );

  TYPE userGroup_ref IS REF CURSOR RETURN userGroup_rec;
  FUNCTION getGroupsMembers(v_grp_usr_code TQC_GROUP_USERS.GUSR_GRP_USR_CODE%TYPE)
    RETURN userGroup_ref;
  FUNCTION findMemoClassApplicable RETURN returnParam_ref;

  TYPE clientGroup_rec IS RECORD(
    GRP_CODE    TQC_GROUP_CLIENT.GRP_CODE%TYPE,
    GRP_NAME    TQC_GROUP_CLIENT.GRP_NAME%TYPE,
    GRP_MINIMUM TQC_GROUP_CLIENT.GRP_MINIMUM%TYPE,
    GRP_MAXIMUM TQC_GROUP_CLIENT.GRP_MAXIMUM%TYPE
    
    );

  TYPE clientGroup_ref IS REF CURSOR RETURN clientGroup_rec;
  FUNCTION getClientGroups RETURN clientGroup_ref;

  TYPE clientGroupDtls_rec IS RECORD(
    GRP_NAME         TQC_GROUP_CLIENT.GRP_CODE%TYPE,
    GRPD_CODE        TQC_GROUP_CLNT_DTLS.GRPD_CODE%TYPE,
    GRPD_CLNT_CODE   TQC_GROUP_CLNT_DTLS.GRPD_CLNT_CODE%TYPE,
    GRPD_GRP_CODE    TQC_GROUP_CLNT_DTLS.GRPD_GRP_CODE%TYPE,
    CLNT_SHT_DESC    TQC_CLIENTS.CLNT_SHT_DESC%TYPE,
    CLNT_NAME        TQC_CLIENTS.CLNT_NAME%TYPE,
    CLNT_OTHER_NAMES TQC_CLIENTS.CLNT_OTHER_NAMES%TYPE
    
    );

  TYPE clientGroupDtls_ref IS REF CURSOR RETURN clientGroupDtls_rec;
  FUNCTION getClientGroupMembers(v_grp_code TQC_GROUP_CLNT_DTLS.GRPD_GRP_CODE%TYPE)
    RETURN clientGroupDtls_ref;

  TYPE clientComplaints_rec IS RECORD(
    
    COMP_CODE        TQC_CLIENT_COMPLAINTS.COMP_CODE%TYPE,
    COMP_CLNT_CODE   TQC_CLIENT_COMPLAINTS.COMP_CLNT_CODE%TYPE,
    COMP_SUBJECT     TQC_CLIENT_COMPLAINTS.COMP_SUBJECT%TYPE,
    COMP_MESSAGE     TQC_CLIENT_COMPLAINTS.COMP_MESSAGE%TYPE,
    CLNT_SHT_DESC    TQC_CLIENTS.CLNT_SHT_DESC%TYPE,
    CLNT_NAME        TQC_CLIENTS.CLNT_NAME%TYPE,
    CLNT_OTHER_NAMES TQC_CLIENTS.CLNT_OTHER_NAMES%TYPE
    
    );

  TYPE clientComplaints_ref IS REF CURSOR RETURN clientComplaints_rec;

  FUNCTION getClientComplaints(v_clnt_code TQC_CLIENT_COMPLAINTS.COMP_CLNT_CODE%TYPE)
    RETURN clientComplaints_ref;
  FUNCTION PHYSICAL_ADDRESS_REQUIRED RETURN returnParam_ref;
  FUNCTION POSTAL_ADDRESS_REQUIRED RETURN returnParam_ref;

  TYPE print_server_rec IS RECORD(
    
    SERV_CODE              TQC_PRINT_SERVERS.SERV_CODE%TYPE,
    SERV_NAME              TQC_PRINT_SERVERS.SERV_NAME%TYPE,
    SERV_FILTER            TQC_PRINT_SERVERS.SERV_FILTER%TYPE,
    SERV_URI               TQC_PRINT_SERVERS.SERV_URI%TYPE,
    SERV_FILTER_COMMAND    TQC_PRINT_SERVERS.SERV_FILTER_COMMAND%TYPE,
    SERV_SEC_USERNAME      TQC_PRINT_SERVERS.SERV_SEC_USERNAME%TYPE,
    SERV_SEC_PASSWORD      TQC_PRINT_SERVERS.SERV_SEC_PASSWORD%TYPE,
    SERV_SEC_AUTH_TYPE     TQC_PRINT_SERVERS.SERV_SEC_AUTH_TYPE%TYPE,
    SERV_SEC_ENCRPT_TYPE   TQC_PRINT_SERVERS.SERV_SEC_ENCRPT_TYPE%TYPE,
    SERV_PROXY_HOST        TQC_PRINT_SERVERS.SERV_PROXY_HOST%TYPE,
    SERV_PROXY_PORT        TQC_PRINT_SERVERS.SERV_PROXY_PORT%TYPE,
    SERV_PROXY_USERNAME    TQC_PRINT_SERVERS.SERV_PROXY_USERNAME%TYPE,
    SERV_PROXY_PASWORD     TQC_PRINT_SERVERS.SERV_PROXY_PASWORD%TYPE,
    SERV_PROXY_AUTHEN_TYPE TQC_PRINT_SERVERS.SERV_PROXY_AUTHEN_TYPE%TYPE
    
    );

  TYPE print_server_ref IS REF CURSOR RETURN print_server_rec;
  FUNCTION get_print_servers RETURN print_server_ref;

  TYPE branch_names_details_rec IS RECORD(
    BNS_CODE        TQC_BRANCH_NAMES.BNS_CODE%TYPE,
    BNS_SHT_DESC    TQC_BRANCH_NAMES.BNS_SHT_DESC%TYPE,
    BNS_NAME        TQC_BRANCH_NAMES.BNS_NAME%TYPE,
    BNS_PHY_ADDRS   TQC_BRANCH_NAMES.BNS_PHY_ADDRS%TYPE,
    BNS_EMAIL_ADDRS TQC_BRANCH_NAMES.BNS_EMAIL_ADDRS%TYPE,
    BNS_POST_ADDRS  TQC_BRANCH_NAMES.BNS_POST_ADDRS%TYPE,
    BNS_TWN_CODE    TQC_BRANCH_NAMES.BNS_TWN_CODE%TYPE,
    BNS_COU_CODE    TQC_BRANCH_NAMES.BNS_COU_CODE%TYPE,
    BNS_CONTACT     TQC_BRANCH_NAMES.BNS_CONTACT%TYPE,
    BNS_MANAGER     TQC_BRANCH_NAMES.BNS_MANAGER%TYPE,
    BNS_TEL         TQC_BRANCH_NAMES.BNS_TEL%TYPE,
    BNS_FAX         TQC_BRANCH_NAMES.BNS_FAX%TYPE,
    BNS_STATE_CODE  TQC_BRANCH_NAMES.BNS_STATE_CODE%TYPE,
    TOWN            VARCHAR2(100),
    COUNTRY         VARCHAR2(100),
    STATE           VARCHAR2(100)
    
    );

  TYPE branch_names_details_ref IS REF CURSOR RETURN branch_names_details_rec;

  FUNCTION getBranchNames RETURN branch_names_details_ref;
  TYPE branch_printer_rec IS RECORD(
    
    PRINTER_NAME VARCHAR2(100)
    
    );

  TYPE branch_printer_ref IS REF CURSOR RETURN branch_printer_rec;

  PROCEDURE get_branch_printers(v_cursor OUT branch_printer_ref,
                                brn_code IN NUMBER,
                                div_code IN NUMBER);
  TYPE msg_template_rec IS RECORD(
    MSGT_CODE       TQC_MSG_TEMPLATES.MSGT_CODE%TYPE,
    MSGT_SHT_DESC   TQC_MSG_TEMPLATES.MSGT_SHT_DESC%TYPE,
    MSGT_MSG        TQC_MSG_TEMPLATES.MSGT_MSG%TYPE,
    MSGT_SYS_CODE   TQC_MSG_TEMPLATES.MSGT_SYS_CODE%TYPE,
    MSGT_SYS_MODULE TQC_MSG_TEMPLATES.MSGT_SYS_MODULE%TYPE,
    MSGT_TYPE       TQC_MSG_TEMPLATES.MSGT_TYPE%TYPE
    
    );

  TYPE msg_template_ref IS REF CURSOR RETURN msg_template_rec;
  FUNCTION getMessageTemplates(v_sys_code Number) RETURN msg_template_ref;
  FUNCTION getParameter(v_param VARCHAR2) RETURN returnParam_ref;
  TYPE branch_rec IS RECORD(
    BRN_CODE     TQC_BRANCHES.BRN_CODE%TYPE,
    BRN_NAME     TQC_BRANCHES.BRN_NAME%TYPE,
    BRN_SHT_DESC TQC_BRANCHES.BRN_SHT_DESC%TYPE,
    BRN_REG_CODE TQC_BRANCHES.BRN_REG_CODE%TYPE
    
    );

  TYPE branch_ref IS REF CURSOR RETURN branch_rec;
  PROCEDURE get_AllBranches(v_refcur OUT branch_ref, v_org_code IN Number);

  FUNCTION getAllAbudgetTypesLov RETURN accountTypesLov_ref;

  FUNCTION get_em_template_by_type(v_sys_code IN NUMBER,
                                   v_msg_type VARCHAR2)
    RETURN email_templates_ref;

  TYPE lead_sources_rec IS RECORD(
    LDSRC_CODE TQC_LEADS_SOURCES.LDSRC_CODE%type,
    LDSRC_DESC TQC_LEADS_SOURCES.LDSRC_DESC%type);

  TYPE lead_sources_ref IS REF CURSOR RETURN lead_sources_rec;

  TYPE lead_statuses_rec IS RECORD(
    LSTS_CODE TQC_LEADS_STATUSES.LSTS_CODE%type,
    LSTS_DESC TQC_LEADS_STATUSES.LSTS_DESC%type);

  TYPE lead_statuses_ref IS REF CURSOR RETURN lead_statuses_rec;

  TYPE leads_rec IS RECORD(
    LDS_CODE            NUMBER(15),
    LDS_TITLE           VARCHAR2(100 BYTE),
    LDS_SURNNAME        VARCHAR2(100 BYTE),
    LDS_OTHERNAMES      VARCHAR2(100 BYTE),
    LDS_CAMP_TEL        VARCHAR2(100 BYTE),
    LDS_MOB_TEL         VARCHAR2(100 BYTE),
    LDS_CMP_CODE        NUMBER(15),
    LDS_CAMP_NAME       VARCHAR2(100 BYTE),
    LDS_FAX             VARCHAR2(100 BYTE),
    LDS_DESIGN          VARCHAR2(50 BYTE),
    LDS_EMAIL_ADDRS     VARCHAR2(50 BYTE),
    LDS_RATE_TYPE       VARCHAR2(2 BYTE),
    LDS_PHYSICAL_ADDRS  VARCHAR2(50 BYTE),
    LDS_POSTAL_ADDRS    VARCHAR2(50 BYTE),
    LDS_COUNTRY         VARCHAR2(50 BYTE),
    LDS_POSTAL_CODE     VARCHAR2(50 BYTE),
    LDS_STATE_NAME      VARCHAR2(50 BYTE),
    LDS_TWN_CODE        NUMBER(15),
    LDS_TOWN_NAME       VARCHAR2(50 BYTE),
    LDS_COU_CODE        NUMBER(15),
    LDS_STATE_CODE      NUMBER(15),
    LDS_DATE            DATE,
    LDS_DESC            VARCHAR2(500 BYTE),
    LDS_USR_CODE        NUMBER(15),
    LDS_USR_NAME        VARCHAR2(50 BYTE),
    LDS_ORG_CODE        NUMBER(15),
    LDS_ORG_NAME        VARCHAR2(50 BYTE),
    LDS_SYS_CODE        NUMBER(15),
    LDS_SYS_NAME        VARCHAR2(50 BYTE),
    LDS_CONVERTED       VARCHAR2(2 BYTE),
    LDS_PONT_NAME       VARCHAR2(50 BYTE),
    LDS_PONT_CONRT      VARCHAR2(2 BYTE),
    LDS_PONT_AMOUNT     NUMBER(15, 2),
    LDS_CUR_CODE        NUMBER(15),
    LDS_CUR_NAME        VARCHAR2(50 BYTE),
    LDS_PONT_CLOSE_DATE DATE,
    LDS_PONT_SALE_STAGE VARCHAR2(50 BYTE),
    LDS_INDUSTRY        VARCHAR2(50 BYTE),
    LDS_ANN_REVENUE     NUMBER(22, 5),
    LDS_NO_EMPYEE       NUMBER(15),
    LDS_WEB_SITE        VARCHAR2(100 BYTE),
    LDS_TEAM_USR_CODE   NUMBER(15),
    LDS_TEAM_NAME       VARCHAR2(50 BYTE),
    LDS_ACC_CODE        NUMBER(15),
    LDS_ACCOUNT_NAME    VARCHAR2(50 BYTE),
    LDS_LSTS_CODE       NUMBER(15),
    LDS_LSTS_DESC       VARCHAR2(50 BYTE),
    LDS_LDSRC_CODE      NUMBER(15),
    LDS_LDSRC_DESC      VARCHAR2(50 BYTE),
    LDS_PROD_CODE       NUMBER(15),
    LDS_PROD_NAME       VARCHAR2(50 BYTE),
    LDS_DIV_CODE        NUMBER(15),
    LDS_DIV_NAME        VARCHAR(100 BYTE)
    
    );

  TYPE leads_ref IS REF CURSOR RETURN leads_rec;
  PROCEDURE get_lead_sources(v_refcur OUT lead_sources_ref);
  PROCEDURE get_lead_statuses(v_refcur OUT lead_sources_ref);
  PROCEDURE get_leads(v_refcur OUT leads_ref, v_lds_code NUMBER);

  TYPE lead_comments_rec IS RECORD(
    LCMNT_CODE    TQC_LEAD_COMMENTS.LCMNT_CODE%type,
    LCMNT_COMMENT TQC_LEAD_COMMENTS.LCMNT_COMMENT%type,
    LCMNT_DATE    TQC_LEAD_COMMENTS.LCMNT_DATE%type);

  TYPE lead_comments_ref IS REF CURSOR RETURN lead_comments_rec;

  TYPE lead_activities_rec IS RECORD(
    
    LACTS_CODE   TQC_LEADS_ACTIVITIES.LACTS_CODE%type,
    ACT_CODE     NUMBER,
    ACT_SUBJECT  TQC_ACTIVITIES.ACT_SUBJECT%type,
    ACT_LOCATION TQC_ACTIVITIES.ACT_LOCATION%type);

  TYPE lead_activities_ref IS REF CURSOR RETURN lead_activities_rec;
  PROCEDURE get_lead_comments(v_refcur   OUT lead_comments_ref,
                              v_lds_code NUMBER);
  PROCEDURE get_lead_activities(v_refcur   OUT lead_activities_ref,
                                v_lds_code NUMBER);

  TYPE leads_statuses_rec IS RECORD(
    LSTS_CODE TQC_LEADS_STATUSES.LSTS_CODE%type,
    LSTS_DESC TQC_LEADS_STATUSES.LSTS_DESC%type);

  TYPE leads_statuses_ref IS REF CURSOR RETURN leads_statuses_rec;

  TYPE rptGroup_rec IS RECORD(
    TRG_CODE TQC_REPORT_GROUPS.TRG_CODE%TYPE,
    TRG_NAME TQC_REPORT_GROUPS.TRG_NAME%TYPE);
  TYPE rptGroup_ref IS REF CURSOR RETURN rptGroup_rec;

  FUNCTION get_all_report_groups RETURN rptGroup_ref;
  TYPE rptGroupDiv_rec IS RECORD(
    RDG_CODE     TQC_REPORT_DIV_GROUPS.RDG_CODE%TYPE,
    RDG_TRG_CODE TQC_REPORT_DIV_GROUPS.RDG_TRG_CODE%TYPE,
    RDG_DIV_CODE TQC_REPORT_DIV_GROUPS.RDG_DIV_CODE%TYPE,
    DIV_NAME     TQC_DIVISIONS.DIV_NAME%TYPE,
    DIV_ORDER    TQC_DIVISIONS.DIV_ORDER%TYPE);

  TYPE rptGroupDiv_ref IS REF CURSOR RETURN rptGroupDiv_rec;

  PROCEDURE get_rptGroupDiv(v_trg_code       IN TQC_REPORT_GROUPS.TRG_CODE%TYPE,
                            v_rptGroupDivCur OUT rptGroupDiv_ref);

  PROCEDURE getUndefinedRptGrpDivisions(v_trg_code     IN TQC_REPORT_GROUPS.TRG_CODE%TYPE,
                                        v_divisios_cur OUT TQC_WEB_CURSOR.divisions_ref);

  TYPE sys_app_area_rec IS RECORD(
    SAA_CODE        TQC_SYS_APPLICABLE_AREAS.SAA_CODE%TYPE,
    SAA_SYS_CODE    TQC_SYS_APPLICABLE_AREAS.SAA_SYS_CODE%TYPE,
    SYSTEM_NAME     VARCHAR2(100),
    SAA_DESCRIPTION TQC_SYS_APPLICABLE_AREAS.SAA_DESCRIPTION%TYPE);

  TYPE sys_app_area_ref IS REF CURSOR RETURN sys_app_area_rec;

  PROCEDURE getSystemAppArea(v_saa_sys_code   TQC_SYS_APPLICABLE_AREAS.SAA_SYS_CODE%TYPE,
                             v_sysAppArea_cur OUT sys_app_area_ref);

  PROCEDURE getSchengenCountries(v_countries_ref OUT countries_ref,
                         v_schengen      IN VARCHAR2,  v_inbound IN VARCHAR2 DEFAULT NULL);

  PROCEDURE get_branch_print_servers(v_cursor OUT print_server_ref,
                                     brn_code IN NUMBER,
                                     div_code IN NUMBER);

  TYPE mod_subunits_rec IS RECORD(
    
    TSMS_CODE      TQC_SYS_MOD_SUBUNITS.TSMS_CODE%TYPE,
    TSMS_GSM_CODE  TQC_SYS_MOD_SUBUNITS.TSMS_TSM_CODE%TYPE,
    TSMS_SHT_DESC  TQC_SYS_MOD_SUBUNITS.TSMS_SHT_DESC%TYPE,
    TSMS_DESC      TQC_SYS_MOD_SUBUNITS.TSMS_DESC%TYPE,
    TSMS_ORDER     TQC_SYS_MOD_SUBUNITS.TSMS_ORDER%TYPE,
    TSMS_PROD_CODE TQC_SYS_MOD_SUBUNITS.TSMS_PROD_CODE%TYPE,
    PRO_DESC       LMS_PRODUCTS.PROD_DESC%TYPE,
    TSM_DESC       TQC_SYSTEM_MODULES.TSM_DESC%TYPE
    
    );

  TYPE mod_subunits_ref IS REF CURSOR RETURN mod_subunits_rec;
  FUNCTION get_modules_subunits(v_prod_code IN NUMBER)
    RETURN mod_subunits_ref;

  TYPE mod_subunits_det_rec IS RECORD(
    
    TSMSD_CODE               TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_CODE%TYPE,
    TSMSD_NAME               TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_NAME%TYPE,
    TSMSD_PROMPT             TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_PROMPT%TYPE,
    TSMSD_TYPE               TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_TYPE%TYPE,
    TSMSD_ORDER              TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_ORDER%TYPE,
    TSMSD_PARENT             TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_PARENT%TYPE,
    TSMSD_MORE_DTLS_APPL     TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_MORE_DTLS_APPL%TYPE,
    TSMSD_MORE_DTLS          TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_MORE_DTLS%TYPE,
    TSMSD_ROOT               TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_ROOT%TYPE,
    TSMSD_MORE_DTLS_REQUIRED TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_MORE_DTLS_REQUIRED%TYPE,
    TSMSD_TMSC_CODE          TQC_SYS_MOD_SUBUNITS_DETAILS.TSMSD_TMSC_CODE%TYPE,
    TSMC_DESC                TQC_MOD_SYS_COLUMNS.TMSC_DESC%TYPE);

  TYPE mod_subunits_det_ref IS REF CURSOR RETURN mod_subunits_det_rec;

  FUNCTION get_mod_subunits_det(v_code IN NUMBER) RETURN mod_subunits_det_ref;

  TYPE proposal_sched_mod_rec IS RECORD(
    
    TSM_CODE     TQC_SYSTEM_MODULES.TSM_CODE%TYPE,
    TSM_SHT_DESC TQC_SYSTEM_MODULES.TSM_SHT_DESC%TYPE,
    TSM_DESC     TQC_SYSTEM_MODULES.TSM_DESC%TYPE
    
    );

  TYPE proposal_sched_mod_ref IS REF CURSOR RETURN proposal_sched_mod_rec;

  FUNCTION get_proposal_mod_systems RETURN proposal_sched_mod_ref;

  TYPE subunits_options_rec IS RECORD(
    
    TSSO_CODE        TQC_SYS_SUBUNITS_OPTIONS.TSSO_CODE%TYPE,
    TSSO_TSMSD_CODE  TQC_SYS_SUBUNITS_OPTIONS.TSSO_TSMSD_CODE%TYPE,
    TSSO_OPTION_NAME TQC_SYS_SUBUNITS_OPTIONS.TSSO_OPTION_NAME%TYPE,
    TSSO_OPTION_DESC TQC_SYS_SUBUNITS_OPTIONS.TSSO_OPTION_DESC%TYPE,
    TSSO_ORDER       TQC_SYS_SUBUNITS_OPTIONS.TSSO_ORDER%TYPE,
    TSSO_TYPE        TQC_SYS_SUBUNITS_OPTIONS.TSSO_TYPE%TYPE
    
    );

  TYPE subunits_options_ref IS REF CURSOR RETURN subunits_options_rec;

  FUNCTION get_subunits_options(v_code IN NUMBER) RETURN subunits_options_ref;

  TYPE mapping_columns_rec IS RECORD(
    TMSC_CODE TQC_MOD_SYS_COLUMNS.TMSC_CODE%TYPE,
    TMSC_DESC TQC_MOD_SYS_COLUMNS.TMSC_DESC%TYPE);

  TYPE mapping_columns_ref IS REF CURSOR RETURN mapping_columns_rec;
  FUNCTION getSysMappingColmns(v_sysCode IN NUMBER)
    RETURN mapping_columns_ref;

  TYPE mail_settings_rec IS RECORD(
    MAIL_TYPE        TQC_SYSTEM_MAILS.MAIL_TYPE%TYPE,
    MAIL_SERVER_NAME TQC_SYSTEM_MAILS.MAIL_SERVER_NAME%TYPE,
    MAIL_HOST        TQC_SYSTEM_MAILS.MAIL_HOST%TYPE,
    MAIL_USERNAME    TQC_SYSTEM_MAILS.MAIL_USERNAME%TYPE,
    MAIL_PASSWORD    TQC_SYSTEM_MAILS.MAIL_PASSWORD%TYPE,
    MAIL_PORT        TQC_SYSTEM_MAILS.MAIL_PORT%TYPE,
    MAIL_EMAIL       TQC_SYSTEM_MAILS.MAIL_EMAIL%TYPE,
    MAIL_IN_OUT      TQC_SYSTEM_MAILS.MAIL_IN_OUT%TYPE,
     MAIL_SECURE      TQC_SYSTEM_MAILS.MAIL_SECURE%TYPE);

  TYPE mail_settings_ref IS REF CURSOR RETURN mail_settings_rec;
  FUNCTION getIncomingMailSettings RETURN mail_settings_ref;
  FUNCTION getOutgoingMailSettings RETURN mail_settings_ref;

  TYPE alert_rec IS RECORD(

        QT_JOB_NAME              QRTZ_TRIGGERS.QT_JOB_NAME            %TYPE,                  
        QT_DESCRIPTION           QRTZ_TRIGGERS.QT_DESCRIPTION         %TYPE,
        QT_NEXT_FIRE_TIME        QRTZ_TRIGGERS.QT_NEXT_FIRE_TIME      %TYPE,
        QT_PREV_FIRE_TIME        QRTZ_TRIGGERS.QT_PREV_FIRE_TIME      %TYPE,
        QT_START_TIME            QRTZ_TRIGGERS.QT_START_TIME          %TYPE,
        QT_END_TIME              QRTZ_TRIGGERS.QT_END_TIME            %TYPE,
        QT_CODE                  QRTZ_TRIGGERS.QT_CODE                %TYPE,
        QT_SYS_CODE              QRTZ_TRIGGERS.QT_SYS_CODE            %TYPE,
        QT_RECURRENCE            QRTZ_TRIGGERS.QT_RECURRENCE          %TYPE,
        QT_RECURRENCE_TYPE       QRTZ_TRIGGERS.QT_RECURRENCE_TYPE     %TYPE,
        QT_JOB_ASSIGNEE          QRTZ_TRIGGERS.QT_JOB_ASSIGNEE        %TYPE,
        QT_NOTIFIED_FAIL_USER    QRTZ_TRIGGERS.QT_NOTIFIED_FAIL_USER  %TYPE,
        QT_NOTIFIED_SUCC_USER    QRTZ_TRIGGERS.QT_NOTIFIED_SUCC_USER  %TYPE,
        QT_RECCURENCE_INTERVAL   QRTZ_TRIGGERS.QT_RECCURENCE_INTERVAL %TYPE,
        QT_JOB_TYPE              QRTZ_TRIGGERS.QT_JOB_TYPE            %TYPE,
        QT_JOB_TEMPLATE          QRTZ_TRIGGERS.QT_JOB_TEMPLATE        %TYPE,
        QT_FAIL_NOTIFY_TEMPLATE  QRTZ_TRIGGERS.QT_FAIL_NOTIFY_TEMPLATE%TYPE,
        QT_SUCC_NOTIFY_TEMPLATE  QRTZ_TRIGGERS.QT_SUCC_NOTIFY_TEMPLATE%TYPE,
        ASSIGNEE                 TQC_USERS.USR_USERNAME%TYPE,
        FAIL_USER                TQC_USERS.USR_USERNAME%TYPE,
        SUCC_USER                TQC_USERS.USR_USERNAME%TYPE,
        JOB_TEMPLATE             VARCHAR2(200),
        FAIL_NOTIFY_TEMPLATE     VARCHAR2(200),
        SUCC_NOTIFY_TEMPLATE     VARCHAR2(200),
        ASSIGNEE_EMAIL           VARCHAR2(200),
        FAIL_EMAIL               VARCHAR2(200),
        SUCC_EMAIL               VARCHAR2(200),
        QT_STATUS                VARCHAR2(1),
        QT_THRESHOLD_TYPE        VARCHAR2(1), 
        QT_THRESHOLD_VALUE       NUMBER  ,
        USR_TYPE                TQC_USERS.USR_TYPE%TYPE,
        QT_CRON_EXPRESSION QRTZ_TRIGGERS.QT_CRON_EXPRESSION%TYPE
 );
 
 TYPE alert_cursor IS REF CURSOR
 RETURN alert_rec;

  FUNCTION get_alerts(v_jobName   VARCHAR2 DEFAULT NULL,
                    v_sysCode   NUMBER   DEFAULT NULL) RETURN alert_cursor;

  TYPE exec_object_rec IS RECORD(
    OBJ_TYPE     VARCHAR2(5),
    OBJ_CODE     NUMBER,
    OBJ_DESC     VARCHAR2(50),
    OBJ_LOCATION VARCHAR2(100));

  TYPE exec_object_ref IS REF CURSOR RETURN exec_object_rec;
  FUNCTION getExecutionObjects(v_sysCode NUMBER,
                               v_type    VARCHAR2,
                               v_objCode NUMBER DEFAULT NULL)
    RETURN exec_object_ref;

  TYPE houseHolds_rec IS RECORD(
    HH_ID           TQC_HOUSEHOLDS.HH_ID%TYPE,
    HH_NAME         TQC_HOUSEHOLDS.HH_NAME%TYPE,
    HH_CREATED_BY   TQC_USERS.USR_USERNAME%TYPE,
    HH_DATE_CREATED TQC_HOUSEHOLDS.HH_DATE_CREATED%TYPE,
    HH_CATEGORY     TQC_HOUSEHOLDS.HH_CATEGORY%TYPE);

  TYPE houseHolds_ref IS REF CURSOR RETURN houseHolds_rec;
  FUNCTION getHouseHolds RETURN houseHolds_ref;

  TYPE houseHoldDtls_rec IS RECORD(
    HH_NAME          TQC_HOUSEHOLDS.HH_NAME%TYPE,
    HH_ID            TQC_HOUSEHOLDS.HH_ID%TYPE,
    HHD_CLNT_CODE    TQC_HOUSEHOLD_DTLS.HHD_CLNT_CODE%TYPE,
    CLNT_SHT_DESC    TQC_CLIENTS.CLNT_SHT_DESC%TYPE,
    CLNT_NAME        TQC_CLIENTS.CLNT_NAME%TYPE,
    CLNT_OTHER_NAMES TQC_CLIENTS.CLNT_OTHER_NAMES%TYPE);

  TYPE houseHoldDtls_ref IS REF CURSOR RETURN houseHoldDtls_rec;
  FUNCTION getHouseHoldMembers(v_hhId TQC_HOUSEHOLDS.HH_ID%TYPE)
    RETURN houseHoldDtls_ref;

 TYPE direct_debits_rec IS RECORD(
DDD_CODE                NUMBER,
POLICY_NO               VARCHAR2(50),
ACCOUNT_NO              VARCHAR2(50),
SORT_CODE               VARCHAR2(50),
AMOUNT                  NUMBER,
ACCOUNT_NAME            VARCHAR2(50),
NARRATION               VARCHAR2(50),
COMPANY                 VARCHAR2(50),
BBR_REF_CODE            TQC_BANK_BRANCHES.BBR_REF_CODE%TYPE,
DDD_PREM_DUE_DATE       TQC_DIRECT_DEBIT_DETAIL.DDD_PREM_DUE_DATE%TYPE,
DDD_POL_FREQ_PYMNT      VARCHAR2(50),
DD_REF_NO       TQC_DIRECT_DEBIT.DD_REF_NO%TYPE,
Bank_branch       VARCHAR2(200),
Debit_Day           VARCHAR2(200));

TYPE direct_debits_ref IS REF CURSOR RETURN direct_debits_rec;
 FUNCTION getDirectDebitsReport (v_ddCode    NUMBER,v_query  NUMBER)RETURN direct_debits_ref;

  TYPE debit_data_rec IS RECORD(
    DEBIT_DATA VARCHAR2(3000),
    REPORT_NO  VARCHAR2(100));

  TYPE debit_data_ref IS REF CURSOR RETURN debit_data_rec;
  --FUNCTION getDirectDebitsData  (v_ddCode NUMBER,v_refNo  VARCHAR2,v_bankCode VARCHAR2,v_bbrCode  VARCHAR2,v_query    NUMBER)RETURN debit_data_ref;
  FUNCTION getDirectDebitsData(v_ddCode   NUMBER,
                               v_refNo    VARCHAR2,
                               v_bankCode VARCHAR2,
                               v_bbrCode  VARCHAR2,
                               v_query    NUMBER) RETURN debit_data_ref;

  TYPE towns_with_zip_rec IS RECORD(
    
    TWN_CODE       TQC_TOWNS.TWN_CODE%TYPE,
    TWN_COU_CODE   TQC_TOWNS.TWN_COU_CODE%TYPE,
    TWN_SHT_DESC   TQC_TOWNS.TWN_SHT_DESC%TYPE,
    TWN_NAME       TQC_TOWNS.TWN_NAME%TYPE,
    TWN_STATE_CODE TQC_STATES.STS_CODE%TYPE,
    PST_DESC       TQC_POSTAL_CODES.PST_DESC%type,
    PST_ZIP_CODE   TQC_POSTAL_CODES.PST_ZIP_CODE%type);
  TYPE towns_with_zip_ref IS REF CURSOR RETURN towns_with_zip_rec;

  FUNCTION getTownsWithZipCodeByState(v_state_code IN NUMBER)
    RETURN towns_with_zip_ref;

  TYPE ecm_setups_rec IS RECORD(
    
    EST_CODE         TQC_ECM_SETUPS.EST_CODE%TYPE,
    EST_ECM_URL      TQC_ECM_SETUPS.EST_ECM_URL%TYPE,
    EST_ECM_USERNAME TQC_ECM_SETUPS.EST_ECM_USERNAME%TYPE,
    EST_ECM_PASSWORD TQC_ECM_SETUPS.EST_ECM_PASSWORD%TYPE,
    EST_SYS_CODE     TQC_ECM_SETUPS.EST_SYS_CODE%TYPE,
    EST_ROOT_FOLDER  TQC_ECM_SETUPS.EST_ROOT_FOLDER%TYPE,
    SYS_NAME         TQC_SYSTEMS.SYS_NAME%TYPE
    
    );

  TYPE ecm_setups_ref IS REF CURSOR RETURN ecm_setups_rec;

  FUNCTION get_ecm_setups RETURN ecm_setups_ref;

  FUNCTION get_system_ecm_setups(v_sys_code NUMBER) RETURN ecm_setups_ref;

  TYPE ecm_systems_rec IS RECORD(
    
    SYS_CODE     TQC_SYSTEMS.SYS_CODE%TYPE,
    SYS_SHT_DESC TQC_SYSTEMS.SYS_SHT_DESC%TYPE,
    SYS_NAME     TQC_SYSTEMS.SYS_NAME%TYPE
    
    );

  TYPE ecm_systems_ref IS REF CURSOR RETURN ecm_systems_rec;

  TYPE ecm_processes_rec IS RECORD(
    
    SPRC_CODE    TQC_SYS_PROCESSES.SPRC_CODE%TYPE,
    SPRC_PROCESS TQC_SYS_PROCESSES.SPRC_PROCESS%TYPE
    
    );

  TYPE ecm_processes_ref IS REF CURSOR RETURN ecm_processes_rec;

  FUNCTION get_ecm_systems RETURN ecm_systems_ref;

  FUNCTION get_ecm_processes(v_sys_code NUMBER) RETURN ecm_processes_ref;

  TYPE system_reports_rec IS RECORD(
    RPT_CODE        TQC_SYSTEM_REPORTS.RPT_CODE%TYPE,
    RPT_NAME        TQC_SYSTEM_REPORTS.RPT_NAME%TYPE,
    RPT_DESCRIPTION TQC_SYSTEM_REPORTS.RPT_DESCRIPTION%TYPE
    
    );

  TYPE system_reports_ref IS REF CURSOR RETURN system_reports_rec;

  FUNCTION get_system_reports(v_sys_code NUMBER) RETURN system_reports_ref;

  TYPE sys_reports_rec IS RECORD(
    
    SPRR_CODE       TQC_SYS_PROCESS_REPORTS.SPRR_CODE%TYPE,
    SPRR_RPT_CODE   TQC_SYS_PROCESS_REPORTS.SPRR_RPT_CODE%TYPE,
    SPRR_SPRC_CODE  TQC_SYS_PROCESS_REPORTS.SPRR_SPRC_CODE%TYPE,
    SPRR_DESC       TQC_SYS_PROCESS_REPORTS.SPRR_DESC%TYPE,
    RPT_NAME        TQC_SYSTEM_REPORTS.RPT_NAME%TYPE,
    RPT_DESCRIPTION TQC_SYSTEM_REPORTS.RPT_DESCRIPTION%TYPE,
    SPRR_TYPE       TQC_SYS_PROCESS_REPORTS.SPRR_TYPE%TYPE,
    SDT_CONTENT_NAME tqc_sys_doc_types.SDT_CONTENT_NAME%TYPE,
    SDT_CODE         tqc_sys_doc_types.SDT_CODE%type, 
    SDT_CONTENT_TYPE tqc_sys_doc_types.SDT_CONTENT_TYPE%type
    
    );

  TYPE sys_reports_ref IS REF CURSOR RETURN sys_reports_rec;

  FUNCTION get_process_reports(v_proc_code NUMBER) RETURN sys_reports_ref;

  TYPE ecm_doc_types_rec IS RECORD(
    
    SDT_CODE         TQC_SYS_DOC_TYPES.SDT_CODE%TYPE,
    SDT_CONTENT_NAME TQC_SYS_DOC_TYPES.SDT_CONTENT_NAME%TYPE,
    SDT_CONTENT_DESC TQC_SYS_DOC_TYPES.SDT_CONTENT_DESC%TYPE,
    SDT_CONTENT_TYPE TQC_SYS_DOC_TYPES.SDT_CONTENT_TYPE%type );

  TYPE ecm_doc_types_ref IS REF CURSOR RETURN ecm_doc_types_rec;

  FUNCTION get_ecm_doc_types RETURN ecm_doc_types_ref;

  TYPE content_metadata_rec IS RECORD(
    
    DDM_CODE     TQC_DMS_DOC_METADATA.DDM_CODE%TYPE,
    DDM_SDT_CODE TQC_DMS_DOC_METADATA.DDM_SDT_CODE%TYPE,
    DDM_NAME     TQC_DMS_DOC_METADATA.DDM_NAME%TYPE,
    DDM_DESC     TQC_DMS_DOC_METADATA.DDM_DESC%TYPE
    
    );

  TYPE content_metadata_ref IS REF CURSOR RETURN content_metadata_rec;

  FUNCTION get_content_metadata(v_sprr_code NUMBER)
    RETURN content_metadata_ref;

  FUNCTION get_process_report(v_proc_area VARCHAR2, v_sys_code NUMBER)
    RETURN sys_reports_ref;
  TYPE branch_data_rec IS RECORD(
    
    BBB_CODE               TQC_BANK_BRANCHES_BRANCHES.BBB_CODE%TYPE,
    BBB_BRN_CODE           TQC_BANK_BRANCHES_BRANCHES.BBB_BRN_CODE%TYPE,
    BBB_BRN_SHT_DESC       TQC_BANK_BRANCHES_BRANCHES.BBB_BRN_SHT_DESC%TYPE,
    BBB_BRN_REG_CODE       TQC_BANK_BRANCHES_BRANCHES.BBB_BRN_REG_CODE%TYPE,
    BBB_BRN_NAME           TQC_BANK_BRANCHES_BRANCHES.BBB_BRN_NAME%TYPE,
    BBB_BRN_PHY_ADDRS      TQC_BANK_BRANCHES_BRANCHES.BBB_BRN_PHY_ADDRS%TYPE,
    BBB_BBR_CODE           TQC_BANK_BRANCHES_BRANCHES.BBB_BBR_CODE%TYPE,
    BBB_BBR_BNK_CODE       TQC_BANK_BRANCHES_BRANCHES.BBB_BBR_BNK_CODE%TYPE,
    BBB_BBR_BRANCH_NAME    TQC_BANK_BRANCHES_BRANCHES.BBB_BBR_BRANCH_NAME%TYPE,
    BBB_BBR_SHT_DESC       TQC_BANK_BRANCHES_BRANCHES.BBB_BBR_SHT_DESC%TYPE,
    BBB_BBR_PHYSICAL_ADDRS TQC_BANK_BRANCHES_BRANCHES.BBB_BBR_PHYSICAL_ADDRS%TYPE
    
    );
  TYPE branch_data_ref IS REF CURSOR RETURN branch_data_rec;
  FUNCTION get_branches_details(v_bbrcode number) RETURN branch_data_ref;
  TYPE all_branches_ref IS REF CURSOR RETURN branches_rec;
  PROCEDURE all_branches(v_all_branches_ref OUT all_branches_ref);

  TYPE bank_branch_rec IS RECORD(
    
    BBR_CODE           TQC_BANK_BRANCHES.BBR_CODE%TYPE,
    BBR_BNK_CODE       TQC_BANK_BRANCHES.BBR_BNK_CODE%TYPE,
    BBR_BRANCH_NAME    TQC_BANK_BRANCHES.BBR_BRANCH_NAME%TYPE,
    BBR_REMARKS        TQC_BANK_BRANCHES.BBR_REMARKS%TYPE,
    BBR_SHT_DESC       TQC_BANK_BRANCHES.BBR_SHT_DESC%TYPE,
    BBR_REF_CODE       TQC_BANK_BRANCHES.BBR_REF_CODE%TYPE,
    BBR_EFT_SUPPORTED  TQC_BANK_BRANCHES.BBR_EFT_SUPPORTED%TYPE,
    BBR_DD_SUPPORTED   TQC_BANK_BRANCHES.BBR_DD_SUPPORTED%TYPE,
    BBR_DATE_CREATED   TQC_BANK_BRANCHES.BBR_DATE_CREATED%TYPE,
    BBR_CREATED_BY     TQC_BANK_BRANCHES.BBR_CREATED_BY%TYPE,
    BBR_PHYSICAL_ADDRS TQC_BANK_BRANCHES.BBR_PHYSICAL_ADDRS%TYPE);
  TYPE sms_messagesrec IS RECORD(
    
    SMS_CODE           TQC_SMS_MESSAGES.SMS_CODE%TYPE,
    SMS_SYS_CODE       TQC_SMS_MESSAGES.SMS_SYS_CODE%TYPE,
    SMS_SYS_MODULE     TQC_SMS_MESSAGES.SMS_SYS_MODULE%TYPE,
    SMS_CLNT_CODE      TQC_SMS_MESSAGES.SMS_CLNT_CODE%TYPE,
    SMS_AGN_CODE       TQC_SMS_MESSAGES.SMS_AGN_CODE%TYPE,
    SMS_POL_NO         TQC_SMS_MESSAGES.SMS_POL_NO%TYPE,
    SMS_POL_CODE       TQC_SMS_MESSAGES.SMS_POL_CODE%TYPE,
    SMS_CLM_NO         TQC_SMS_MESSAGES.SMS_CLM_NO%TYPE,
    SMS_TEL_NO         TQC_SMS_MESSAGES.SMS_TEL_NO%TYPE,
    SMS_MSG            TQC_SMS_MESSAGES.SMS_MSG%TYPE,
    SMS_STATUS         TQC_SMS_MESSAGES.SMS_STATUS%TYPE,
    SMS_PREPARED_BY    TQC_SMS_MESSAGES.SMS_PREPARED_BY%TYPE,
    SMS_SEND_DATE      TQC_SMS_MESSAGES.SMS_SEND_DATE%TYPE,
    POL_CURRENT_STATUS GIN_POLICIES.POL_CURRENT_STATUS%TYPE,
    CLNT_NAME tqc_clients.CLNT_NAME%TYPE,
    COU_CODE           TQC_COUNTRIES.COU_CODE%TYPE,
    COU_ZIP_CODE       TQC_COUNTRIES.COU_ZIP_CODE%TYPE
    
    );
  TYPE allmessagesref IS REF CURSOR RETURN sms_messagesrec;
  TYPE all_bank_branches_ref IS REF CURSOR RETURN bank_branch_rec;
  TYPE allbankbranchesref IS REF CURSOR RETURN bank_branch_rec;
  FUNCTION all_bank__branches(v_branch_name VARCHAR2)
    RETURN all_bank_branches_ref;
  PROCEDURE allbankbranches(v_bankbranchref OUT allbankbranchesref);
  function selectallMessages(v_sms_sys_code VARCHAR2) return allmessagesref;
  TYPE reserved_words_rec IS RECORD(
TSRW_CODE               TQC_SYS_RESERVED_WORDS.TSRW_CODE%TYPE, 
TSRW_SYS_CODE           TQC_SYS_RESERVED_WORDS.TSRW_SYS_CODE%TYPE, 
TSRW_TSRC_CODE          TQC_SYS_RESERVED_WORDS.TSRW_TSRC_CODE%TYPE, 
TSRW_TYPE               TQC_SYS_RESERVED_WORDS.TSRW_TYPE%TYPE, 
TSRW_EDITABLE           TQC_SYS_RESERVED_WORDS.TSRW_EDITABLE%TYPE,
TSRC_NAME               TQC_SERV_REQ_CAT.TSRC_NAME%TYPE,
TSRW_NAME               TQC_SYS_RESERVED_WORDS.TSRW_NAME%TYPE,
TSRW_DESC               TQC_SYS_RESERVED_WORDS.TSRW_DESC%TYPE,
TSRC_VALIDITY           TQC_SERV_REQ_CAT.TSRC_VALIDITY%TYPE, 
TSRC_USR_CODE           TQC_SERV_REQ_CAT.TSRC_USR_CODE%TYPE,
USR_TYPE                TQC_USERS.USR_TYPE%TYPE,
USR_EMAIL               TQC_USERS.USR_EMAIL%TYPE);

TYPE reserved_words_ref IS REF CURSOR RETURN reserved_words_rec;
FUNCTION getReservedWords(v_sysCode NUMBER) RETURN reserved_words_ref;
TYPE sys_processes_rec IS RECORD(
DEPLOYMENT         NUMBER,
JSD_SYS_CODE       JBPM4_SYS_DEPLOYMENTS.JSD_SYS_CODE%TYPE, 
JSD_JPDL_NAME      JBPM4_SYS_DEPLOYMENTS.JSD_JPDL_NAME%TYPE);

TYPE sys_processes_ref IS REF CURSOR RETURN  sys_processes_rec;
FUNCTION getSystemProcesses(v_sysCode       TQC_SYS_PROCESSES.SPRC_SYS_CODE%TYPE)RETURN  sys_processes_ref;
TYPE escalations_rec IS RECORD(
TSEL_CODE               TQC_SYS_ESCALATION_LEVELS.TSEL_CODE%TYPE, 
TSEL_JSD_SYS_CODE       TQC_SYS_ESCALATION_LEVELS.TSEL_JSD_SYS_CODE%TYPE, 
TSEL_JSD_JPDL_NAME      TQC_SYS_ESCALATION_LEVELS.TSEL_JSD_JPDL_NAME%TYPE, 
TSEL_ACTIVITY_NAME      TQC_SYS_ESCALATION_LEVELS.TSEL_ACTIVITY_NAME%TYPE, 
TSEL_LEVEL              TQC_SYS_ESCALATION_LEVELS.TSEL_LEVEL%TYPE, 
TSEL_ASSIGNEE           TQC_SYS_ESCALATION_LEVELS.TSEL_ASSIGNEE%TYPE,
USR_USERNAME            TQC_USERS.USR_USERNAME%TYPE,
TSEL_DURATION           TQC_SYS_ESCALATION_LEVELS.TSEL_DURATION%TYPE,
TSEL_CC                 TQC_SYS_ESCALATION_LEVELS.TSEL_CC%TYPE,
CC_USERNAME             TQC_USERS.USR_USERNAME%TYPE);

TYPE escalations_ref IS REF CURSOR RETURN escalations_rec;
FUNCTION getEscalations(v_sysCode   TQC_SYS_ESCALATION_LEVELS.TSEL_JSD_SYS_CODE%TYPE,
                        v_jpdlName  TQC_SYS_ESCALATION_LEVELS.TSEL_JSD_JPDL_NAME%TYPE,
                        v_activity  TQC_SYS_ESCALATION_LEVELS.TSEL_ACTIVITY_NAME%TYPE,
                        v_level     TQC_SYS_ESCALATION_LEVELS.TSEL_LEVEL%TYPE DEFAULT NULL) RETURN  escalations_ref;
                        
  TYPE checkif_losstime_required_rec IS RECORD(
    PARAM_VALUE TQC_PARAMETERS.PARAM_VALUE%TYPE);

  TYPE checkif_losstime_required_ref IS REF CURSOR RETURN checkif_losstime_required_rec;
  FUNCTION checkif_losstime_required RETURN checkif_losstime_required_ref;
  FUNCTION checkif_Occupation_required RETURN checkif_losstime_required_ref ;
  TYPE select_Parent_Agency_rec IS RECORD(
AGN_CODE               tqc_agencies.AGN_CODE%TYPE, 
AGN_SHT_DESC       tqc_agencies.AGN_SHT_DESC%TYPE, 
AGN_NAME      tqc_agencies.AGN_NAME%TYPE);

TYPE select_Parent_Agency_ref IS REF CURSOR RETURN select_Parent_Agency_rec;
  PROCEDURE select_Parent_Agency(v_cursor OUT select_Parent_Agency_ref,v_act_Code in NUMBER);
 
  TYPE select_subAgents_datails_rec IS RECORD(
AGN_CODE               tqc_agencies.AGN_CODE%TYPE, 
AGN_ACT_CODE       tqc_agencies.AGN_ACT_CODE%TYPE, 
AGN_SHT_DESC      tqc_agencies.AGN_SHT_DESC%TYPE,
AGN_NAME               tqc_agencies.AGN_NAME%TYPE, 
AGN_PHYSICAL_ADDRESS       tqc_agencies.AGN_PHYSICAL_ADDRESS%TYPE, 
AGN_POSTAL_ADDRESS      tqc_agencies.AGN_POSTAL_ADDRESS%TYPE,
AGN_EMAIL_ADDRESS               tqc_agencies.AGN_EMAIL_ADDRESS%TYPE, 
AGN_SUBAGENT       tqc_agencies.AGN_SUBAGENT%TYPE, 
AGN_MAIN_AGN_CODE      tqc_agencies.AGN_MAIN_AGN_CODE%TYPE,
ACT_ACCOUNT_TYPE      tqc_account_types.ACT_ACCOUNT_TYPE%TYPE
);
TYPE select_subAgents_datails_ref IS REF CURSOR RETURN select_subAgents_datails_rec;
  PROCEDURE select_subAgents_datails(v_cursor OUT select_subAgents_datails_ref,v_agn_code IN NUMBER);
  
   TYPE checkif_SerialNo_required_rec IS RECORD(
    PARAM_VALUE TQC_PARAMETERS.PARAM_VALUE%TYPE);

  TYPE checkif_SerialNo_required_ref IS REF CURSOR RETURN checkif_SerialNo_required_rec;
   FUNCTION checkif_SerialNo_required RETURN checkif_SerialNo_required_ref;
   TYPE sms_settings_rec IS RECORD(
TSS_DESC            TQC_SYSTEM_SMS.TSS_DESC%TYPE, 
TSS_URL             TQC_SYSTEM_SMS.TSS_URL%TYPE,
TSS_USERNAME        TQC_SYSTEM_SMS.TSS_USERNAME%TYPE,
TSS_PASSWORD        TQC_SYSTEM_SMS.TSS_PASSWORD%TYPE,
TSS_SOURCE          TQC_SYSTEM_SMS.TSS_SOURCE%TYPE,
TSS_CODE            TQC_SYSTEM_SMS.TSS_CODE%TYPE,
TSS_DEFAULT         TQC_SYSTEM_SMS.TSS_DEFAULT%TYPE);

TYPE sms_settings_ref IS REF CURSOR RETURN sms_settings_rec;
FUNCTION getSmsSettings RETURN sms_settings_ref;
FUNCTION getDefaultSmsSettings RETURN sms_settings_ref;
TYPE pending_sms_rec IS RECORD(
SMS_CODE            TQC_SMS_MESSAGES.SMS_CODE%TYPE, 
SMS_TEL_NO          TQC_SMS_MESSAGES.SMS_TEL_NO%TYPE, 
SMS_MSG             TQC_SMS_MESSAGES.SMS_MSG%TYPE
);

TYPE pending_sms_ref IS REF CURSOR RETURN pending_sms_rec;
FUNCTION getPendingSms RETURN pending_sms_ref;
TYPE email_rec IS RECORD(
USR_EMAIL   TQC_USERS.USR_EMAIL%TYPE
);

TYPE email_ref IS REF CURSOR RETURN email_rec;
FUNCTION getGroupedUsersEmails(v_GUSR_GRP_USR_CODE NUMBER) RETURN email_ref;  
FUNCTION checkifSaccoRequired RETURN checkif_dob_required_ref ;


TYPE Marketers_rec IS RECORD(
AGN_CODE            TQC_AGENCIES.AGN_CODE%TYPE, 
AGN_ACT_CODE          TQC_AGENCIES.AGN_ACT_CODE%TYPE, 
AGN_SHT_DESC             TQC_AGENCIES.AGN_SHT_DESC%TYPE,
AGN_NAME             TQC_AGENCIES.AGN_NAME%TYPE
);
TYPE Marketers_ref IS REF CURSOR RETURN Marketers_rec;
FUNCTION getMarketers RETURN Marketers_ref;

TYPE webClientsBranchesRec IS RECORD(
TCB_CODE            TQC_CLIENT_BRANCHES.TCB_CODE%TYPE, 
TCB_CLNT_CODE          TQC_CLIENT_BRANCHES.TCB_CLNT_CODE%TYPE, 
TCB_SHT_DESC             TQC_CLIENT_BRANCHES.TCB_SHT_DESC%TYPE,
TCB_NAME             TQC_CLIENT_BRANCHES.TCB_NAME%TYPE
);

TYPE webClientsBranchesRef IS REF CURSOR RETURN webClientsBranchesRec;


TYPE webassignBranchRec IS RECORD(
TCB_CODE            TQC_CLIENT_BRANCHES.TCB_CODE%TYPE, 
TCB_CLNT_CODE          TQC_CLIENT_BRANCHES.TCB_CLNT_CODE%TYPE, 
TCB_SHT_DESC             TQC_CLIENT_BRANCHES.TCB_SHT_DESC%TYPE,
TCB_NAME             TQC_CLIENT_BRANCHES.TCB_NAME%TYPE

);

TYPE webassignBranchRef IS REF CURSOR RETURN webassignBranchRec;

FUNCTION getwebClientsBranches(v_tcb_clnt_code IN NUMBER) RETURN webClientsBranchesRef;
FUNCTION getassignedBranches(v_tcb_clnt_code IN NUMBER) RETURN webassignBranchRef;
FUNCTION getUnassignedBranches(v_tcb_clnt_code IN NUMBER)  RETURN webassignBranchRef;
FUNCTION getDefaultBranches RETURN webClientsBranchesRef;

TYPE webProductsRec IS RECORD(
TWP_CODE            TQC_WEB_PRODUCTS.TWP_CODE%TYPE, 
TWP_TWPC_CODE          TQC_WEB_PRODUCTS.TWP_TWPC_CODE%TYPE, 
TWP_PROD_CODE             TQC_WEB_PRODUCTS.TWP_PROD_CODE%TYPE,
TWP_PROD_DESC             TQC_WEB_PRODUCTS.TWP_PROD_DESC%TYPE,
PRO_DESC             GIN_PRODUCTS.PRO_DESC%TYPE
);

TYPE webProductsRef IS REF CURSOR RETURN webProductsRec;
FUNCTION getwebProducts RETURN webProductsRef ;


TYPE WebUsersRec IS RECORD(
USR_CODE            TQC_USERS.USR_CODE%TYPE, 
USR_USERNAME          TQC_USERS.USR_USERNAME%TYPE, 
USR_NAME             TQC_USERS.USR_NAME%TYPE,
USR_STATUS             TQC_USERS.USR_STATUS%TYPE
);
TYPE WebUsersRef IS REF CURSOR RETURN WebUsersRec;

FUNCTION getWebUsers RETURN WebUsersRef ;

TYPE WebProductsDtlsRec IS RECORD(
TWPD_CLNT_CODE            TQC_WEB_PRODUCT_DETAILS.TWPD_CLNT_CODE%TYPE, 
TWPD_TWP_CODE             TQC_WEB_PRODUCT_DETAILS.TWPD_TWP_CODE%TYPE, 
CLNT_NAME            TQC_CLIENTS.CLNT_NAME%TYPE, 
TWP_PROD_DESC             TQC_WEB_PRODUCTS.TWP_PROD_DESC%TYPE, 
TWPD_USR_CODE             TQC_WEB_PRODUCT_DETAILS.TWPD_USR_CODE%TYPE,
TWPD_USERNAME             TQC_WEB_PRODUCT_DETAILS.TWPD_USERNAME%TYPE,
TWPD_DR_LIMIT             TQC_WEB_PRODUCT_DETAILS.TWPD_DR_LIMIT%TYPE,
TWPD_CR_LIMIT             TQC_WEB_PRODUCT_DETAILS.TWPD_CR_LIMIT%TYPE,
TWPD_POLICY_USE           TQC_WEB_PRODUCT_DETAILS.TWPD_POLICY_USE%TYPE,
TWPD_ENDOS_USE            TQC_WEB_PRODUCT_DETAILS.TWPD_ENDOS_USE%TYPE,
 PRO_DESC            GIN_PRODUCTS.PRO_DESC%TYPE,
  CLNA_CLNT_CODE            TQC_CLIENT_ACCOUNTS.CLNA_CLNT_CODE%TYPE,
   CLNA_CODE            TQC_CLIENT_ACCOUNTS.CLNA_CODE%TYPE
); 
TYPE WebProductsDtlsRef IS REF CURSOR RETURN WebProductsDtlsRec;
FUNCTION getWebProductDetails(v_twpd_clnt_code IN NUMBER) RETURN WebProductsDtlsRef ;
PROCEDURE get_allclient_titles(v_client_titles_ref OUT client_titles_ref);
 PROCEDURE get_client_titles(v_client_titles_ref OUT client_titles_ref) ;

 TYPE AllSystems_rec IS RECORD(
SYS_CODE            TQC_SYSTEMS.SYS_CODE%TYPE, 
SYS_SHT_DESC          TQC_SYSTEMS.SYS_SHT_DESC%TYPE, 
SYS_NAME             TQC_SYSTEMS.SYS_NAME%TYPE
);
TYPE AllSystems_ref IS REF CURSOR RETURN AllSystems_rec;


TYPE dispatch_docs_rec IS RECORD(
      DOCR_ID            TQC_DOCUMENTS_REGISTER.DOCR_ID%TYPE, 
      DOCR_DOC_NAME      TQC_DOCUMENTS_REGISTER.DOCR_DOC_NAME%TYPE, 
      DOCR_DOC_URL       TQC_DOCUMENTS_REGISTER.DOCR_DOC_AUTHOR%TYPE, 
      DOCR_DOC_AUTHOR    TQC_DOCUMENTS_REGISTER.DOCR_DOC_AUTHOR%TYPE, 
      DOCR_DOC_DESC      TQC_DOCUMENTS_REGISTER.DOCR_DOC_DESC%TYPE, 
      DOCR_CLNT_CODE     TQC_DOCUMENTS_REGISTER.DOCR_CLNT_CODE%TYPE, 
      DOCR_POL_POLICY_NO TQC_DOCUMENTS_REGISTER.DOCR_POL_POLICY_NO%TYPE, 
      DOCR_CLAIM_NO      TQC_DOCUMENTS_REGISTER.DOCR_CLAIM_NO%TYPE, 
      DOCR_QUOT_CODE     TQC_DOCUMENTS_REGISTER.DOCR_QUOT_CODE%TYPE, 
      DOCR_LEVEL         TQC_DOCUMENTS_REGISTER.DOCR_LEVEL%TYPE, 
      DOCR_SYS_CODE      TQC_DOCUMENTS_REGISTER.DOCR_SYS_CODE%TYPE, 
      DOCR_POL_BATCH_NO  TQC_DOCUMENTS_REGISTER.DOCR_POL_BATCH_NO%TYPE, 
      DOCR_DATE_CREATED  TQC_DOCUMENTS_REGISTER.DOCR_DATE_CREATED%TYPE, 
      DOCR_AGN_CODE      TQC_DOCUMENTS_REGISTER.DOCR_AGN_CODE%TYPE,
      DOCR_DISPATCHED    TQC_DOCUMENTS_REGISTER.DOCR_DISPATCHED%TYPE, 
      DOCR_DISPATCH_DT   TQC_DOCUMENTS_REGISTER.DOCR_DISPATCH_DT%TYPE, 
      DOCR_DISPATCHABLE  TQC_DOCUMENTS_REGISTER.DOCR_DISPATCHABLE%TYPE
);


TYPE dispatch_docs_ref IS REF CURSOR
RETURN dispatch_docs_rec;


FUNCTION get_dispatch_docs(v_batch NUMBER,v_clnt_code NUMBER,v_agn_code NUMBER) RETURN dispatch_docs_ref;

TYPE sms_templates_rec IS RECORD(
msgt_code            tqc_msg_templates.msgt_code%TYPE, 
msgt_sht_desc          tqc_msg_templates.msgt_sht_desc%TYPE, 
msgt_msg             tqc_msg_templates.msgt_msg%TYPE,
msgt_sys_code             tqc_msg_templates.msgt_sys_code%TYPE,
msgt_sys_module             tqc_msg_templates.msgt_sys_module%TYPE,
msgt_type             tqc_msg_templates.msgt_type%TYPE
);
TYPE sms_templates_ref IS REF CURSOR RETURN sms_templates_rec;

 FUNCTION get_sms_template RETURN sms_templates_ref;
 FUNCTION get_email_template RETURN sms_templates_ref ;
 
 TYPE req_doc_rec IS RECORD(
RDOC_ID            GIN_REQRD_DOCUMENTS.RDOC_ID%TYPE, 
RDOC_SHT_DESC             GIN_REQRD_DOCUMENTS.RDOC_SHT_DESC%TYPE,
RDOC_DESC        GIN_REQRD_DOCUMENTS.RDOC_DESC%TYPE,
RDOC_MANDTRY        GIN_REQRD_DOCUMENTS.RDOC_MANDTRY%TYPE,
RDOC_NB_DOC          GIN_REQRD_DOCUMENTS.RDOC_NB_DOC%TYPE,
RDOC_EN_DOC            GIN_REQRD_DOCUMENTS.RDOC_EN_DOC%TYPE,
RDOC_RN_DOC         GIN_REQRD_DOCUMENTS.RDOC_RN_DOC%TYPE,
RDOC_CERT_DOC          GIN_REQRD_DOCUMENTS.RDOC_CERT_DOC%TYPE,
RDOC_CLM_LOP_DOC          GIN_REQRD_DOCUMENTS.RDOC_CLM_LOP_DOC%TYPE,
RDOC_CLM_PAY_DOC            GIN_REQRD_DOCUMENTS.RDOC_CLM_PAY_DOC%TYPE,
RDOC_VALID_PRD         GIN_REQRD_DOCUMENTS.RDOC_VALID_PRD%TYPE,
RQD_CODE         TQC_REQUIRED_DOCS.RQD_CODE%TYPE);

TYPE req_doc_ref IS REF CURSOR RETURN req_doc_rec;
FUNCTION getSystemReqDocs(v_system_code IN  NUMBER) RETURN req_doc_ref;

TYPE mob_prefix_rec IS RECORD(
MPTP_CODE            tqc_mob_pymnt_types_prefixes.MPTP_CODE%TYPE, 
MPTP_MOB_NO_PREFIX          tqc_mob_pymnt_types_prefixes.MPTP_MOB_NO_PREFIX%TYPE, 
MPTP_MPT_CODE             tqc_mob_pymnt_types_prefixes.MPTP_MPT_CODE%TYPE
);

TYPE mob_prefix_ref IS REF CURSOR RETURN mob_prefix_rec;


FUNCTION get_available_prefixes RETURN mob_prefix_ref ;

TYPE ScheduledJobs_rec IS RECORD(
QT_JOB_NAME            qrtz_triggers.QT_JOB_NAME%TYPE, 
QT_DESCRIPTION          qrtz_triggers.QT_DESCRIPTION%TYPE, 
QT_START_TIME             qrtz_triggers.QT_START_TIME%TYPE,
QT_END_TIME             qrtz_triggers.QT_END_TIME%TYPE,
QT_CRON_EXPRESSION             qrtz_triggers.QT_CRON_EXPRESSION%TYPE
);
TYPE ScheduledJobs_ref IS REF CURSOR RETURN ScheduledJobs_rec;
FUNCTION getScheduledJobs RETURN ScheduledJobs_ref;

TYPE PoliciesDueForRen_rec IS RECORD(
POL_POLICY_NO            gin_policies.POL_POLICY_NO%TYPE, 
POL_POLICY_COVER_TO          gin_policies.POL_POLICY_COVER_TO%TYPE, 
POL_RENEWAL_DT             gin_policies.POL_RENEWAL_DT%TYPE,
CLNT_CODE             tqc_clients.CLNT_CODE%TYPE,
CLIENT             VARCHAR2(200),
CLNT_SMS_TEL             TQC_CLIENTS.CLNT_SMS_TEL%TYPE,
POL_AGNT_AGENT_CODE             gin_policies.POL_AGNT_AGENT_CODE%TYPE

); 
TYPE PoliciesDueForRen_ref IS REF CURSOR RETURN PoliciesDueForRen_rec;
  FUNCTION getPoliciesTwoDaysRen RETURN PoliciesDueForRen_ref;
   FUNCTION getPoliciesTwoMonthsRen RETURN PoliciesDueForRen_ref;
    FUNCTION getPoliciesOneMonthsRen RETURN PoliciesDueForRen_ref;
    FUNCTION getagencysystems
   RETURN all_systems_ref;
   
   
   TYPE ClientBirhDays_rec IS RECORD(
   CLNT_CODE          tqc_clients.CLNT_CODE%TYPE,
CLIENTNAME         varchar2(200), 
CLNT_DOB          tqc_clients.CLNT_DOB%TYPE, 
CLNT_SMS_TEL             tqc_clients.CLNT_SMS_TEL%TYPE

); 
TYPE ClientBirhDays_ref IS REF CURSOR RETURN ClientBirhDays_rec;

FUNCTION getClientBirthDays RETURN ClientBirhDays_ref;


TYPE BranchUnits_rec IS RECORD(
   BRU_CODE          TQC_BRANCH_UNITS.BRU_CODE%TYPE,
BRU_BRN_CODE         TQC_BRANCH_UNITS.BRU_BRN_CODE%TYPE, 
BRU_SHT_DESC          TQC_BRANCH_UNITS.BRU_SHT_DESC%TYPE, 
BRU_NAME             TQC_BRANCH_UNITS.BRU_NAME%TYPE

); 
TYPE BranchUnits_ref IS REF CURSOR RETURN BranchUnits_rec;

FUNCTION getBranchUnits RETURN BranchUnits_ref;
FUNCTION get_debit_day(v_type VARCHAR2, v_value VARCHAR2) RETURN VARCHAR2;


TYPE service_provider_rec IS RECORD(
   SPR_CODE          TQC_SERVICE_PROVIDERS.SPR_CODE%TYPE,
SPR_SHT_DESC         TQC_SERVICE_PROVIDERS.SPR_SHT_DESC%TYPE, 
SPR_NAME          TQC_SERVICE_PROVIDERS.SPR_NAME%TYPE, 
SPR_PHYSICAL_ADDRESS             TQC_SERVICE_PROVIDERS.SPR_PHYSICAL_ADDRESS%TYPE,

 SPR_POSTAL_ADDRESS          TQC_SERVICE_PROVIDERS.SPR_POSTAL_ADDRESS%TYPE,
SPR_PHONE         TQC_SERVICE_PROVIDERS.SPR_PHONE%TYPE, 
SPR_FAX          TQC_SERVICE_PROVIDERS.SPR_FAX%TYPE, 
SPR_EMAIL             TQC_SERVICE_PROVIDERS.SPR_EMAIL%TYPE,

SPR_CREATED_BY          TQC_SERVICE_PROVIDERS.SPR_CREATED_BY%TYPE,
SPR_DATE_CREATED         TQC_SERVICE_PROVIDERS.SPR_DATE_CREATED%TYPE, 
SPR_STATUS_REMARKS          TQC_SERVICE_PROVIDERS.SPR_STATUS_REMARKS%TYPE, 
SPR_STATUS             TQC_SERVICE_PROVIDERS.SPR_STATUS%TYPE,

SPR_PIN_NUMBER          TQC_SERVICE_PROVIDERS.SPR_PIN_NUMBER%TYPE,
SPR_MOBILE_NO         TQC_SERVICE_PROVIDERS.SPR_MOBILE_NO%TYPE, 
SPR_INHOUSE          TQC_SERVICE_PROVIDERS.SPR_INHOUSE%TYPE, 
SPR_SMS_NUMBER             TQC_SERVICE_PROVIDERS.SPR_SMS_NUMBER%TYPE

); 
TYPE service_provider_ref IS REF CURSOR RETURN service_provider_rec;
 PROCEDURE getServiceProvider(v_spr_name IN VARCHAR2,
  v_service_provider_ref OUT service_provider_ref,
  v_spr_spt_code IN NUMBER);
  
  TYPE systemrpt_rec IS RECORD(
RPT_CODE          tqc_system_reports.RPT_CODE%TYPE,
RPT_NAME          tqc_system_reports.RPT_NAME%TYPE, 
RPT_DESCRIPTION          tqc_system_reports.RPT_DESCRIPTION%TYPE,
RPT_ACTIVE          tqc_system_reports.RPT_ACTIVE%TYPE
); 
TYPE systemrpt_ref IS REF CURSOR RETURN systemrpt_rec;
FUNCTION getReportsAssigned (v_rpt_rsm_code IN NUMBER)
   RETURN systemrpt_ref;
   FUNCTION getReportsUnAssigned (v_rpt_rsm_code IN NUMBER)
   RETURN systemrpt_ref;
 TYPE SystemRptModules_rec IS RECORD(
   SRM_CODE          tqc_sys_report_modules.SRM_CODE%TYPE,
SRM_NAME          tqc_sys_report_modules.SRM_NAME%TYPE, 
SRM_DESC          tqc_sys_report_modules.SRM_DESC%TYPE, 
SRM_SYS_CODE          tqc_sys_report_modules.SRM_SYS_CODE%TYPE, 
SYS_NAME             tqc_systems.SYS_NAME%TYPE

); 
TYPE SystemRptModules_ref IS REF CURSOR RETURN SystemRptModules_rec;

FUNCTION getSystemRptModules RETURN SystemRptModules_ref ;

TYPE systemrptsubmodules_rec IS RECORD(
   RSM_CODE          tqc_sys_rpt_sub_modules.RSM_CODE%TYPE,
RSM_NAME          tqc_sys_rpt_sub_modules.RSM_NAME%TYPE, 
RSM_DESC          tqc_sys_rpt_sub_modules.RSM_DESC%TYPE
); 
TYPE systemrptsubmodules_ref IS REF CURSOR RETURN systemrptsubmodules_rec;

FUNCTION getsystemrptsubmodules(v_rsm_srm_code IN NUMBER) RETURN systemrptsubmodules_ref ;

TYPE campaigns_rec IS RECORD(
 CMP_CODE          TQC_CAMPAIGNS.CMP_CODE%TYPE,
CMP_DATE          TQC_CAMPAIGNS.CMP_DATE%TYPE, 
CMP_NAME          TQC_CAMPAIGNS.CMP_NAME%TYPE,
CMP_TYPE          TQC_CAMPAIGNS.CMP_TYPE%TYPE,
CMP_STATUS          TQC_CAMPAIGNS.CMP_STATUS%TYPE
); 
TYPE campaigns_ref IS REF CURSOR RETURN campaigns_rec;
FUNCTION get_campaigns
   RETURN campaigns_ref;
    TYPE sectors_occup_rec IS RECORD(
    v_SEC_CODE     TQC_SECTORS.SEC_CODE%TYPE,
    v_SEC_SHT_DESC TQC_SECTORS.SEC_SHT_DESC%TYPE,
    v_SEC_NAME     TQC_SECTORS.SEC_NAME%TYPE,
    OCC_NAME       TQC_OCCUPATIONS.OCC_NAME%TYPE,
    OCC_CODE       TQC_OCCUPATIONS.OCC_CODE%TYPE);

  TYPE sectors_occup_ref IS REF CURSOR RETURN sectors_occup_rec;
  PROCEDURE get_sectors_occup(v_sectors_ref OUT sectors_occup_ref);
  PROCEDURE get_occupations(v_sect_code NUMBER,v_sectors_ref OUT sectors_ref);
  
  
   TYPE All_towns_rec IS RECORD(
    TWN_CODE     TQC_TOWNS.TWN_CODE%TYPE,
    TWN_COU_CODE TQC_TOWNS.TWN_COU_CODE%TYPE,
    TWN_SHT_DESC     TQC_TOWNS.TWN_SHT_DESC%TYPE,
    TWN_NAME       TQC_TOWNS.TWN_NAME%TYPE);

  TYPE All_towns_ref IS REF CURSOR RETURN All_towns_rec;
  FUNCTION get_All_towns
   RETURN All_towns_ref;
    FUNCTION get_sms_template(V_msgt_sys_code IN NUMBER) RETURN sms_templates_ref;
    FUNCTION get_email_template(V_msgt_sys_code IN NUMBER) RETURN sms_templates_ref;
    
    
     TYPE allsubsidiary_rec IS RECORD(
    spr_name    varchar2(200),
    spt_name varchar2(200),
    spr_sht_desc     varchar2(200),
    spr_physical_address       varchar2(200),
    spr_postal_address       varchar2(200),
     spr_email       varchar2(200));

  TYPE allsubsidiary_ref IS REF CURSOR RETURN allsubsidiary_rec;
  FUNCTION getallsubsidiary (v_clnt_code IN NUMBER)
   RETURN allsubsidiary_ref;
    TYPE rating_starndards_rec IS RECORD(
   ORS_CODE          TQC_ORG_RATING_STARNDARDS.ORS_CODE%TYPE,
ORS_DESC         TQC_ORG_RATING_STARNDARDS.ORS_DESC%TYPE
); 
TYPE rating_starndards_ref IS REF CURSOR RETURN rating_starndards_rec;
FUNCTION get_rating_starndards(v_ors_rorg_code NUMBER) RETURN rating_starndards_ref;
 TYPE ratings_rec IS RECORD(
   RORG_CODE          TQC_RATING_ORGANIZATIONS.RORG_CODE%TYPE,
RORG_DESC         TQC_RATING_ORGANIZATIONS.RORG_DESC%TYPE, 
RORG_SHT_DESC          TQC_RATING_ORGANIZATIONS.RORG_SHT_DESC%TYPE
); 
TYPE ratings_ref IS REF CURSOR RETURN ratings_rec;
FUNCTION get_ratings RETURN ratings_ref;
  TYPE AllSmsMessages_rec IS RECORD(
   SMS_CODE          TQC_SMS_MESSAGES.SMS_CODE%TYPE,
SMS_SYS_CODE         TQC_SMS_MESSAGES.SMS_SYS_CODE%TYPE, 
SMS_SYS_MODULE          TQC_SMS_MESSAGES.SMS_SYS_MODULE%TYPE, 
SMS_CLNT_CODE             TQC_SMS_MESSAGES.SMS_CLNT_CODE%TYPE,

 SMS_AGN_CODE          TQC_SMS_MESSAGES.SMS_AGN_CODE%TYPE,
SMS_POL_CODE         TQC_SMS_MESSAGES.SMS_POL_CODE%TYPE, 
SMS_POL_NO          TQC_SMS_MESSAGES.SMS_POL_NO%TYPE, 
SMS_CLM_NO             TQC_SMS_MESSAGES.SMS_CLM_NO%TYPE,

SMS_TEL_NO          TQC_SMS_MESSAGES.SMS_TEL_NO%TYPE,
SMS_MSG         TQC_SMS_MESSAGES.SMS_MSG%TYPE, 
SMS_STATUS          TQC_SMS_MESSAGES.SMS_STATUS%TYPE, 
SMS_PREPARED_BY             TQC_SMS_MESSAGES.SMS_PREPARED_BY%TYPE,
SMS_PREPARED_DATE          TQC_SMS_MESSAGES.SMS_PREPARED_DATE%TYPE,
SMS_SEND_DATE         TQC_SMS_MESSAGES.SMS_SEND_DATE%TYPE, 
SMS_QUOT_CODE          TQC_SMS_MESSAGES.SMS_QUOT_CODE%TYPE, 
SMS_QUOT_NO             TQC_SMS_MESSAGES.SMS_QUOT_NO%TYPE,
SMS_USR_CODE        TQC_SMS_MESSAGES.SMS_USR_CODE%TYPE,
SMS_SENT_RESPONSE     TQC_SMS_MESSAGES.SMS_SENT_RESPONSE%TYPE,

CLIENT             VARCHAR2(200),
AGN_NAME        tqc_agencies.AGN_NAME%TYPE,
USR_USERNAME     tqc_users.USR_USERNAME%TYPE,
EMAIL_ADDRESS varchar2(200),
EMAIL_SUBJ  VARCHAR2(200)
); 
TYPE AllSmsMessages_ref IS REF CURSOR RETURN AllSmsMessages_rec;
FUNCTION getAllSmsMessages(v_sms_sys_code in number) RETURN AllSmsMessages_ref;
 FUNCTION getAllEmailMessages(v_email_sys_code in number,v_email_status IN VARCHAR2) RETURN AllSmsMessages_ref;
 TYPE locationdetails_rec IS RECORD(
LOC_CODE          tqc_locations.LOC_CODE%TYPE,
LOC_TWN_CODE          tqc_locations.LOC_TWN_CODE%TYPE,
LOC_SHT_DESC          tqc_locations.LOC_SHT_DESC%TYPE,
LOC_NAME          tqc_locations.LOC_NAME%TYPE
); 
TYPE locationdetails_ref IS REF CURSOR RETURN locationdetails_rec;  

FUNCTION getLocationDetails(v_loc_twn_code IN NUMBER)
   RETURN locationdetails_ref;
   FUNCTION getorgdivlevelstype
    RETURN orgdivlevelstype_ref;
    
     TYPE bussiness_person_rec IS RECORD(
BPN_CODE          TQC_BUSINESS_PERSONS.BPN_CODE%TYPE,
BPN_ID_NO          TQC_BUSINESS_PERSONS.BPN_ID_NO%TYPE,
BPN_ADDRESS          TQC_BUSINESS_PERSONS.BPN_ADDRESS%TYPE,
BPN_TEL          TQC_BUSINESS_PERSONS.BPN_TEL%TYPE,
BPN_MOBILE_NO          TQC_BUSINESS_PERSONS.BPN_MOBILE_NO%TYPE,
BPN_EMAIL          TQC_BUSINESS_PERSONS.BPN_EMAIL%TYPE,
BPN_TYPE          TQC_BUSINESS_PERSONS.BPN_TYPE%TYPE,
BPN_ZIP          TQC_BUSINESS_PERSONS.BPN_ZIP%TYPE,

BPN_TOWN          TQC_BUSINESS_PERSONS.BPN_TOWN%TYPE,
BPN_COU_CODE          TQC_BUSINESS_PERSONS.BPN_COU_CODE%TYPE,
BPN_NAME          TQC_BUSINESS_PERSONS.BPN_NAME%TYPE,
BPN_PIN          TQC_BUSINESS_PERSONS.BPN_PIN%TYPE,

BPN_BBR_CODE          TQC_BUSINESS_PERSONS.BPN_BBR_CODE%TYPE,
BPN_BANK_ACC_NO          TQC_BUSINESS_PERSONS.BPN_BANK_ACC_NO%TYPE,
BPN_BBR_SWIFT_CODE          TQC_BUSINESS_PERSONS.BPN_BBR_SWIFT_CODE%TYPE,
BPN_REG_CLMT_CODE          TQC_BUSINESS_PERSONS.BPN_REG_CLMT_CODE%TYPE,
BBR_BRANCH_NAME          tqc_bank_branches.BBR_BRANCH_NAME%TYPE,
COU_NAME          tqc_countries.COU_NAME%TYPE,
 CLD_SURNAME   gin_claimants.CLD_SURNAME%TYPE
); 
TYPE bussiness_person_ref IS REF CURSOR RETURN bussiness_person_rec;  
 FUNCTION get_bussiness_person(v_bpn_payee_type IN VARCHAR2,v_bpn_clnt_code in number)
   RETURN bussiness_person_ref;
   
   TYPE bank_branches_val_rec IS RECORD(
BBR_CODE          tqc_bank_branches.BBR_CODE%TYPE,
BBR_BNK_CODE          tqc_bank_branches.BBR_BNK_CODE%TYPE,
BBR_BRANCH_NAME          tqc_bank_branches.BBR_BRANCH_NAME%TYPE,
BBR_REMARKS          tqc_bank_branches.BBR_REMARKS%TYPE,
BBR_SHT_DESC          tqc_bank_branches.BBR_SHT_DESC%TYPE
); 
TYPE bank_branches_val_ref IS REF CURSOR RETURN bank_branches_val_rec;  
 FUNCTION get_bank_branches_val
   RETURN bank_branches_val_ref;
   
    TYPE registered_claimants_rec IS RECORD(
REG_CLMT_CODE          GIN_RGSTD_CLAIMANTS.REG_CLMT_CODE%TYPE,
CLD_CODE          gin_claimants.CLD_CODE%TYPE,
CLD_ID_NO          gin_claimants.CLD_ID_NO%TYPE,
CLD_OTHER_NAMES          gin_claimants.CLD_OTHER_NAMES%TYPE
);
TYPE registered_claimants_ref IS REF CURSOR RETURN registered_claimants_rec;  
FUNCTION get_registered_claimants
   RETURN registered_claimants_ref;
   
     TYPE Agent_Type_rec IS RECORD(
AGN_AGENT_TYPE          TQC_AGENCIES.AGN_AGENT_TYPE%TYPE
);
TYPE Agent_Type_ref IS REF CURSOR RETURN Agent_Type_rec; 
FUNCTION get_Agent_Type(v_agn_act_code in number)
   RETURN Agent_Type_ref;
   FUNCTION get_Agent_Groups
   RETURN Agent_Type_ref;
   
   TYPE occupation_rec IS RECORD(
OCC_CODE          tqc_occupations.OCC_CODE%TYPE,
OCC_SEC_CODE          tqc_occupations.OCC_SEC_CODE%TYPE,
OCC_SHT_DESC          tqc_occupations.OCC_SHT_DESC%TYPE,
OCC_NAME          tqc_occupations.OCC_NAME%TYPE
);
TYPE occupation_ref IS REF CURSOR RETURN occupation_rec;  
FUNCTION get_occupation
   RETURN occupation_ref;
  
PROCEDURE get_postal_codes(v_locations_ref OUT locations_ref);
END TQC_SETUPS_CURSOR_back; 
/