CREATE TABLE TQ_CRM.TQC_QRTZ_BLOB_TRIGGERS
(
  SCHED_NAME     VARCHAR2(120 BYTE)             NOT NULL,
  TRIGGER_NAME   VARCHAR2(200 BYTE)             NOT NULL,
  TRIGGER_GROUP  VARCHAR2(200 BYTE)             NOT NULL,
  BLOB_DATA      BLOB
);

CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_BLOB_TRIG_PK ON TQ_CRM.TQC_QRTZ_BLOB_TRIGGERS
(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);


ALTER TABLE TQ_CRM.TQC_QRTZ_BLOB_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_BLOB_TRIG_PK
 PRIMARY KEY
 (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));

CREATE TABLE TQ_CRM.TQC_QRTZ_CALENDARS
(
  SCHED_NAME     VARCHAR2(120 BYTE)             NOT NULL,
  CALENDAR_NAME  VARCHAR2(200 BYTE)             NOT NULL,
  CALENDAR       BLOB                           NOT NULL
);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_CALENDARS_PK ON TQ_CRM.TQC_QRTZ_CALENDARS
(SCHED_NAME, CALENDAR_NAME);


ALTER TABLE TQ_CRM.TQC_QRTZ_CALENDARS ADD (
  CONSTRAINT TQC_QRTZ_CALENDARS_PK
 PRIMARY KEY
 (SCHED_NAME, CALENDAR_NAME));
 
 
 --------------


CREATE TABLE TQ_CRM.TQC_QRTZ_CRON_TRIGGERS
(
  SCHED_NAME       VARCHAR2(120 BYTE)           NOT NULL,
  TRIGGER_NAME     VARCHAR2(200 BYTE)           NOT NULL,
  TRIGGER_GROUP    VARCHAR2(200 BYTE)           NOT NULL,
  CRON_EXPRESSION  VARCHAR2(120 BYTE)           NOT NULL,
  TIME_ZONE_ID     VARCHAR2(80 BYTE)
);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_CRON_TRIG_PK ON TQ_CRM.TQC_QRTZ_CRON_TRIGGERS
(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);


ALTER TABLE TQ_CRM.TQC_QRTZ_CRON_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_CRON_TRIG_PK
 PRIMARY KEY
 (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));


-------------------

CREATE TABLE TQ_CRM.TQC_QRTZ_FIRED_TRIGGERS
(
  SCHED_NAME         VARCHAR2(120 BYTE)         NOT NULL,
  ENTRY_ID           VARCHAR2(95 BYTE)          NOT NULL,
  TRIGGER_NAME       VARCHAR2(200 BYTE)         NOT NULL,
  TRIGGER_GROUP      VARCHAR2(200 BYTE)         NOT NULL,
  INSTANCE_NAME      VARCHAR2(200 BYTE)         NOT NULL,
  FIRED_TIME         NUMBER(13)                 NOT NULL,
  PRIORITY           NUMBER(13)                 NOT NULL,
  STATE              VARCHAR2(16 BYTE)          NOT NULL,
  JOB_NAME           VARCHAR2(200 BYTE),
  JOB_GROUP          VARCHAR2(200 BYTE),
  IS_NONCONCURRENT   VARCHAR2(1 BYTE),
  REQUESTS_RECOVERY  VARCHAR2(1 BYTE)
);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_FTINJOB_REQ_RCVRY ON TQ_CRM.TQC_QRTZ_FIRED_TRIGGERS
(SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_FT_JG ON TQ_CRM.TQC_QRTZ_FIRED_TRIGGERS
(SCHED_NAME, JOB_GROUP);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_FT_J_G ON TQ_CRM.TQC_QRTZ_FIRED_TRIGGERS
(SCHED_NAME, JOB_NAME, JOB_GROUP);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_FT_TG ON TQ_CRM.TQC_QRTZ_FIRED_TRIGGERS
(SCHED_NAME, TRIGGER_GROUP);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_FT_TRIG_INST_NAME ON TQ_CRM.TQC_QRTZ_FIRED_TRIGGERS
(SCHED_NAME, INSTANCE_NAME);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_FT_T_G ON TQ_CRM.TQC_QRTZ_FIRED_TRIGGERS
(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_FIRED_TRIGGER_PK ON TQ_CRM.TQC_QRTZ_FIRED_TRIGGERS
(SCHED_NAME, ENTRY_ID);


ALTER TABLE TQ_CRM.TQC_QRTZ_FIRED_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_FIRED_TRIGGER_PK
 PRIMARY KEY
 (SCHED_NAME, ENTRY_ID));
 -----------------
 
 CREATE TABLE TQ_CRM.TQC_QRTZ_JOB_DETAILS
(
  SCHED_NAME         VARCHAR2(120 BYTE)         NOT NULL,
  JOB_NAME           VARCHAR2(200 BYTE)         NOT NULL,
  JOB_GROUP          VARCHAR2(200 BYTE)         NOT NULL,
  DESCRIPTION        VARCHAR2(250 BYTE),
  JOB_CLASS_NAME     VARCHAR2(250 BYTE)         NOT NULL,
  IS_DURABLE         VARCHAR2(1 BYTE)           NOT NULL,
  IS_NONCONCURRENT   VARCHAR2(1 BYTE)           NOT NULL,
  IS_UPDATE_DATA     VARCHAR2(1 BYTE)           NOT NULL,
  REQUESTS_RECOVERY  VARCHAR2(1 BYTE)           NOT NULL,
  JOB_DATA           BLOB
);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_J_GRP ON TQ_CRM.TQC_QRTZ_JOB_DETAILS
(SCHED_NAME, JOB_GROUP);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_J_REQ_RECOVERY ON TQ_CRM.TQC_QRTZ_JOB_DETAILS
(SCHED_NAME, REQUESTS_RECOVERY);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_JOB_DETAILS_PK ON TQ_CRM.TQC_QRTZ_JOB_DETAILS
(SCHED_NAME, JOB_NAME, JOB_GROUP);


ALTER TABLE TQ_CRM.TQC_QRTZ_JOB_DETAILS ADD (
  CONSTRAINT TQC_QRTZ_JOB_DETAILS_PK
 PRIMARY KEY
 (SCHED_NAME, JOB_NAME, JOB_GROUP));

-----------------
CREATE TABLE TQ_CRM.TQC_QRTZ_LOCKS
(
  SCHED_NAME  VARCHAR2(120 BYTE)                NOT NULL,
  LOCK_NAME   VARCHAR2(40 BYTE)                 NOT NULL
);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_LOCKS_PK ON TQ_CRM.TQC_QRTZ_LOCKS
(SCHED_NAME, LOCK_NAME);


ALTER TABLE TQ_CRM.TQC_QRTZ_LOCKS ADD (
  CONSTRAINT TQC_QRTZ_LOCKS_PK
 PRIMARY KEY
 (SCHED_NAME, LOCK_NAME));
 -------
 CREATE TABLE TQ_CRM.TQC_QRTZ_PAUSED_TRIGGER_GRPS
(
  SCHED_NAME     VARCHAR2(120 BYTE)             NOT NULL,
  TRIGGER_GROUP  VARCHAR2(200 BYTE)             NOT NULL
);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_PAUSED_TRIG_GRPS_PK ON TQ_CRM.TQC_QRTZ_PAUSED_TRIGGER_GRPS
(SCHED_NAME, TRIGGER_GROUP);


ALTER TABLE TQ_CRM.TQC_QRTZ_PAUSED_TRIGGER_GRPS ADD (
  CONSTRAINT TQC_QRTZ_PAUSED_TRIG_GRPS_PK
 PRIMARY KEY
 (SCHED_NAME, TRIGGER_GROUP));

--------------

CREATE TABLE TQ_CRM.TQC_QRTZ_SCHEDULER_STATE
(
  SCHED_NAME         VARCHAR2(120 BYTE)         NOT NULL,
  INSTANCE_NAME      VARCHAR2(200 BYTE)         NOT NULL,
  LAST_CHECKIN_TIME  NUMBER(13)                 NOT NULL,
  CHECKIN_INTERVAL   NUMBER(13)                 NOT NULL
);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_SCHEDULER_STATE_PK ON TQ_CRM.TQC_QRTZ_SCHEDULER_STATE
(SCHED_NAME, INSTANCE_NAME);


ALTER TABLE TQ_CRM.TQC_QRTZ_SCHEDULER_STATE ADD (
  CONSTRAINT TQC_QRTZ_SCHEDULER_STATE_PK
 PRIMARY KEY
 (SCHED_NAME, INSTANCE_NAME));
 
 
 CREATE TABLE TQ_CRM.TQC_QRTZ_SIMPLE_TRIGGERS
(
  SCHED_NAME       VARCHAR2(120 BYTE)           NOT NULL,
  TRIGGER_NAME     VARCHAR2(200 BYTE)           NOT NULL,
  TRIGGER_GROUP    VARCHAR2(200 BYTE)           NOT NULL,
  REPEAT_COUNT     NUMBER(7)                    NOT NULL,
  REPEAT_INTERVAL  NUMBER(12)                   NOT NULL,
  TIMES_TRIGGERED  NUMBER(10)                   NOT NULL
);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_SIMPLE_TRIG_PK ON TQ_CRM.TQC_QRTZ_SIMPLE_TRIGGERS
(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);


ALTER TABLE TQ_CRM.TQC_QRTZ_SIMPLE_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_SIMPLE_TRIG_PK
 PRIMARY KEY
 (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));


 
 --------------------
 CREATE TABLE TQ_CRM.TQC_QRTZ_SIMPROP_TRIGGERS
(
  SCHED_NAME     VARCHAR2(120 BYTE)             NOT NULL,
  TRIGGER_NAME   VARCHAR2(200 BYTE)             NOT NULL,
  TRIGGER_GROUP  VARCHAR2(200 BYTE)             NOT NULL,
  STR_PROP_1     VARCHAR2(512 BYTE),
  STR_PROP_2     VARCHAR2(512 BYTE),
  STR_PROP_3     VARCHAR2(512 BYTE),
  INT_PROP_1     NUMBER(10),
  INT_PROP_2     NUMBER(10),
  LONG_PROP_1    NUMBER(13),
  LONG_PROP_2    NUMBER(13),
  DEC_PROP_1     NUMBER(13,4),
  DEC_PROP_2     NUMBER(13,4),
  BOOL_PROP_1    VARCHAR2(1 BYTE),
  BOOL_PROP_2    VARCHAR2(1 BYTE)
);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_SIMPROP_TRIG_PK ON TQ_CRM.TQC_QRTZ_SIMPROP_TRIGGERS
(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);


ALTER TABLE TQ_CRM.TQC_QRTZ_SIMPROP_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_SIMPROP_TRIG_PK
 PRIMARY KEY
 (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));


 
 
 -------------------------
 CREATE TABLE TQ_CRM.TQC_QRTZ_TRIGGERS
(
  SCHED_NAME      VARCHAR2(120 BYTE)            NOT NULL,
  TRIGGER_NAME    VARCHAR2(200 BYTE)            NOT NULL,
  TRIGGER_GROUP   VARCHAR2(200 BYTE)            NOT NULL,
  JOB_NAME        VARCHAR2(200 BYTE)            NOT NULL,
  JOB_GROUP       VARCHAR2(200 BYTE)            NOT NULL,
  DESCRIPTION     VARCHAR2(250 BYTE),
  NEXT_FIRE_TIME  NUMBER(13),
  PREV_FIRE_TIME  NUMBER(13),
  PRIORITY        NUMBER(13),
  TRIGGER_STATE   VARCHAR2(16 BYTE)             NOT NULL,
  TRIGGER_TYPE    VARCHAR2(8 BYTE)              NOT NULL,
  START_TIME      NUMBER(13)                    NOT NULL,
  END_TIME        NUMBER(13),
  CALENDAR_NAME   VARCHAR2(200 BYTE),
  MISFIRE_INSTR   NUMBER(2),
  JOB_DATA        BLOB
);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_C ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, CALENDAR_NAME);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_G ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, TRIGGER_GROUP);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_J ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, JOB_NAME, JOB_GROUP);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_JG ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, JOB_GROUP);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_NEXT_FIRE_TIME ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, NEXT_FIRE_TIME);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_NFST_MISFIRGRP ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_NFT_MISFIRE ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_NFT_ST ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_NFT_ST_MISFIRE ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_N_G_STATE ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_N_STATE ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);


CREATE INDEX TQ_CRM.IDX_TQC_QRTZ_T_STATE ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, TRIGGER_STATE);


CREATE UNIQUE INDEX TQ_CRM.TQC_QRTZ_TRIGGER_PK ON TQ_CRM.TQC_QRTZ_TRIGGERS
(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);


ALTER TABLE TQ_CRM.TQC_QRTZ_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_TRIGGER_PK
 PRIMARY KEY
 (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP));

ALTER TABLE TQ_CRM.TQC_QRTZ_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_TRIGGER_TO_JOBS_FK 
 FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) 
 REFERENCES TQ_CRM.TQC_QRTZ_JOB_DETAILS (SCHED_NAME,JOB_NAME,JOB_GROUP));

ALTER TABLE TQ_CRM.TQC_QRTZ_CRON_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_CRON_TRIGS_TRIG_FK 
 FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) 
 REFERENCES TQ_CRM.TQC_QRTZ_TRIGGERS (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP));


ALTER TABLE TQ_CRM.TQC_QRTZ_SIMPLE_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_SIMPLES_TRIG_FK 
 FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) 
 REFERENCES TQ_CRM.TQC_QRTZ_TRIGGERS (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP));
 
 ALTER TABLE TQ_CRM.TQC_QRTZ_SIMPROP_TRIGGERS ADD (
  CONSTRAINT TQC_QRTZ_SIMPROP_TRIGS_TRIG_FK 
 FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) 
 REFERENCES TQ_CRM.TQC_QRTZ_TRIGGERS (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP));